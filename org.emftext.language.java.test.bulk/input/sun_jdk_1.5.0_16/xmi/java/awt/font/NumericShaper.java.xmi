<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xmlns:variables="http://www.emftext.org/java/variables" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../java.ecore#/5 http://www.emftext.org/java/instantiations ../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../java.ecore#/9 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/references ../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../java.ecore#/15 http://www.emftext.org/java/types ../../../java.ecore#/16 http://www.emftext.org/java/variables ../../../java.ecore#/17" name="NumericShaper.java">
  <comments>/*&#xA; * @(#)NumericShaper.java&#x9;1.10 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>awt</namespaces>
  <namespaces>font</namespaces>
  <classifiers xsi:type="classifiers:Class" name="NumericShaper">
    <members xsi:type="members:Field" name="key">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/** index of context for contextual shaping - values range from 0 to 18 */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="mask">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/** flag indicating whether to shape contextually (high bit) and which &#xA;     *  digit ranges to shape (bits 0-18) &#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="EUROPEAN">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Identifies the Latin-1 (European) and extended range, and &#xA;     *  Latin-1 (European) decimal base. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="ARABIC">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Identifies the ARABIC range and decimal base. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="EASTERN_ARABIC">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Identifies the ARABIC range and ARABIC_EXTENDED decimal base. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="DEVANAGARI">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Identifies the DEVANAGARI range and decimal base. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="BENGALI">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Identifies the BENGALI range and decimal base. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="GURMUKHI">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Identifies the GURMUKHI range and decimal base. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="GUJARATI">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Identifies the GUJARATI range and decimal base. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="ORIYA">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="7"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Identifies the ORIYA range and decimal base. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="TAMIL">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Identifies the TAMIL range and decimal base. Tamil does not have a &#xA;     *  decimal digit 0 so Latin-1 (European) 0 is used. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="TELUGU">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="9"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Identifies the TELUGU range and decimal base. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="KANNADA">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Identifies the KANNADA range and decimal base. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="MALAYALAM">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="11"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Identifies the MALAYALAM range and decimal base. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="THAI">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="12"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Identifies the THAI range and decimal base. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="LAO">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="13"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Identifies the LAO range and decimal base. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="TIBETAN">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="14"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Identifies the TIBETAN range and decimal base. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="MYANMAR">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="15"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Identifies the MYANMAR range and decimal base. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="ETHIOPIC">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Identifies the ETHIOPIC range and decimal base. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="KHMER">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="17"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Identifies the KHMER range and decimal base. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="MONGOLIAN">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="18"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Identifies the MONGOLIAN range and decimal base. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="ALL_RANGES">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="524287"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Identifies all ranges, for full contextual shaping. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="EUROPEAN_KEY">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="ARABIC_KEY">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="EASTERN_ARABIC_KEY">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="DEVANAGARI_KEY">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="BENGALI_KEY">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="GURMUKHI_KEY">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="GUJARATI_KEY">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="ORIYA_KEY">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="7"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="TAMIL_KEY">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="TELUGU_KEY">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="9"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="KANNADA_KEY">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="MALAYALAM_KEY">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="11"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="THAI_KEY">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="12"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="LAO_KEY">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="13"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="TIBETAN_KEY">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="14"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="MYANMAR_KEY">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="15"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="ETHIOPIC_KEY">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="KHMER_KEY">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="17"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="MONGOLIAN_KEY">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="18"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="NUM_KEYS">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="19"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="keyNames">
      <initialValue xsi:type="arrays:ArrayInstantiationByValues">
        <arrayInitializer>
          <initialValues xsi:type="references:StringReference" value="EUROPEAN"/>
          <initialValues xsi:type="references:StringReference" value="ARABIC"/>
          <initialValues xsi:type="references:StringReference" value="EASTERN_ARABIC"/>
          <initialValues xsi:type="references:StringReference" value="DEVANAGARI"/>
          <initialValues xsi:type="references:StringReference" value="BENGALI"/>
          <initialValues xsi:type="references:StringReference" value="GURMUKHI"/>
          <initialValues xsi:type="references:StringReference" value="GUJARATI"/>
          <initialValues xsi:type="references:StringReference" value="ORIYA"/>
          <initialValues xsi:type="references:StringReference" value="TAMIL"/>
          <initialValues xsi:type="references:StringReference" value="TELUGU"/>
          <initialValues xsi:type="references:StringReference" value="KANNADA"/>
          <initialValues xsi:type="references:StringReference" value="MALAYALAM"/>
          <initialValues xsi:type="references:StringReference" value="THAI"/>
          <initialValues xsi:type="references:StringReference" value="LAO"/>
          <initialValues xsi:type="references:StringReference" value="TIBETAN"/>
          <initialValues xsi:type="references:StringReference" value="MYANMAR"/>
          <initialValues xsi:type="references:StringReference" value="ETHIOPIC"/>
          <initialValues xsi:type="references:StringReference" value="KHMER"/>
          <initialValues xsi:type="references:StringReference" value="MONGOLIAN"/>
        </arrayInitializer>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="CONTEXTUAL_MASK">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="31"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="bases">
      <initialValue xsi:type="arrays:ArrayInstantiationByValues">
        <arrayInitializer>
          <comments>// MONGOLIAN</comments>
          <initialValues xsi:type="expressions:AdditiveExpression">
            <children xsi:type="literals:CharacterLiteral" value="92"/>
            <children xsi:type="literals:CharacterLiteral" value="92"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValues>
          <initialValues xsi:type="expressions:AdditiveExpression">
            <children xsi:type="literals:CharacterLiteral" value="92">
              <comments>// EUROPEAN</comments>
            </children>
            <children xsi:type="literals:CharacterLiteral" value="92"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValues>
          <initialValues xsi:type="expressions:AdditiveExpression">
            <children xsi:type="literals:CharacterLiteral" value="92">
              <comments>// ARABIC</comments>
            </children>
            <children xsi:type="literals:CharacterLiteral" value="92"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValues>
          <initialValues xsi:type="expressions:AdditiveExpression">
            <children xsi:type="literals:CharacterLiteral" value="92">
              <comments>// EASTERN_ARABIC</comments>
            </children>
            <children xsi:type="literals:CharacterLiteral" value="92"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValues>
          <initialValues xsi:type="expressions:AdditiveExpression">
            <children xsi:type="literals:CharacterLiteral" value="92">
              <comments>// DEVANAGARI</comments>
            </children>
            <children xsi:type="literals:CharacterLiteral" value="92"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValues>
          <initialValues xsi:type="expressions:AdditiveExpression">
            <children xsi:type="literals:CharacterLiteral" value="92">
              <comments>// BENGALI</comments>
            </children>
            <children xsi:type="literals:CharacterLiteral" value="92"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValues>
          <initialValues xsi:type="expressions:AdditiveExpression">
            <children xsi:type="literals:CharacterLiteral" value="92">
              <comments>// GURMUKHI</comments>
            </children>
            <children xsi:type="literals:CharacterLiteral" value="92"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValues>
          <initialValues xsi:type="expressions:AdditiveExpression">
            <children xsi:type="literals:CharacterLiteral" value="92">
              <comments>// GUJARATI</comments>
            </children>
            <children xsi:type="literals:CharacterLiteral" value="92"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValues>
          <initialValues xsi:type="expressions:AdditiveExpression">
            <children xsi:type="literals:CharacterLiteral" value="92">
              <comments>// ORIYA</comments>
            </children>
            <children xsi:type="literals:CharacterLiteral" value="92"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValues>
          <initialValues xsi:type="expressions:AdditiveExpression">
            <children xsi:type="literals:CharacterLiteral" value="92">
              <comments>// TAMIL - note missing zero</comments>
            </children>
            <children xsi:type="literals:CharacterLiteral" value="92"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValues>
          <initialValues xsi:type="expressions:AdditiveExpression">
            <children xsi:type="literals:CharacterLiteral" value="92">
              <comments>// TELUGU</comments>
            </children>
            <children xsi:type="literals:CharacterLiteral" value="92"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValues>
          <initialValues xsi:type="expressions:AdditiveExpression">
            <children xsi:type="literals:CharacterLiteral" value="92">
              <comments>// KANNADA</comments>
            </children>
            <children xsi:type="literals:CharacterLiteral" value="92"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValues>
          <initialValues xsi:type="expressions:AdditiveExpression">
            <children xsi:type="literals:CharacterLiteral" value="92">
              <comments>// MALAYALAM</comments>
            </children>
            <children xsi:type="literals:CharacterLiteral" value="92"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValues>
          <initialValues xsi:type="expressions:AdditiveExpression">
            <children xsi:type="literals:CharacterLiteral" value="92">
              <comments>// THAI</comments>
            </children>
            <children xsi:type="literals:CharacterLiteral" value="92"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValues>
          <initialValues xsi:type="expressions:AdditiveExpression">
            <children xsi:type="literals:CharacterLiteral" value="92">
              <comments>// LAO</comments>
            </children>
            <children xsi:type="literals:CharacterLiteral" value="92"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValues>
          <initialValues xsi:type="expressions:AdditiveExpression">
            <children xsi:type="literals:CharacterLiteral" value="92">
              <comments>// TIBETAN</comments>
            </children>
            <children xsi:type="literals:CharacterLiteral" value="92"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValues>
          <initialValues xsi:type="expressions:AdditiveExpression">
            <children xsi:type="literals:CharacterLiteral" value="92">
              <comments>// MYANMAR</comments>
            </children>
            <children xsi:type="literals:CharacterLiteral" value="92"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValues>
          <initialValues xsi:type="expressions:AdditiveExpression">
            <children xsi:type="literals:CharacterLiteral" value="92">
              <comments>// ETHIOPIC</comments>
            </children>
            <children xsi:type="literals:CharacterLiteral" value="92"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValues>
          <initialValues xsi:type="expressions:AdditiveExpression">
            <children xsi:type="literals:CharacterLiteral" value="92">
              <comments>// KHMER</comments>
            </children>
            <children xsi:type="literals:CharacterLiteral" value="92"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValues>
        </arrayInitializer>
      </initialValue>
      <typeReference xsi:type="types:Char"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="contexts">
      <initialValue xsi:type="arrays:ArrayInstantiationByValues">
        <arrayInitializer>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92">
            <comments>// 'EUROPEAN' (really latin-1 and extended)</comments>
          </initialValues>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92">
            <comments>// ARABIC</comments>
          </initialValues>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92">
            <comments>// EASTERN_ARABIC -- note overlap with arabic</comments>
          </initialValues>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92">
            <comments>// DEVANAGARI</comments>
          </initialValues>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92">
            <comments>// BENGALI</comments>
          </initialValues>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92">
            <comments>// GURMUKHI</comments>
          </initialValues>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92">
            <comments>// GUJARATI</comments>
          </initialValues>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92">
            <comments>// ORIYA</comments>
          </initialValues>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92">
            <comments>// TAMIL - note missing zero</comments>
          </initialValues>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92">
            <comments>// TELUGU</comments>
          </initialValues>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92">
            <comments>// KANNADA</comments>
          </initialValues>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92">
            <comments>// MALAYALAM</comments>
          </initialValues>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92">
            <comments>// THAI</comments>
          </initialValues>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92">
            <comments>// LAO</comments>
          </initialValues>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92">
            <comments>// TIBETAN</comments>
          </initialValues>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92">
            <comments>// MYANMAR</comments>
          </initialValues>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92">
            <comments>// ETHIOPIC</comments>
          </initialValues>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92">
            <comments>// KHMER</comments>
          </initialValues>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92">
            <comments>// MONGOLIAN</comments>
          </initialValues>
        </arrayInitializer>
      </initialValue>
      <typeReference xsi:type="types:Char"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// some ranges adjoin or overlap, rethink if we want to do a binary search on this</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="ctCache">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// assume most characters are near each other so probing the cache is infrequent,</comments>
        <comments>// and a linear probe is ok.</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="ctCacheLimit">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45">
          <next xsi:type="references:IdentifierReference"/>
        </children>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
        <additiveOperators xsi:type="operators:Subtraction"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:ClassMethod" name="getContextKey">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="c">
        <typeReference xsi:type="types:Char"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// warning, synchronize access to this as it modifies state</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:WhileLoop">
            <statement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:PrefixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46"/>
                <operator xsi:type="operators:MinusMinus"/>
              </expression>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <relationOperators xsi:type="operators:GreaterThan"/>
              </children>
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@parameters.0"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46"/>
                  </arraySelectors>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </children>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@parameters.0"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45">
            <arraySelectors>
              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46"/>
            </arraySelectors>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:WhileLoop">
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:PrefixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </expression>
              </statement>
              <condition xsi:type="expressions:ConditionalAndExpression">
                <children xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47"/>
                  <relationOperators xsi:type="operators:LessThan"/>
                </children>
                <children xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@parameters.0"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45">
                    <arraySelectors>
                      <position xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46"/>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </position>
                    </arraySelectors>
                  </children>
                  <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
                </children>
              </condition>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@parameters.0"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45">
              <arraySelectors>
                <position xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </position>
              </arraySelectors>
            </children>
            <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
          </condition>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Return">
        <comments>// if we're not in a known range, then return EUROPEAN as the range key</comments>
        <returnValue xsi:type="expressions:ConditionalExpression">
          <child xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:AndExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46"/>
                <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
              </expression>
            </children>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </child>
          <expressionIf xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:MultiplicativeExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
              <multiplicativeOperators xsi:type="operators:Division"/>
            </expression>
          </expressionIf>
          <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:Field" name="strongTable">
      <initialValue xsi:type="arrays:ArrayInstantiationByValues">
        <arrayInitializer>
          <comments>// last entry is sentinel, actually never checked</comments>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
          <initialValues xsi:type="literals:CharacterLiteral" value="92"/>
        </arrayInitializer>
      </initialValue>
      <typeReference xsi:type="types:Char"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/*&#xA;     * A range table of strong directional characters (types L, R, AL).&#xA;     * Even (left) indexes are starts of ranges of non-strong-directional (or undefined)&#xA;     * characters, odd (right) indexes are starts of ranges of strong directional&#xA;     * characters.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="stCache">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// use a binary search with a cache</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:ClassMethod" name="isStrongDirectional">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="c">
        <typeReference xsi:type="types:Char"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// warning, synchronize access to this as it modifies state</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.67">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@parameters.0"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49">
            <arraySelectors>
              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50"/>
            </arraySelectors>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.67">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@parameters.0"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49">
                      <next xsi:type="references:IdentifierReference"/>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    <additiveOperators xsi:type="operators:Subtraction"/>
                    <additiveOperators xsi:type="operators:Subtraction"/>
                  </arguments>
                </value>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@parameters.0"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49">
              <arraySelectors>
                <position xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </position>
              </arraySelectors>
            </children>
            <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
          </condition>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50"/>
              <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
            </expression>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getKeyFromMask">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="mask">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="key">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </variable>
      </statements>
      <statements xsi:type="statements:WhileLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:PrefixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52/@statements.0/@variable"/>
              <operator xsi:type="operators:PlusPlus"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52/@statements.0/@variable"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41"/>
            <relationOperators xsi:type="operators:LessThan"/>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AndExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52/@parameters.0"/>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:ShiftExpression">
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52/@statements.0/@variable"/>
                      <shiftOperators xsi:type="operators:LeftShift"/>
                    </expression>
                  </children>
                </expression>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="invalid shaper: "/>
                <children xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../lang/Integer.class.xmi#//@classifiers.0/@members.11"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52/@parameters.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../lang/Integer.class.xmi#//@classifiers.0"/>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52/@statements.0/@variable"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41"/>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AndExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52/@parameters.0"/>
                  <children xsi:type="expressions:UnaryExpression">
                    <operators xsi:type="operators:Complement"/>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:ShiftExpression">
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52/@statements.0/@variable"/>
                        <shiftOperators xsi:type="operators:LeftShift"/>
                      </expression>
                    </child>
                  </children>
                </expression>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getShaper">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="singleRange">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>/**&#xA;     * Returns a shaper for the provided unicode range.  All &#xA;     * Latin-1 (EUROPEAN) digits are converted &#xA;     * to the corresponding decimal unicode digits.&#xA;     * @param singleRange the specified Unicode range&#xA;     * @return a non-contextual numeric shaper &#xA;     * @throws IllegalArgumentException if the range is not a single range&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="key">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.52">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.53/@parameters.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0"/>
          </typeReference>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.53/@statements.0/@variable"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.53/@parameters.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getContextualShaper">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="ranges">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>/**&#xA;     * Returns a contextual shaper for the provided unicode range(s).  &#xA;     * Latin-1 (EUROPEAN) digits are converted to the decimal digits &#xA;     * corresponding to the range of the preceeding text, if the&#xA;     * range is one of the provided ranges.  Multiple ranges are &#xA;     * represented by or-ing the values together, such as, &#xA;     * &lt;code>NumericShaper.ARABIC | NumericShaper.THAI&lt;/code>.  The&#xA;     * shaper assumes EUROPEAN as the starting context, that is, if &#xA;     * EUROPEAN digits are encountered before any strong directional &#xA;     * text in the string, the context is presumed to be EUROPEAN, and &#xA;     * so the digits will not shape.&#xA;     * @param ranges the specified Unicode ranges&#xA;     * @return a shaper for the specified ranges&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.54/@parameters.0"/>
          <assignmentOperator xsi:type="operators:AssignmentOr"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0"/>
          </typeReference>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.54/@parameters.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getContextualShaper">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="ranges">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="defaultContext">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>/**&#xA;     * Returns a contextual shaper for the provided unicode range(s).  &#xA;     * Latin-1 (EUROPEAN) digits will be converted to the decimal digits &#xA;     * corresponding to the range of the preceeding text, if the&#xA;     * range is one of the provided ranges.  Multiple ranges are &#xA;     * represented by or-ing the values together, for example, &#xA;     * &lt;code>NumericShaper.ARABIC | NumericShaper.THAI&lt;/code>.  The&#xA;     * shaper uses defaultContext as the starting context.&#xA;     * @param ranges the specified Unicode ranges&#xA;     * @param defaultContext the starting context, such as &#xA;     * &lt;code>NumericShaper.EUROPEAN&lt;/code>&#xA;     * @return a shaper for the specified Unicode ranges.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="key">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.52">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55/@parameters.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55/@parameters.0"/>
          <assignmentOperator xsi:type="operators:AssignmentOr"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0"/>
          </typeReference>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55/@statements.0/@variable"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55/@parameters.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:Constructor" name="NumericShaper">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.56/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.56/@parameters.1"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="key">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="mask">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Private constructor.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="shape">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="text">
        <typeReference xsi:type="types:Char"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="start">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="count">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Converts the digits in the text that occur between start and &#xA;     * start + count.&#xA;     * @param text an array of characters to convert&#xA;     * @param start the index into &lt;code>text&lt;/code> to start &#xA;     *        converting&#xA;     * @param count the number of characters in &lt;code>text&lt;/code>&#xA;     *        to convert&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.62">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.1"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.2"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:MethodCall" target="//@classifiers.0/@members.59"/>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.61">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.1"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.2"/>
            </expression>
          </statements>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="shape">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="text">
        <typeReference xsi:type="types:Char"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="start">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="count">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="context">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Converts the digits in the text that occur between start and &#xA;     * start + count, using the provided context.&#xA;     * Context is ignored if the shaper is not a contextual shaper.&#xA;     * @param text an array of characters&#xA;     * @param start the index into &lt;code>text&lt;/code> to start&#xA;     *        converting&#xA;     * @param count the number of characters in &lt;code>text&lt;/code>&#xA;     *        to convert&#xA;     * @param context the context to which to convert the &#xA;     *        characters, such as &lt;code>NumericShaper.EUROPEAN&lt;/code>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="ctxKey">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.52">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.3"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.62">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.1"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.2"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@statements.0/@statement/@statements.0/@variable"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:MethodCall" target="//@classifiers.0/@members.59"/>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.61">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.1"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.2"/>
            </expression>
          </statements>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="isContextual">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns a &lt;code>boolean&lt;/code> indicating whether or not&#xA;     * this shaper shapes contextually.&#xA;     * @return &lt;code>true&lt;/code> if this shaper is contextual; &#xA;     *         &lt;code>false&lt;/code> otherwise.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43"/>
            </expression>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getRanges">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns an &lt;code>int&lt;/code> that ORs together the values for&#xA;     * all the ranges that will be shaped.&#xA;     * &lt;p>&#xA;     * For example, to check if a shaper shapes to Arabic, you would use the &#xA;     * following:&#xA;     * &lt;blockquote>&#xA;     *   &lt;code>if ((shaper.getRanges() &amp; shaper.ARABIC) != 0) { ... &lt;/code>&#xA;     * &lt;/blockquote>&#xA;     * @return the values for all the ranges to be shaped.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:AndExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
          <children xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Complement"/>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43"/>
          </children>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="shapeNonContextually">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="text">
        <typeReference xsi:type="types:Char"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="start">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="count">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Perform non-contextual shaping.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="base">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44">
            <arraySelectors>
              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
            </arraySelectors>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="minDigit">
          <typeReference xsi:type="types:Char"/>
          <initialValue xsi:type="expressions:ConditionalExpression">
            <child xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30"/>
            </child>
            <expressionIf xsi:type="literals:CharacterLiteral" value="92"/>
            <expressionElse xsi:type="literals:CharacterLiteral" value="92"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <comments>// Tamil doesn't use decimal zero</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="c">
              <typeReference xsi:type="types:Char"/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61/@parameters.0">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61/@statements.2/@init"/>
                </arraySelectors>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61/@parameters.0">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61/@statements.2/@init"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Char"/>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61/@statements.2/@statement/@statements.0/@variable"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61/@statements.0/@variable"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </expression>
                    </child>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61/@statements.2/@statement/@statements.0/@variable"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61/@statements.1/@variable"/>
                <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
              </children>
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61/@statements.2/@statement/@statements.0/@variable"/>
                <children xsi:type="literals:CharacterLiteral" value="92"/>
                <relationOperators xsi:type="operators:LessThanOrEqual"/>
              </children>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61/@statements.2/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61/@statements.2/@init/@additionalLocalVariables.0"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61/@parameters.1"/>
          <additionalLocalVariables name="e">
            <initialValue xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61/@parameters.1"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61/@parameters.2"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </initialValue>
          </additionalLocalVariables>
        </init>
        <updates xsi:type="expressions:PrefixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61/@statements.2/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="shapeContextually">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="text">
        <typeReference xsi:type="types:Char"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="start">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="count">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="ctxKey">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Perform contextual shaping.&#xA;     * Synchronized to protect caches used in getContextKey and isStrongDirectional.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Synchronized"/>
      <statements xsi:type="statements:Condition">
        <comments>// if we don't support this context, then don't shape</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.3"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:ShiftExpression">
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.3"/>
                  <shiftOperators xsi:type="operators:LeftShift"/>
                </expression>
              </children>
            </expression>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="lastkey">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.3"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="base">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44">
            <arraySelectors>
              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.3"/>
            </arraySelectors>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="minDigit">
          <typeReference xsi:type="types:Char"/>
          <initialValue xsi:type="expressions:ConditionalExpression">
            <child xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.3"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30"/>
            </child>
            <expressionIf xsi:type="literals:CharacterLiteral" value="92"/>
            <expressionElse xsi:type="literals:CharacterLiteral" value="92"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <comments>// Tamil doesn't use decimal zero</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="c">
              <typeReference xsi:type="types:Char"/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.0">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@statements.4/@init"/>
                </arraySelectors>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.0">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@statements.4/@init"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Char"/>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@statements.4/@statement/@statements.0/@variable"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@statements.2/@variable"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </expression>
                    </child>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@statements.4/@statement/@statements.0/@variable"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@statements.3/@variable"/>
                <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
              </children>
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@statements.4/@statement/@statements.0/@variable"/>
                <children xsi:type="literals:CharacterLiteral" value="92"/>
                <relationOperators xsi:type="operators:LessThanOrEqual"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="newkey">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.48">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@statements.4/@statement/@statements.0/@variable"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <comments>// Tamil doesn't use decimal zero</comments>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@statements.1/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@statements.4/@statement/@statements.2/@statement/@statements.0/@variable"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.3"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@statements.4/@statement/@statements.2/@statement/@statements.0/@variable"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.3"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:ConditionalAndExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:EqualityExpression">
                          <equalityOperators xsi:type="operators:NotEqual"/>
                          <children xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:AndExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                            </expression>
                          </children>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        </expression>
                      </children>
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ConditionalOrExpression">
                          <children xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:Equal"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.3"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
                          </children>
                          <children xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:Equal"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.3"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
                          </children>
                        </expression>
                      </children>
                    </condition>
                    <elseStatement xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.3"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:Equal"/>
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AndExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
                            <children xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:ShiftExpression">
                                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.3"/>
                                <shiftOperators xsi:type="operators:LeftShift"/>
                              </expression>
                            </children>
                          </expression>
                        </children>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </condition>
                    </elseStatement>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@statements.2/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.3"/>
                        </arraySelectors>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@statements.3/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:ConditionalExpression">
                        <child xsi:type="expressions:EqualityExpression">
                          <equalityOperators xsi:type="operators:Equal"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.3"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30"/>
                        </child>
                        <expressionIf xsi:type="literals:CharacterLiteral" value="92"/>
                        <expressionElse xsi:type="literals:CharacterLiteral" value="92"/>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@statements.4/@statement/@statements.2/@statement/@statements.0/@variable"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@statements.1/@variable"/>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="references:MethodCall" target="//@classifiers.0/@members.51">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@statements.4/@statement/@statements.0/@variable"/>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@statements.4/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@statements.4/@init/@additionalLocalVariables.0"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.1"/>
          <additionalLocalVariables name="e">
            <initialValue xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.1"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.2"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </initialValue>
          </additionalLocalVariables>
        </init>
        <updates xsi:type="expressions:PrefixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@statements.4/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="hashCode">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns a hash code for this shaper.&#xA;     * @return this shaper's hash code.&#xA;     * @see java.lang.Object#hashCode&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="equals">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="o">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns true if the specified object is an instance of &#xA;     * &lt;code>NumericShaper&lt;/code> and shapes identically to this one.&#xA;     * @param o the specified object to compare to this&#xA;     *          &lt;code>NumericShaper&lt;/code>&#xA;     * @return &lt;code>true&lt;/code> if &lt;code>o&lt;/code> is an instance&#xA;     *         of &lt;code>NumericShaper&lt;/code> and shapes in the same way;&#xA;     *         &lt;code>false&lt;/code> otherwise.&#xA;     * @see java.lang.Object#equals(java.lang.Object)&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:TryBlock">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="rhs">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences target="//@classifiers.0"/>
                </typeReference>
                <initialValue xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences target="//@classifiers.0"/>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.64/@parameters.0"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="expressions:ConditionalAndExpression">
                <children xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.64/@statements.0/@statement/@statements.0/@statements.0/@variable">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
                </children>
                <children xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.64/@statements.0/@statement/@statements.0/@statements.0/@variable">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
                </children>
              </returnValue>
            </statements>
            <catcheBlocks>
              <parameter name="e">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../lang/ClassCastException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.64/@parameters.0"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:BooleanLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="toString">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns a &lt;code>String&lt;/code> that describes this shaper. This method &#xA;     * is used for debugging purposes only.&#xA;     * @return a &lt;code>String&lt;/code> describing this shaper.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="buf">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../lang/StringBuffer.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../lang/StringBuffer.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/Object.class.xmi#//@classifiers.0/@members.6"/>
              </next>
              <self xsi:type="literals:Super"/>
            </arguments>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:StringReference" value="[contextual:"/>
              <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.59"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value=", context:"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
                    </arraySelectors>
                  </children>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:MethodCall" target="//@classifiers.0/@members.59"/>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
            <arguments xsi:type="references:StringReference" value=", range(s): "/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="first">
          <typeReference xsi:type="types:Boolean"/>
          <initialValue xsi:type="literals:BooleanLiteral" value="true"/>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65/@statements.4/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:BooleanLiteral"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65/@statements.4/@variable"/>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                        <arguments xsi:type="references:StringReference" value=", "/>
                      </next>
                    </expression>
                  </statements>
                </elseStatement>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65/@statements.5/@init"/>
                      </arraySelectors>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AndExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:ShiftExpression">
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65/@statements.5/@init"/>
                      <shiftOperators xsi:type="operators:LeftShift"/>
                    </expression>
                  </children>
                </expression>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65/@statements.5/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:PrefixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65/@statements.5/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
            <arguments xsi:type="literals:CharacterLiteral" value="93"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.55"/>
          </next>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getHighBit">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Returns the index of the high bit in value (assuming le, actually &#xA;     * power of 2 >= value). value must be positive.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Subtraction"/>
              <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="32"/>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@parameters.0"/>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          <relationOperators xsi:type="operators:LessThanOrEqual"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="bit">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@parameters.0"/>
              <assignmentOperator xsi:type="operators:AssignmentRightShift"/>
              <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@parameters.0"/>
          <children xsi:type="expressions:ShiftExpression">
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
            <shiftOperators xsi:type="operators:LeftShift"/>
          </children>
          <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@parameters.0"/>
              <assignmentOperator xsi:type="operators:AssignmentRightShift"/>
              <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@parameters.0"/>
          <children xsi:type="expressions:ShiftExpression">
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
            <shiftOperators xsi:type="operators:LeftShift"/>
          </children>
          <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@parameters.0"/>
              <assignmentOperator xsi:type="operators:AssignmentRightShift"/>
              <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@parameters.0"/>
          <children xsi:type="expressions:ShiftExpression">
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
            <shiftOperators xsi:type="operators:LeftShift"/>
          </children>
          <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@parameters.0"/>
              <assignmentOperator xsi:type="operators:AssignmentRightShift"/>
              <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@parameters.0"/>
          <children xsi:type="expressions:ShiftExpression">
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
            <shiftOperators xsi:type="operators:LeftShift"/>
          </children>
          <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@parameters.0"/>
              <assignmentOperator xsi:type="operators:AssignmentRightShift"/>
              <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@parameters.0"/>
          <children xsi:type="expressions:ShiftExpression">
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            <shiftOperators xsi:type="operators:LeftShift"/>
          </children>
          <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@statements.1/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="search">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:Char"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="array">
        <typeReference xsi:type="types:Char"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="start">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="length">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * fast binary search over subrange of array.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="power">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:ShiftExpression">
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.66">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67/@parameters.3"/>
            </children>
            <shiftOperators xsi:type="operators:LeftShift"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="extra">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67/@parameters.3"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67/@statements.0/@variable"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="probe">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67/@statements.0/@variable"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="index">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67/@parameters.2"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67/@statements.3/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67/@statements.1/@variable"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67/@parameters.0"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67/@parameters.1">
            <arraySelectors>
              <position xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67/@statements.3/@variable"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67/@statements.1/@variable"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </position>
            </arraySelectors>
          </children>
          <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
        </condition>
      </statements>
      <statements xsi:type="statements:WhileLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67/@statements.2/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentRightShift"/>
              <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67/@statements.3/@variable"/>
                  <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67/@statements.2/@variable"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67/@parameters.0"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67/@parameters.1">
                <arraySelectors>
                  <position xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67/@statements.3/@variable"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67/@statements.2/@variable"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </position>
                </arraySelectors>
              </children>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67/@statements.2/@variable"/>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
          <relationOperators xsi:type="operators:GreaterThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67/@statements.3/@variable"/>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * The &lt;code>NumericShaper&lt;/code> class is used to convert Latin-1 (European) &#xA; * digits to other Unicode decimal digits.  Users of this class will&#xA; * primarily be people who wish to present data using&#xA; * national digit shapes, but find it more convenient to represent the&#xA; * data internally using Latin-1 (European) digits.  This does not&#xA; * interpret the deprecated numeric shape selector character (U+206E).&#xA; * &lt;p>&#xA; * Instances of &lt;code>NumericShaper&lt;/code> are typically applied &#xA; * as attributes to text with the&#xA; * {@link TextAttribute#NUMERIC_SHAPING NUMERIC_SHAPING} attribute&#xA; * of the &lt;code>TextAttribute&lt;/code> class.  &#xA; * For example, this code snippet causes a &lt;code>TextLayout&lt;/code> to &#xA; * shape European digits to Arabic in an Arabic context:&lt;br>&#xA; * &lt;blockquote>&lt;pre>&#xA; * Map map = new HashMap();&#xA; * map.put(TextAttribute.NUMERIC_SHAPING, &#xA; *     NumericShaper.getContextualShaper(NumericShaper.ARABIC));&#xA; * FontRenderContext frc = ...;&#xA; * TextLayout layout = new TextLayout(text, map, frc);&#xA; * layout.draw(g2d, x, y);&#xA; * &lt;/pre>&lt;/blockquote>&#xA; * &lt;br>&#xA; * It is also possible to perform numeric shaping explicitly using instances &#xA; * of &lt;code>NumericShaper&lt;/code>, as this code snippet demonstrates:&lt;br>&#xA; * &lt;blockquote>&lt;pre>&#xA; *   char[] text = ...;&#xA; *   // shape all EUROPEAN digits (except zero) to ARABIC digits&#xA; *   NumericShaper shaper = NumericShaper.getShaper(NumericShaper.ARABIC);&#xA; *   shaper.shape(text, start, count);&#xA; *&#xA; *   // shape European digits to ARABIC digits if preceeding text is Arabic, or&#xA; *   // shape European digits to TAMIL digits if preceeding text is Tamil, or&#xA; *   // leave European digits alone if there is no preceeding text, or &#xA; *   // preceeding text is neither Arabic nor Tamil&#xA; *   NumericShaper shaper = &#xA; *      NumericShaper.getContextualShaper(NumericShaper.ARABIC | &#xA; *                                              NumericShaper.TAMIL,&#xA; *                                              NumericShaper.EUROPEAN);&#xA; *   shaper.shape(text. start, count);&#xA; * &lt;/pre>&lt;/blockquote>&#xA; *&#xA; * @since 1.4&#xA; */</comments>
    </annotationsAndModifiers>
    <annotationsAndModifiers xsi:type="modifiers:Final"/>
    <implements xsi:type="types:NamespaceClassifierReference">
      <namespaces>java</namespaces>
      <namespaces>io</namespaces>
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../io/Serializable.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
  </classifiers>
</containers:CompilationUnit>
