<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../java.ecore#/7 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="MultipleMaster.java">
  <comments>/*&#xA; * @(#)MultipleMaster.java&#x9;1.18 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>awt</namespaces>
  <namespaces>font</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <classifier xsi:type="classifiers:Class" href="../Font.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="MultipleMaster">
    <members xsi:type="members:InterfaceMethod" name="getNumDesignAxes">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * Returns the number of multiple master design controls.&#xA;   * Design axes include things like width, weight and optical scaling.&#xA;   * @return the number of multiple master design controls&#xA;   */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getDesignAxisRanges">
      <typeReference xsi:type="types:Float"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * Returns an array of design limits interleaved in the form [from->to]&#xA;   * for each axis.  For example,&#xA;   * design limits for weight could be from 0.1 to 1.0. The values are&#xA;   * returned in the same order returned by&#xA;   * &lt;code>getDesignAxisNames&lt;/code>.&#xA;   * @return an array of design limits for each axis.&#xA;   */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getDesignAxisDefaults">
      <typeReference xsi:type="types:Float"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * Returns an array of default design values for each axis.  For example,&#xA;   * the default value for weight could be 1.6. The values are returned&#xA;   * in the same order returned by &lt;code>getDesignAxisNames&lt;/code>.&#xA;   * @return an array of default design values for each axis.&#xA;   */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getDesignAxisNames">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * Returns the name for each design axis. This also determines the order in&#xA;   * which the values for each axis are returned.&#xA;   * @return an array containing the names of each design axis.&#xA;   */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="deriveMMFont">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../Font.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="axes">
        <typeReference xsi:type="types:Float"/>
        <arrayDimensionsBefore/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * Creates a new instance of a multiple master font based on the design&#xA;   * axis values contained in the specified array. The size of the array&#xA;   * must correspond to the value returned from &#xA;   * &lt;code>getNumDesignAxes&lt;/code> and the values of the array elements&#xA;   * must fall within limits specified by &#xA;   * &lt;code>getDesignAxesLimits&lt;/code>. In case of an error,&#xA;   * &lt;code>null&lt;/code> is returned.&#xA;   * @param axes an array containing axis values&#xA;   * @return a {@link Font} object that is an instance of&#xA;   * &lt;code>MultipleMaster&lt;/code> and is based on the design axis values&#xA;   * provided by &lt;code>axes&lt;/code>.&#xA;   */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="deriveMMFont">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../Font.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="glyphWidths">
        <typeReference xsi:type="types:Float"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="avgStemWidth">
        <typeReference xsi:type="types:Float"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="typicalCapHeight">
        <typeReference xsi:type="types:Float"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="typicalXHeight">
        <typeReference xsi:type="types:Float"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="italicAngle">
        <typeReference xsi:type="types:Float"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * Creates a new instance of a multiple master font based on detailed metric&#xA;   * information. In case of an error, &lt;code>null&lt;/code> is returned.&#xA;   * @param glyphWidths an array of floats representing the desired width&#xA;   * of each glyph in font space&#xA;   * @param avgStemWidth the average stem width for the overall font in&#xA;   * font space&#xA;   * @param typicalCapHeight the height of a typical upper case char&#xA;   * @param typicalXHeight the height of a typical lower case char&#xA;   * @param italicAngle the angle at which the italics lean, in degrees&#xA;   * counterclockwise from vertical&#xA;   * @return a &lt;code>Font&lt;/code> object that is an instance of &#xA;   * &lt;code>MultipleMaster&lt;/code> and is based on the specified metric&#xA;   * information.&#xA;   */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * The &lt;code>MultipleMaster&lt;/code> interface represents Type 1&#xA; * Multiple Master fonts.&#xA; * A particular {@link Font} object can implement this interface.&#xA; * @version 10 Feb 1997    &#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
