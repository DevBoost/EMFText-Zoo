<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/imports ../../java.ecore#/7 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/types ../../java.ecore#/16" name="PaintContext.java">
  <comments>/*&#xA; * @(#)PaintContext.java&#x9;1.25 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>awt</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <namespaces>color</namespaces>
    <classifier xsi:type="classifiers:Class" href="color/ColorSpace.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <namespaces>image</namespaces>
    <classifier xsi:type="classifiers:Class" href="image/Raster.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <namespaces>image</namespaces>
    <classifier xsi:type="classifiers:Class" href="image/ColorModel.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="PaintContext">
    <members xsi:type="members:InterfaceMethod" name="dispose">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Releases the resources allocated for the operation.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getColorModel">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * Returns the &lt;code>ColorModel&lt;/code> of the output.  Note that&#xA;     * this &lt;code>ColorModel&lt;/code> might be different from the hint&#xA;     * specified in the &#xA;     * {@link Paint#createContext(ColorModel, Rectangle, Rectangle2D,&#xA;AffineTransform, RenderingHints) createContext} method of&#xA;     * &lt;code>Paint&lt;/code>.  Not all &lt;code>PaintContext&lt;/code> objects are&#xA;     * capable of generating color patterns in an arbitrary&#xA;     * &lt;code>ColorModel&lt;/code>.&#xA;     * @return the &lt;code>ColorModel&lt;/code> of the output.&#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="image/ColorModel.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getRaster">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * Returns a &lt;code>Raster&lt;/code> containing the colors generated for &#xA;     * the graphics operation.&#xA;     * @param x the x coordinate of the area in device space&#xA;     * for which colors are generated.&#xA;     * @param y the y coordinate of the area in device space&#xA;     * for which colors are generated.&#xA;     * @param w the width of the area in device space &#xA;     * @param h the height of the area in device space&#xA;     * @return a &lt;code>Raster&lt;/code> representing the specified &#xA;     * rectangular area and containing the colors generated for&#xA;     * the graphics operation.&#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="image/Raster.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="y">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="w">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="h">
        <typeReference xsi:type="types:Int"/>
      </parameters>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * The &lt;code>PaintContext&lt;/code> interface defines the encapsulated &#xA; * and optimized environment to generate color patterns in device &#xA; * space for fill or stroke operations on a &#xA; * {@link Graphics2D}.  The &lt;code>PaintContext&lt;/code> provides&#xA; * the necessary colors for &lt;code>Graphics2D&lt;/code> operations in the &#xA; * form of a {@link Raster} associated with a {@link ColorModel}.  &#xA; * The &lt;code>PaintContext&lt;/code> maintains state for a particular paint &#xA; * operation.  In a multi-threaded environment, several&#xA; * contexts can exist simultaneously for a single {@link Paint} object.&#xA; * @see Paint&#xA; * @version 10 Feb 1997&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
