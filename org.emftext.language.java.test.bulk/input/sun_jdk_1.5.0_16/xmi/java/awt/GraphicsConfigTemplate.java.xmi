<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/imports ../../java.ecore#/7 http://www.emftext.org/java/literals ../../java.ecore#/9 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/types ../../java.ecore#/16" name="GraphicsConfigTemplate.java">
  <comments>/*&#xA; * @(#)GraphicsConfigTemplate.java&#x9;1.16 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>awt</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <classifier xsi:type="classifiers:Class" href="Component.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="GraphicsConfigTemplate">
    <members xsi:type="members:Constructor" name="GraphicsConfigTemplate">
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * This class is an abstract class so only subclasses can be&#xA;     * instantiated.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="REQUIRED">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Value used for &quot;Enum&quot; (Integer) type.  States that this&#xA;     * feature is required for the &lt;code>GraphicsConfiguration&lt;/code> &#xA;     * object.  If this feature is not available, do not select the&#xA;     * &lt;code>GraphicsConfiguration&lt;/code> object.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="PREFERRED">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Value used for &quot;Enum&quot; (Integer) type.  States that this&#xA;     * feature is desired for the &lt;code>GraphicsConfiguration&lt;/code> &#xA;     * object.  A selection with this feature is preferred over a&#xA;     * selection that does not include this feature, although both&#xA;     * selections can be considered valid matches.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="UNNECESSARY">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Value used for &quot;Enum&quot; (Integer) type.  States that this&#xA;     * feature is not necessary for the selection of the&#xA;     * &lt;code>GraphicsConfiguration&lt;/code> object.  A selection&#xA;     * without this feature is preferred over a selection that&#xA;     * includes this feature since it is not used. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getBestConfiguration">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="GraphicsConfiguration.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="gc">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="GraphicsConfiguration.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arrayDimensionsBefore/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the &quot;best&quot; configuration possible that passes the&#xA;     * criteria defined in the &lt;code>GraphicsConfigTemplate&lt;/code>.&#xA;     * @param gc the array of &lt;code>GraphicsConfiguration&lt;/code>&#xA;     * objects to choose from.&#xA;     * @return a &lt;code>GraphicsConfiguration&lt;/code> object that is&#xA;     * the best configuration possible.&#xA;     * @see GraphicsConfiguration&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="isGraphicsConfigSupported">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="gc">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="GraphicsConfiguration.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns a &lt;code>boolean&lt;/code> indicating whether or &#xA;     * not the specified &lt;code>GraphicsConfiguration&lt;/code> can be &#xA;     * used to create a drawing surface that supports the indicated&#xA;     * features.&#xA;     * @param gc the &lt;code>GraphicsConfiguration&lt;/code> object to test&#xA;     * @return &lt;code>true&lt;/code> if this &#xA;     * &lt;code>GraphicsConfiguration&lt;/code> object can be used to create&#xA;     * surfaces that support the indicated features; &#xA;     * &lt;code>false&lt;/code> if the &lt;code>GraphicsConfiguration&lt;/code> can&#xA;     * not be used to create a drawing surface usable by this Java(tm)&#xA;     * API.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * The &lt;code>GraphicsConfigTemplate&lt;/code> class is used to obtain a valid&#xA; * {@link GraphicsConfiguration}.  A user instantiates one of these&#xA; * objects and then sets all non-default attributes as desired.  The&#xA; * {@link GraphicsDevice#getBestConfiguration} method found in the&#xA; * {@link GraphicsDevice} class is then called with this&#xA; * &lt;code>GraphicsConfigTemplate&lt;/code>.  A valid &#xA; * &lt;code>GraphicsConfiguration&lt;/code> is returned that meets or exceeds&#xA; * what was requested in the &lt;code>GraphicsConfigTemplate&lt;/code>.&#xA; * @see GraphicsDevice&#xA; * @see GraphicsConfiguration&#xA; *&#xA; * @version &#x9;1.16, 12/19/03&#xA; * @since       1.2&#xA; */</comments>
    </annotationsAndModifiers>
    <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../io/Serializable.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
  </classifiers>
</containers:CompilationUnit>
