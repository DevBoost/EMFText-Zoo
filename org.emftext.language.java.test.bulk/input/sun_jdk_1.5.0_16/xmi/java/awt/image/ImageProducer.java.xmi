<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="ImageProducer.java">
  <comments>/*&#xA; * @(#)ImageProducer.java&#x9;1.20 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>awt</namespaces>
  <namespaces>image</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="ImageProducer">
    <members xsi:type="members:InterfaceMethod" name="addConsumer">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="ic">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="ImageConsumer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Registers an &lt;code>ImageConsumer&lt;/code> with the&#xA;     * &lt;code>ImageProducer&lt;/code> for access to the image data &#xA;     * during a later reconstruction of the &lt;code>Image&lt;/code>.  &#xA;     * The &lt;code>ImageProducer&lt;/code> may, at its discretion, &#xA;     * start delivering the image data to the consumer&#xA;     * using the &lt;code>ImageConsumer&lt;/code> interface immediately, &#xA;     * or when the next available image reconstruction is triggered &#xA;     * by a call to the &lt;code>startProduction&lt;/code> method.&#xA;     * @param ic the specified &lt;code>ImageConsumer&lt;/code>&#xA;     * @see #startProduction&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="isConsumer">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="ic">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="ImageConsumer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Determines if a specified &lt;code>ImageConsumer&lt;/code> &#xA;     * object is currently registered with this &#xA;     * &lt;code>ImageProducer&lt;/code> as one of its consumers.&#xA;     * @param ic the specified &lt;code>ImageConsumer&lt;/code>&#xA;     * @return &lt;code>true&lt;/code> if the specified &#xA;     *         &lt;code>ImageConsumer&lt;/code> is registered with&#xA;     *         this &lt;code>ImageProducer&lt;/code>;&#xA;     *         &lt;code>false&lt;/code> otherwise.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="removeConsumer">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="ic">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="ImageConsumer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Removes the specified &lt;code>ImageConsumer&lt;/code> object&#xA;     * from the list of consumers currently registered to&#xA;     * receive image data.  It is not considered an error&#xA;     * to remove a consumer that is not currently registered.&#xA;     * The &lt;code>ImageProducer&lt;/code> should stop sending data &#xA;     * to this consumer as soon as is feasible.&#xA;     * @param ic the specified &lt;code>ImageConsumer&lt;/code>&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="startProduction">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="ic">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="ImageConsumer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Registers the specified &lt;code>ImageConsumer&lt;/code> object&#xA;     * as a consumer and starts an immediate reconstruction of&#xA;     * the image data which will then be delivered to this&#xA;     * consumer and any other consumer which might have already&#xA;     * been registered with the producer.  This method differs&#xA;     * from the addConsumer method in that a reproduction of&#xA;     * the image data should be triggered as soon as possible.&#xA;     * @param ic the specified &lt;code>ImageConsumer&lt;/code>&#xA;     * @see #addConsumer&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="requestTopDownLeftRightResend">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="ic">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="ImageConsumer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Requests, on behalf of the &lt;code>ImageConsumer&lt;/code>, &#xA;     * that the &lt;code>ImageProducer&lt;/code> attempt to resend &#xA;     * the image data one more time in TOPDOWNLEFTRIGHT order &#xA;     * so that higher quality conversion algorithms which &#xA;     * depend on receiving pixels in order can be used to &#xA;     * produce a better output version of the image.  The &#xA;     * &lt;code>ImageProducer&lt;/code> is free to&#xA;     * ignore this call if it cannot resend the data in that&#xA;     * order.  If the data can be resent, the &#xA;     * &lt;code>ImageProducer&lt;/code> should respond by executing &#xA;     * the following minimum set of &lt;code>ImageConsumer&lt;/code>&#xA;     * method calls:&#xA;     * &lt;pre>&#xA;     *&#x9;ic.setHints(TOPDOWNLEFTRIGHT | &lt; otherhints >);&#xA;     *&#x9;ic.setPixels(...);&#x9;// As many times as needed&#xA;     *&#x9;ic.imageComplete();&#xA;     * &lt;/pre>&#xA;     * @param ic the specified &lt;code>ImageConsumer&lt;/code>&#xA;     * @see ImageConsumer#setHints&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * The interface for objects which can produce the image data for Images.&#xA; * Each image contains an ImageProducer which is used to reconstruct&#xA; * the image whenever it is needed, for example, when a new size of the&#xA; * Image is scaled, or when the width or height of the Image is being&#xA; * requested.&#xA; *&#xA; * @see ImageConsumer&#xA; *&#xA; * @version&#x9;1.20 12/19/03&#xA; * @author &#x9;Jim Graham&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
