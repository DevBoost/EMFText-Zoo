<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xmlns:variables="http://www.emftext.org/java/variables" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../java.ecore#/5 http://www.emftext.org/java/instantiations ../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../java.ecore#/9 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/references ../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../java.ecore#/15 http://www.emftext.org/java/types ../../../java.ecore#/16 http://www.emftext.org/java/variables ../../../java.ecore#/17" name="BandedSampleModel.java">
  <comments>/*&#xA; * @(#)BandedSampleModel.java&#x9;1.35 04/01/06&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <comments>/* ****************************************************************&#xA; ******************************************************************&#xA; ******************************************************************&#xA; *** COPYRIGHT (c) Eastman Kodak Company, 1997&#xA; *** As  an unpublished  work pursuant to Title 17 of the United&#xA; *** States Code.  All rights reserved.&#xA; ******************************************************************&#xA; ******************************************************************&#xA; ******************************************************************/</comments>
  <namespaces>java</namespaces>
  <namespaces>awt</namespaces>
  <namespaces>image</namespaces>
  <classifiers xsi:type="classifiers:Class" name="BandedSampleModel">
    <members xsi:type="members:Constructor" name="BandedSampleModel">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@parameters.0"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@parameters.1"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@parameters.2"/>
          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@parameters.1"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.20">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@parameters.3"/>
            </next>
          </arguments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.19">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@parameters.3"/>
            </next>
          </arguments>
          <callTarget xsi:type="literals:Super"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="dataType">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="w">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="h">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="numBands">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constructs a BandedSampleModel with the specified parameters.&#xA;     * The pixel stride will be one data element.  The scanline stride&#xA;     * will be the same as the width.  Each band will be stored in&#xA;     * a separate bank and all band offsets will be zero.&#xA;     * @param dataType  The data type for storing samples.&#xA;     * @param w &#x9;The width (in pixels) of the region of&#xA;     *                  image data described. &#xA;     * @param h &#x9;The height (in pixels) of the region of image&#xA;     *                  data described.&#xA;     * @param numBands  The number of bands for the image data.&#xA;     * @throws IllegalArgumentException if &lt;code>dataType&lt;/code> is not&#xA;     *         one of the supported data types&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="BandedSampleModel">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@parameters.0"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@parameters.1"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@parameters.2"/>
          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@parameters.3"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@parameters.4"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@parameters.5"/>
          <callTarget xsi:type="literals:Super"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="dataType">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="w">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="h">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="scanlineStride">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="bankIndices">
        <typeReference xsi:type="types:Int"/>
        <arrayDimensionsAfter/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="bandOffsets">
        <typeReference xsi:type="types:Int"/>
        <arrayDimensionsAfter/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constructs a BandedSampleModel with the specified parameters. &#xA;     * The number of bands will be inferred from the lengths of the&#xA;     * bandOffsets bankIndices arrays, which must be equal.  The pixel&#xA;     * stride will be one data element.&#xA;     * @param dataType  The data type for storing samples.&#xA;     * @param w &#x9;The width (in pixels) of the region of&#xA;     *                  image data described.&#xA;     * @param h &#x9;The height (in pixels) of the region of&#xA;     *                  image data described.&#xA;     * @param scanlineStride The line stride of the of the image data.&#xA;     * @param bankIndices The bank index for each band.&#xA;     * @param bandOffsets The band offset for each band.&#xA;     * @throws IllegalArgumentException if &lt;code>dataType&lt;/code> is not&#xA;     *         one of the supported data types&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="createCompatibleSampleModel">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="SampleModel.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="w">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="h">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Creates a new BandedSampleModel with the specified&#xA;     * width and height.  The new BandedSampleModel will have the same&#xA;     * number of bands, storage data type, and bank indices&#xA;     * as this BandedSampleModel.  The band offsets will be compressed&#xA;     * such that the offset between bands will be w*pixelStride and&#xA;     * the minimum of all of the band offsets is zero.&#xA;     * @param w the width of the resulting &lt;code>BandedSampleModel&lt;/code>&#xA;     * @param h the height of the resulting &lt;code>BandedSampleModel&lt;/code>&#xA;     * @return a new &lt;code>BandedSampleModel&lt;/code> with the specified&#xA;     *         width and height.&#xA;     * @throws IllegalArgumentException if &lt;code>w&lt;/code> or &#xA;     *         &lt;code>h&lt;/code> equals either&#xA;     *         &lt;code>Integer.MAX_VALUE&lt;/code> or&#xA;     *         &lt;code>Integer.MIN_VALUE&lt;/code>&#xA;     * @throws IllegalArgumentException if &lt;code>dataType&lt;/code> is not&#xA;     *         one of the supported data types&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="bandOffs">
          <typeReference xsi:type="types:Int"/>
          <arrayDimensionsBefore/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.10"/>
                <arguments xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.0"/>
                </arguments>
                <arguments xsi:type="expressions:MultiplicativeExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.0"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.1"/>
                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                </arguments>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.3"/>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:Int"/>
                <sizes xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference"/>
                  <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.0"/>
                </sizes>
              </value>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="sampleModel">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="SampleModel.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences target="//@classifiers.0"/>
            </typeReference>
            <arguments xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.3"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.0/@variable"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.2/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="createSubsetSampleModel">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="SampleModel.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="bands">
        <typeReference xsi:type="types:Int"/>
        <arrayDimensionsAfter/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Creates a new BandedSampleModel with a subset of the bands of this&#xA;     * BandedSampleModel.  The new BandedSampleModel can be&#xA;     * used with any DataBuffer that the existing BandedSampleModel&#xA;     * can be used with.  The new BandedSampleModel/DataBuffer&#xA;     * combination will represent an image with a subset of the bands&#xA;     * of the original BandedSampleModel/DataBuffer combination.&#xA;     * @throws RasterFormatException if the number of bands is greater than&#xA;     *                               the number of banks in this sample model.&#xA;     * @throws IllegalArgumentException if &lt;code>dataType&lt;/code> is not&#xA;     *         one of the supported data types &#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="RasterFormatException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:StringReference" value="There are only "/>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference"/>
                <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
              </children>
              <children xsi:type="references:StringReference" value=" bands"/>
              <additiveOperators xsi:type="operators:Addition"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </arguments>
          </throwable>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <children xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference"/>
            <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
          </children>
          <relationOperators xsi:type="operators:GreaterThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="newBankIndices">
          <typeReference xsi:type="types:Int"/>
          <arrayDimensionsAfter/>
          <initialValue xsi:type="arrays:ArrayInstantiationBySize">
            <typeReference xsi:type="types:Int"/>
            <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
              <next xsi:type="references:IdentifierReference"/>
            </sizes>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="newBandOffsets">
          <typeReference xsi:type="types:Int"/>
          <arrayDimensionsAfter/>
          <initialValue xsi:type="arrays:ArrayInstantiationBySize">
            <typeReference xsi:type="types:Int"/>
            <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
              <next xsi:type="references:IdentifierReference"/>
            </sizes>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.1/@variable">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.3/@init"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.3/@init"/>
                    </arraySelectors>
                  </position>
                </arraySelectors>
                <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.2/@variable">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.3/@init"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.3/@init"/>
                    </arraySelectors>
                  </position>
                </arraySelectors>
                <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.0"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.3/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.3/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0"/>
          </typeReference>
          <arguments xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.3"/>
            </next>
            <self xsi:type="literals:This"/>
          </arguments>
          <arguments xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.0"/>
          </arguments>
          <arguments xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.1"/>
          </arguments>
          <arguments xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.4"/>
            </next>
            <self xsi:type="literals:This"/>
          </arguments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.1/@variable"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.2/@variable"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="createDataBuffer">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Creates a DataBuffer that corresponds to this BandedSampleModel,&#xA;     * The DataBuffer's data type, number of banks, and size&#xA;     * will be consistent with this BandedSampleModel.&#xA;     * @throws IllegalArgumentException if &lt;code>dataType&lt;/code> is not&#xA;     *         one of the supported types.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="dataBuffer">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="size">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:MultiplicativeExpression">
            <children xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.4"/>
            </children>
            <children xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.1"/>
            </children>
            <multiplicativeOperators xsi:type="operators:Multiplication"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="DataBufferByte.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.1/@variable"/>
                <arguments xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.3"/>
                </arguments>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="DataBufferUShort.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.1/@variable"/>
                <arguments xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.3"/>
                </arguments>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.1"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="DataBufferShort.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.1/@variable"/>
                <arguments xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.3"/>
                </arguments>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.2"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="DataBufferInt.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.1/@variable"/>
                <arguments xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.3"/>
                </arguments>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.3"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="DataBufferFloat.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.1/@variable"/>
                <arguments xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.3"/>
                </arguments>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.4"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="DataBufferDouble.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.1/@variable"/>
                <arguments xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.3"/>
                </arguments>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.5"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="dataType is not one "/>
                <children xsi:type="references:StringReference" value="of the supported types."/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </throwable>
          </statements>
        </cases>
        <variable xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.3"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getDataElements">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="y">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="obj">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="data">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;     * Returns data for a single pixel in a primitive array of type&#xA;     * TransferType.  For a BandedSampleModel, this will be the same&#xA;     * as the data type, and samples will be returned one per array&#xA;     * element.  Generally, obj&#xA;     * should be passed in as null, so that the Object will be created&#xA;     * automatically and will be of the right primitive data type.&#xA;     * &lt;p>&#xA;     * The following code illustrates transferring data for one pixel from&#xA;     * DataBuffer &lt;code>db1&lt;/code>, whose storage layout is described by&#xA;     * BandedSampleModel &lt;code>bsm1&lt;/code>, to DataBuffer &lt;code>db2&lt;/code>,&#xA;     * whose storage layout is described by&#xA;     * BandedSampleModel &lt;code>bsm2&lt;/code>.&#xA;     * The transfer will generally be more efficient than using&#xA;     * getPixel/setPixel.&#xA;     * &lt;pre>&#xA;     * &#x9;     BandedSampleModel bsm1, bsm2;&#xA;     *&#x9;     DataBufferInt db1, db2;&#xA;     * &#x9;     bsm2.setDataElements(x, y, bsm1.getDataElements(x, y, null, db1),&#xA;     *                            db2);&#xA;     * &lt;/pre>&#xA;     * Using getDataElements/setDataElements to transfer between two&#xA;     * DataBuffer/SampleModel pairs is legitimate if the SampleModels have&#xA;     * the same number of bands, corresponding bands have the same number of&#xA;     * bits per sample, and the TransferTypes are the same.&#xA;     * &lt;p>&#xA;     * If obj is non-null, it should be a primitive array of type TransferType.&#xA;     * Otherwise, a ClassCastException is thrown.  An&#xA;     * ArrayIndexOutOfBoundsException may be thrown if the coordinates are&#xA;     * not in bounds, or if obj is non-null and is not large enough to hold&#xA;     * the pixel data.&#xA;     * @param x,&amp;nbsp;y The coordinates of the pixel location&#xA;     * @param obj       If non-null, a primitive array in which to return&#xA;     *                  the pixel data.&#xA;     * @param data      The DataBuffer containing the image data.&#xA;     * @return the data for the specified pixel.&#xA;     * @see #setDataElements(int, int, Object, DataBuffer)&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/ArrayIndexOutOfBoundsException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="Coordinate out of bounds!"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.0"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.1"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.0"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.0"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.1"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.1"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="type">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="SampleModel.class.xmi#//@classifiers.0/@members.11"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="numDataElems">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.22"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="pixelOffset">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="expressions:MultiplicativeExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.1"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.4"/>
              </children>
              <multiplicativeOperators xsi:type="operators:Multiplication"/>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.0"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="bdata">
              <typeReference xsi:type="types:Byte"/>
              <arrayDimensionsBefore/>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.0/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="arrays:ArrayInstantiationBySize">
                    <typeReference xsi:type="types:Byte"/>
                    <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.2/@variable"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.2"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.0/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Byte"/>
                    <arrayDimensionsBefore/>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.2"/>
                  </value>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.0/@statements.0/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.0/@statements.2/@init"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Byte"/>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="DataBuffer.class.xmi#//@classifiers.0/@members.24"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.0/@statements.2/@init"/>
                          </arraySelectors>
                          <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
                        </arguments>
                        <arguments xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.3/@variable"/>
                          <children xsi:type="references:IdentifierReference">
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.0/@statements.2/@init"/>
                            </arraySelectors>
                            <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.0"/>
                          </children>
                          <additiveOperators xsi:type="operators:Addition"/>
                        </arguments>
                      </next>
                    </child>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.0/@statements.2/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.2/@variable"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.0/@statements.2/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.2"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.0/@statements.0/@variable"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.1"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="sdata">
              <typeReference xsi:type="types:Short"/>
              <arrayDimensionsBefore/>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.2/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="arrays:ArrayInstantiationBySize">
                    <typeReference xsi:type="types:Short"/>
                    <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.2/@variable"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.2"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.2/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Short"/>
                    <arrayDimensionsBefore/>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.2"/>
                  </value>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.2/@statements.0/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.2/@statements.2/@init"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Short"/>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="DataBuffer.class.xmi#//@classifiers.0/@members.24"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.2/@statements.2/@init"/>
                          </arraySelectors>
                          <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
                        </arguments>
                        <arguments xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.3/@variable"/>
                          <children xsi:type="references:IdentifierReference">
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.2/@statements.2/@init"/>
                            </arraySelectors>
                            <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.0"/>
                          </children>
                          <additiveOperators xsi:type="operators:Addition"/>
                        </arguments>
                      </next>
                    </child>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.2/@statements.2/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.2/@variable"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.2/@statements.2/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.2"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.2/@statements.0/@variable"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.2"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="idata">
              <typeReference xsi:type="types:Int"/>
              <arrayDimensionsBefore/>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.3/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="arrays:ArrayInstantiationBySize">
                    <typeReference xsi:type="types:Int"/>
                    <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.2/@variable"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.2"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.3/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Int"/>
                    <arrayDimensionsBefore/>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.2"/>
                  </value>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.3/@statements.0/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.3/@statements.2/@init"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.3">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="DataBuffer.class.xmi#//@classifiers.0/@members.24"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.3/@statements.2/@init"/>
                        </arraySelectors>
                        <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
                      </arguments>
                      <arguments xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.3/@variable"/>
                        <children xsi:type="references:IdentifierReference">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.3/@statements.2/@init"/>
                          </arraySelectors>
                          <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.0"/>
                        </children>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </arguments>
                    </next>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.3/@statements.2/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.2/@variable"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.3/@statements.2/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.2"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.3/@statements.0/@variable"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.3"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="fdata">
              <typeReference xsi:type="types:Float"/>
              <arrayDimensionsBefore/>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.4/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="arrays:ArrayInstantiationBySize">
                    <typeReference xsi:type="types:Float"/>
                    <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.2/@variable"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.2"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.4/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Float"/>
                    <arrayDimensionsBefore/>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.2"/>
                  </value>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.4/@statements.0/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.4/@statements.2/@init"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.3">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="DataBuffer.class.xmi#//@classifiers.0/@members.28"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.4/@statements.2/@init"/>
                        </arraySelectors>
                        <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
                      </arguments>
                      <arguments xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.3/@variable"/>
                        <children xsi:type="references:IdentifierReference">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.4/@statements.2/@init"/>
                          </arraySelectors>
                          <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.0"/>
                        </children>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </arguments>
                    </next>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.4/@statements.2/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.2/@variable"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.4/@statements.2/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.2"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.4/@statements.0/@variable"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.4"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="ddata">
              <typeReference xsi:type="types:Double"/>
              <arrayDimensionsBefore/>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.5/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="arrays:ArrayInstantiationBySize">
                    <typeReference xsi:type="types:Double"/>
                    <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.2/@variable"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.2"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.5/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Double"/>
                    <arrayDimensionsBefore/>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.2"/>
                  </value>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.5/@statements.0/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.5/@statements.2/@init"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.3">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="DataBuffer.class.xmi#//@classifiers.0/@members.32"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.5/@statements.2/@init"/>
                        </arraySelectors>
                        <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
                      </arguments>
                      <arguments xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.3/@variable"/>
                        <children xsi:type="references:IdentifierReference">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.5/@statements.2/@init"/>
                          </arraySelectors>
                          <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.0"/>
                        </children>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </arguments>
                    </next>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.5/@statements.2/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.2/@variable"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.5/@statements.2/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.2"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@cases.5/@statements.0/@variable"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.5"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.2"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getPixel">
      <typeReference xsi:type="types:Int"/>
      <arrayDimensionsBefore/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="y">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="iArray">
        <typeReference xsi:type="types:Int"/>
        <arrayDimensionsAfter/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="data">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns all samples for the specified pixel in an int array.&#xA;     * ArrayIndexOutOfBoundsException may be thrown if the coordinates are&#xA;     * not in bounds.&#xA;     * @param x,&amp;nbsp;y The coordinates of the pixel location&#xA;     * @param iArray    If non-null, returns the samples in this array&#xA;     * @param data      The DataBuffer containing the image data &#xA;     * @return the samples for the specified pixel.&#xA;     * @see #setPixel(int, int, int[], DataBuffer)&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/ArrayIndexOutOfBoundsException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="Coordinate out of bounds!"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.1"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.0"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.1"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.1"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="pixels">
          <typeReference xsi:type="types:Int"/>
          <arrayDimensionsBefore/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.2"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.2"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:Int"/>
                <sizes xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.2"/>
                </sizes>
              </value>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="pixelOffset">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="expressions:MultiplicativeExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.1"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.4"/>
              </children>
              <multiplicativeOperators xsi:type="operators:Multiplication"/>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.1/@variable">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.4/@init"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.3">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="DataBuffer.class.xmi#//@classifiers.0/@members.24"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.4/@init"/>
                    </arraySelectors>
                    <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
                  </arguments>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.3/@variable"/>
                    <children xsi:type="references:IdentifierReference">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.4/@init"/>
                      </arraySelectors>
                      <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.0"/>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.4/@init"/>
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.2"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.4/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.1/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getPixels">
      <typeReference xsi:type="types:Int"/>
      <arrayDimensionsBefore/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="y">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="w">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="h">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="iArray">
        <typeReference xsi:type="types:Int"/>
        <arrayDimensionsAfter/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="data">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns all samples for the specified rectangle of pixels in&#xA;     * an int array, one sample per data array element.&#xA;     * ArrayIndexOutOfBoundsException may be thrown if the coordinates are&#xA;     * not in bounds.&#xA;     * @param x,&amp;nbsp;y The coordinates of the upper left pixel location&#xA;     * @param w         The width of the pixel rectangle&#xA;     * @param h         The height of the pixel rectangle&#xA;     * @param iArray    If non-null, returns the samples in this array&#xA;     * @param data      The DataBuffer containing the image data&#xA;     * @return the samples for the pixels within the specified region.&#xA;     * @see #setPixels(int, int, int, int, int[], DataBuffer)&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/ArrayIndexOutOfBoundsException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="Coordinate out of bounds!"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.0"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.1"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.0"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.2"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.0"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.1"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.3"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.1"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThan"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="pixels">
          <typeReference xsi:type="types:Int"/>
          <arrayDimensionsBefore/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.4"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.4"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:Int"/>
                <sizes xsi:type="expressions:MultiplicativeExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.2"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.3"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.2"/>
                  </children>
                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                </sizes>
              </value>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="lineOffset">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="expressions:AdditiveExpression">
                <children xsi:type="expressions:MultiplicativeExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.1"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.4"/>
                  </children>
                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.0"/>
                <children xsi:type="references:IdentifierReference">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.3/@init"/>
                  </arraySelectors>
                  <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.0"/>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="srcOffset">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.3/@init"/>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="bank">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:IdentifierReference">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.3/@init"/>
                </arraySelectors>
                <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="pixelOffset">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.3/@statement/@statements.0/@variable"/>
                </variable>
              </statements>
              <statements xsi:type="statements:ForLoop">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.1/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.3/@statement/@statements.1/@variable"/>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.5">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="DataBuffer.class.xmi#//@classifiers.0/@members.24"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.3/@statement/@statements.2/@variable"/>
                          <arguments xsi:type="expressions:SuffixUnaryModificationExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.3/@statement/@statements.3/@statement/@statements.0/@variable"/>
                            <operator xsi:type="operators:PlusPlus"/>
                          </arguments>
                        </next>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.3/@statement/@statements.1/@variable"/>
                      <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                      <value xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.2"/>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.3/@statement/@statements.3/@statement/@statements.1/@init"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.2"/>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <init xsi:type="variables:LocalVariable" name="j">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </init>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.3/@statement/@statements.3/@statement/@statements.1/@init"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.3/@statement/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                  <value xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.4"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.3/@statement/@statements.3/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.3"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.3/@statement/@statements.3/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.3/@init"/>
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.2"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="k">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.3/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.1/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getSample">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="y">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="b">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="data">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns as int the sample in a specified band for the pixel&#xA;     * located at (x,y).&#xA;     * ArrayIndexOutOfBoundsException may be thrown if the coordinates are&#xA;     * not in bounds.&#xA;     * @param x,&amp;nbsp;y The coordinates of the pixel location&#xA;     * @param b         The band to return&#xA;     * @param data      The DataBuffer containing the image data&#xA;     * @return the sample in the specified band for the specified pixel.&#xA;     * @see #setSample(int, int, int, int, DataBuffer)&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <comments>// Bounds check for 'b' will be performed automatically</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/ArrayIndexOutOfBoundsException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="Coordinate out of bounds!"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.1"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.0"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.1"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.1"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="sample">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.3">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="DataBuffer.class.xmi#//@classifiers.0/@members.24"/>
              <arguments xsi:type="references:IdentifierReference">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.2"/>
                </arraySelectors>
                <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
              </arguments>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="expressions:MultiplicativeExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.1"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.4"/>
                  </children>
                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
                <children xsi:type="references:IdentifierReference">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.2"/>
                  </arraySelectors>
                  <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.0"/>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.1/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getSampleFloat">
      <typeReference xsi:type="types:Float"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="y">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="b">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="data">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the sample in a specified band&#xA;     * for the pixel located at (x,y) as a float.&#xA;     * ArrayIndexOutOfBoundsException may be thrown if the coordinates are&#xA;     * not in bounds.&#xA;     * @param x,&amp;nbsp;y Thecoordinates of the pixel location&#xA;     * @param b         The band to return&#xA;     * @param data      The DataBuffer containing the image data&#xA;     * @return a float value that represents the sample in the specified&#xA;     * band for the specified pixel.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <comments>// Bounds check for 'b' will be performed automatically</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/ArrayIndexOutOfBoundsException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="Coordinate out of bounds!"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.0"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.1"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.0"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.0"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.1"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.1"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="sample">
          <typeReference xsi:type="types:Float"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.3">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="DataBuffer.class.xmi#//@classifiers.0/@members.28"/>
              <arguments xsi:type="references:IdentifierReference">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.2"/>
                </arraySelectors>
                <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
              </arguments>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="expressions:MultiplicativeExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.1"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.4"/>
                  </children>
                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.0"/>
                <children xsi:type="references:IdentifierReference">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.2"/>
                  </arraySelectors>
                  <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.0"/>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.1/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getSampleDouble">
      <typeReference xsi:type="types:Double"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="y">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="b">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="data">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the sample in a specified band&#xA;     * for a pixel located at (x,y) as a double.&#xA;     * ArrayIndexOutOfBoundsException may be thrown if the coordinates are&#xA;     * not in bounds.&#xA;     * @param x,&amp;nbsp;y The coordinates of the pixel location&#xA;     * @param b         The band to return&#xA;     * @param data      The DataBuffer containing the image data&#xA;     * @return a double value that represents the sample in the specified&#xA;     * band for the specified pixel.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <comments>// Bounds check for 'b' will be performed automatically</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/ArrayIndexOutOfBoundsException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="Coordinate out of bounds!"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.0"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.1"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.0"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.0"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.1"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.1"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="sample">
          <typeReference xsi:type="types:Double"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.3">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="DataBuffer.class.xmi#//@classifiers.0/@members.32"/>
              <arguments xsi:type="references:IdentifierReference">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.2"/>
                </arraySelectors>
                <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
              </arguments>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="expressions:MultiplicativeExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.1"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.4"/>
                  </children>
                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.0"/>
                <children xsi:type="references:IdentifierReference">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.2"/>
                  </arraySelectors>
                  <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.0"/>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.1/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getSamples">
      <typeReference xsi:type="types:Int"/>
      <arrayDimensionsBefore/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="y">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="w">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="h">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="b">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="iArray">
        <typeReference xsi:type="types:Int"/>
        <arrayDimensionsAfter/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="data">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the samples in a specified band for the specified rectangle&#xA;     * of pixels in an int array, one sample per data array element.&#xA;     * ArrayIndexOutOfBoundsException may be thrown if the coordinates are&#xA;     * not in bounds.&#xA;     * @param x,&amp;nbsp;y The coordinates of the upper left pixel location&#xA;     * @param w         The width of the pixel rectangle&#xA;     * @param h         The height of the pixel rectangle&#xA;     * @param b         The band to return&#xA;     * @param iArray    If non-null, returns the samples in this array&#xA;     * @param data      The DataBuffer containing the image data&#xA;     * @return the samples in the specified band for the pixels within&#xA;     * the specified region.&#xA;     * @see #setSamples(int, int, int, int, int, int[], DataBuffer)&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <comments>// Bounds check for 'b' will be performed automatically</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/ArrayIndexOutOfBoundsException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="Coordinate out of bounds!"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.0"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.1"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.0"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.2"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.0"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.1"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.3"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.1"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThan"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="samples">
          <typeReference xsi:type="types:Int"/>
          <arrayDimensionsAfter/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.5"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.5"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:Int"/>
                <sizes xsi:type="expressions:MultiplicativeExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.2"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.3"/>
                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                </sizes>
              </value>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="lineOffset">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="expressions:MultiplicativeExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.1"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.4"/>
              </children>
              <multiplicativeOperators xsi:type="operators:Multiplication"/>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.0"/>
            <children xsi:type="references:IdentifierReference">
              <arraySelectors>
                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.4"/>
              </arraySelectors>
              <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.0"/>
            </children>
            <additiveOperators xsi:type="operators:Addition"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="srcOffset">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="bank">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference">
            <arraySelectors>
              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.4"/>
            </arraySelectors>
            <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="sampleOffset">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.3/@variable"/>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.1/@variable">
                    <arraySelectors>
                      <position xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.4/@variable"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </position>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.6">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="DataBuffer.class.xmi#//@classifiers.0/@members.24"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.5/@variable"/>
                      <arguments xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.6/@statement/@statements.0/@variable"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </arguments>
                    </next>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.6/@statement/@statements.1/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.2"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="j">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.6/@statement/@statements.1/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.3/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.4"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.6/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.3"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.6/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.1/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setDataElements">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="y">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="obj">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="data">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;     * Sets the data for a single pixel in the specified DataBuffer from a&#xA;     * primitive array of type TransferType.  For a BandedSampleModel,&#xA;     * this will be the same as the data type, and samples are transferred&#xA;     * one per array element.&#xA;     * &lt;p>&#xA;     * The following code illustrates transferring data for one pixel from&#xA;     * DataBuffer &lt;code>db1&lt;/code>, whose storage layout is described by&#xA;     * BandedSampleModel &lt;code>bsm1&lt;/code>, to DataBuffer &lt;code>db2&lt;/code>,&#xA;     * whose storage layout is described by&#xA;     * BandedSampleModel &lt;code>bsm2&lt;/code>.&#xA;     * The transfer will generally be more efficient than using&#xA;     * getPixel/setPixel.&#xA;     * &lt;pre>&#xA;     * &#x9;     BandedSampleModel bsm1, bsm2;&#xA;     *&#x9;     DataBufferInt db1, db2;&#xA;     * &#x9;     bsm2.setDataElements(x, y, bsm1.getDataElements(x, y, null, db1),&#xA;     *                            db2);&#xA;     * &lt;/pre>&#xA;     * Using getDataElements/setDataElements to transfer between two&#xA;     * DataBuffer/SampleModel pairs is legitimate if the SampleModels have&#xA;     * the same number of bands, corresponding bands have the same number of&#xA;     * bits per sample, and the TransferTypes are the same.&#xA;     * &lt;p>&#xA;     * obj must be a primitive array of type TransferType.  Otherwise,&#xA;     * a ClassCastException is thrown.  An&#xA;     * ArrayIndexOutOfBoundsException may be thrown if the coordinates are&#xA;     * not in bounds, or if obj is not large enough to hold the pixel data.&#xA;     * @param x,&amp;nbsp;y The coordinates of the pixel location&#xA;     * @param obj       If non-null, returns the primitive array in this&#xA;     *                  object&#xA;     * @param data      The DataBuffer containing the image data&#xA;     * @see #getDataElements(int, int, Object, DataBuffer)&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/ArrayIndexOutOfBoundsException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="Coordinate out of bounds!"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.0"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.1"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.0"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.0"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.1"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.1"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="type">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="SampleModel.class.xmi#//@classifiers.0/@members.11"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="numDataElems">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.22"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="pixelOffset">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="expressions:MultiplicativeExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.1"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.4"/>
              </children>
              <multiplicativeOperators xsi:type="operators:Multiplication"/>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.0"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="barray">
              <typeReference xsi:type="types:Byte"/>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Byte"/>
                <arrayDimensionsBefore/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.2"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="DataBuffer.class.xmi#//@classifiers.0/@members.26"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.0/@statements.1/@init"/>
                      </arraySelectors>
                      <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
                    </arguments>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.3/@variable"/>
                      <children xsi:type="references:IdentifierReference">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.0/@statements.1/@init"/>
                        </arraySelectors>
                        <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.0"/>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                    <arguments xsi:type="expressions:AndExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.0/@statements.0/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.0/@statements.1/@init"/>
                        </arraySelectors>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.0/@statements.1/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.2/@variable"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.0/@statements.1/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.1"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="sarray">
              <typeReference xsi:type="types:Short"/>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Short"/>
                <arrayDimensionsBefore/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.2"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="DataBuffer.class.xmi#//@classifiers.0/@members.26"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.2/@statements.1/@init"/>
                      </arraySelectors>
                      <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
                    </arguments>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.3/@variable"/>
                      <children xsi:type="references:IdentifierReference">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.2/@statements.1/@init"/>
                        </arraySelectors>
                        <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.0"/>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                    <arguments xsi:type="expressions:AndExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.2/@statements.0/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.2/@statements.1/@init"/>
                        </arraySelectors>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.2/@statements.1/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.2/@variable"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.2/@statements.1/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.2"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="iarray">
              <typeReference xsi:type="types:Int"/>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Int"/>
                <arrayDimensionsBefore/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.2"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="DataBuffer.class.xmi#//@classifiers.0/@members.26"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.3/@statements.1/@init"/>
                      </arraySelectors>
                      <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
                    </arguments>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.3/@variable"/>
                      <children xsi:type="references:IdentifierReference">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.3/@statements.1/@init"/>
                        </arraySelectors>
                        <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.0"/>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.3/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.3/@statements.1/@init"/>
                      </arraySelectors>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.3/@statements.1/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.2/@variable"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.3/@statements.1/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.3"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="farray">
              <typeReference xsi:type="types:Float"/>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Float"/>
                <arrayDimensionsBefore/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.2"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="DataBuffer.class.xmi#//@classifiers.0/@members.30"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.4/@statements.1/@init"/>
                      </arraySelectors>
                      <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
                    </arguments>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.3/@variable"/>
                      <children xsi:type="references:IdentifierReference">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.4/@statements.1/@init"/>
                        </arraySelectors>
                        <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.0"/>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.4/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.4/@statements.1/@init"/>
                      </arraySelectors>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.4/@statements.1/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.2/@variable"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.4/@statements.1/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.4"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="darray">
              <typeReference xsi:type="types:Double"/>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Double"/>
                <arrayDimensionsBefore/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.2"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="DataBuffer.class.xmi#//@classifiers.0/@members.34"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.5/@statements.1/@init"/>
                      </arraySelectors>
                      <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
                    </arguments>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.3/@variable"/>
                      <children xsi:type="references:IdentifierReference">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.5/@statements.1/@init"/>
                        </arraySelectors>
                        <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.0"/>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.5/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.5/@statements.1/@init"/>
                      </arraySelectors>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.5/@statements.1/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.2/@variable"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@cases.5/@statements.1/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.5"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.1/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setPixel">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="y">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="iArray">
        <typeReference xsi:type="types:Int"/>
        <arrayDimensionsAfter/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="data">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Sets a pixel in the DataBuffer using an int array of samples for input.&#xA;     * ArrayIndexOutOfBoundsException may be thrown if the coordinates are&#xA;     * not in bounds.&#xA;     * @param x,&amp;nbsp;y The coordinates of the pixel location&#xA;     * @param iArray    The input samples in an int array&#xA;     * @param data      The DataBuffer containing the image data&#xA;     * @see #getPixel(int, int, int[], DataBuffer)&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/ArrayIndexOutOfBoundsException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="Coordinate out of bounds!"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.1"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.0"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.1"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.1"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="pixelOffset">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="expressions:MultiplicativeExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.1"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.4"/>
              </children>
              <multiplicativeOperators xsi:type="operators:Multiplication"/>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="DataBuffer.class.xmi#//@classifiers.0/@members.26"/>
                <arguments xsi:type="references:IdentifierReference">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.2/@init"/>
                  </arraySelectors>
                  <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
                </arguments>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.1/@variable"/>
                  <children xsi:type="references:IdentifierReference">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.2/@init"/>
                    </arraySelectors>
                    <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.0"/>
                  </children>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.2">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.2/@init"/>
                  </arraySelectors>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.2/@init"/>
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.2"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.2/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setPixels">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="y">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="w">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="h">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="iArray">
        <typeReference xsi:type="types:Int"/>
        <arrayDimensionsAfter/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="data">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Sets all samples for a rectangle of pixels from an int array containing&#xA;     * one sample per array element.&#xA;     * ArrayIndexOutOfBoundsException may be thrown if the coordinates are&#xA;     * not in bounds.&#xA;     * @param x,&amp;nbsp;y The coordinates of the upper left pixel location&#xA;     * @param w         The width of the pixel rectangle&#xA;     * @param h         The height of the pixel rectangle&#xA;     * @param iArray    The input samples in an int array&#xA;     * @param data      The DataBuffer containing the image data&#xA;     * @see #getPixels(int, int, int, int, int[], DataBuffer)&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/ArrayIndexOutOfBoundsException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="Coordinate out of bounds!"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.1"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.2"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.0"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.1"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.3"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.1"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThan"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="lineOffset">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="expressions:AdditiveExpression">
                <children xsi:type="expressions:MultiplicativeExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.1"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.4"/>
                  </children>
                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0"/>
                <children xsi:type="references:IdentifierReference">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.1/@init"/>
                  </arraySelectors>
                  <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.0"/>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="srcOffset">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.1/@init"/>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="bank">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:IdentifierReference">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.1/@init"/>
                </arraySelectors>
                <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="pixelOffset">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.1/@statement/@statements.0/@variable"/>
                </variable>
              </statements>
              <statements xsi:type="statements:ForLoop">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.5">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="DataBuffer.class.xmi#//@classifiers.0/@members.26"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.1/@statement/@statements.2/@variable"/>
                        <arguments xsi:type="expressions:SuffixUnaryModificationExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.1/@statement/@statements.3/@statement/@statements.0/@variable"/>
                          <operator xsi:type="operators:PlusPlus"/>
                        </arguments>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.4">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.1/@statement/@statements.1/@variable"/>
                          </arraySelectors>
                        </arguments>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.1/@statement/@statements.1/@variable"/>
                      <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                      <value xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.2"/>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.1/@statement/@statements.3/@statement/@statements.1/@init"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.2"/>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <init xsi:type="variables:LocalVariable" name="j">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </init>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.1/@statement/@statements.3/@statement/@statements.1/@init"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.1/@statement/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                  <value xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.4"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.1/@statement/@statements.3/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.3"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.1/@statement/@statements.3/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.1/@init"/>
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.2"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="k">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.1/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setSample">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="y">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="b">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="s">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="data">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Sets a sample in the specified band for the pixel located at (x,y)&#xA;     * in the DataBuffer using an int for input.&#xA;     * ArrayIndexOutOfBoundsException may be thrown if the coordinates are&#xA;     * not in bounds.&#xA;     * @param x,&amp;nbsp;y The coordinates of the pixel location&#xA;     * @param b         The band to set&#xA;     * @param s         The input sample as an int&#xA;     * @param data      The DataBuffer containing the image data&#xA;     * @see #getSample(int, int, int, DataBuffer)&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <comments>// Bounds check for 'b' will be performed automatically</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/ArrayIndexOutOfBoundsException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="Coordinate out of bounds!"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@parameters.0"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@parameters.1"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@parameters.0"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.0"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@parameters.1"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.1"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@parameters.4">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="DataBuffer.class.xmi#//@classifiers.0/@members.26"/>
            <arguments xsi:type="references:IdentifierReference">
              <arraySelectors>
                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@parameters.2"/>
              </arraySelectors>
              <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
            </arguments>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="expressions:MultiplicativeExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@parameters.1"/>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.4"/>
                </children>
                <multiplicativeOperators xsi:type="operators:Multiplication"/>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@parameters.0"/>
              <children xsi:type="references:IdentifierReference">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@parameters.2"/>
                </arraySelectors>
                <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.0"/>
              </children>
              <additiveOperators xsi:type="operators:Addition"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@parameters.3"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setSample">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="y">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="b">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="s">
        <typeReference xsi:type="types:Float"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="data">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Sets a sample in the specified band for the pixel located at (x,y)&#xA;     * in the DataBuffer using a float for input.&#xA;     * ArrayIndexOutOfBoundsException may be thrown if the coordinates are&#xA;     * not in bounds.&#xA;     * @param x,&amp;nbsp;y The coordinates of the pixel location&#xA;     * @param b         The band to set&#xA;     * @param s         The input sample as a float&#xA;     * @param data      The DataBuffer containing the image data&#xA;     * @see #getSample(int, int, int, DataBuffer)&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <comments>// Bounds check for 'b' will be performed automatically</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/ArrayIndexOutOfBoundsException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="Coordinate out of bounds!"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.0"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.1"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.0"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.0"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.1"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.1"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.4">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="DataBuffer.class.xmi#//@classifiers.0/@members.30"/>
            <arguments xsi:type="references:IdentifierReference">
              <arraySelectors>
                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.2"/>
              </arraySelectors>
              <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
            </arguments>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="expressions:MultiplicativeExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.1"/>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.4"/>
                </children>
                <multiplicativeOperators xsi:type="operators:Multiplication"/>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.0"/>
              <children xsi:type="references:IdentifierReference">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.2"/>
                </arraySelectors>
                <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.0"/>
              </children>
              <additiveOperators xsi:type="operators:Addition"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.3"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setSample">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="y">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="b">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="s">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="data">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Sets a sample in the specified band for the pixel located at (x,y)&#xA;     * in the DataBuffer using a double for input.&#xA;     * ArrayIndexOutOfBoundsException may be thrown if the coordinates are&#xA;     * not in bounds.&#xA;     * @param x,&amp;nbsp;y The coordinates of the pixel location&#xA;     * @param b         The band to set  &#xA;     * @param s         The input sample as a double&#xA;     * @param data      The DataBuffer containing the image data&#xA;     * @see #getSample(int, int, int, DataBuffer)&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <comments>// Bounds check for 'b' will be performed automatically</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/ArrayIndexOutOfBoundsException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="Coordinate out of bounds!"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.0"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.1"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.0"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.0"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.1"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.1"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.4">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="DataBuffer.class.xmi#//@classifiers.0/@members.34"/>
            <arguments xsi:type="references:IdentifierReference">
              <arraySelectors>
                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.2"/>
              </arraySelectors>
              <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
            </arguments>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="expressions:MultiplicativeExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.1"/>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.4"/>
                </children>
                <multiplicativeOperators xsi:type="operators:Multiplication"/>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.0"/>
              <children xsi:type="references:IdentifierReference">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.2"/>
                </arraySelectors>
                <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.0"/>
              </children>
              <additiveOperators xsi:type="operators:Addition"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.3"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setSamples">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="y">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="w">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="h">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="b">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="iArray">
        <typeReference xsi:type="types:Int"/>
        <arrayDimensionsAfter/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="data">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Sets the samples in the specified band for the specified rectangle&#xA;     * of pixels from an int array containing one sample per data array element.&#xA;     * ArrayIndexOutOfBoundsException may be thrown if the coordinates are&#xA;     * not in bounds.&#xA;     * @param x,&amp;nbsp;y The coordinates of the upper left pixel location&#xA;     * @param w         The width of the pixel rectangle&#xA;     * @param h         The height of the pixel rectangle&#xA;     * @param b         The band to set&#xA;     * @param iArray    The input sample array&#xA;     * @param data      The DataBuffer containing the image data&#xA;     * @see #getSamples(int, int, int, int, int, int[], DataBuffer)&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <comments>// Bounds check for 'b' will be performed automatically</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/ArrayIndexOutOfBoundsException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="Coordinate out of bounds!"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.0"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.1"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.0"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.2"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.0"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.1"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.3"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="SampleModel.class.xmi#//@classifiers.0/@members.1"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThan"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="lineOffset">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="expressions:MultiplicativeExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.1"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.4"/>
              </children>
              <multiplicativeOperators xsi:type="operators:Multiplication"/>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.0"/>
            <children xsi:type="references:IdentifierReference">
              <arraySelectors>
                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.4"/>
              </arraySelectors>
              <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.0"/>
            </children>
            <additiveOperators xsi:type="operators:Addition"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="srcOffset">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="bank">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference">
            <arraySelectors>
              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.4"/>
            </arraySelectors>
            <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="sampleOffset">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.1/@variable"/>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.6">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="DataBuffer.class.xmi#//@classifiers.0/@members.26"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.3/@variable"/>
                    <arguments xsi:type="expressions:SuffixUnaryModificationExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.4/@statement/@statements.0/@variable"/>
                      <operator xsi:type="operators:PlusPlus"/>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.5">
                      <arraySelectors>
                        <position xsi:type="expressions:SuffixUnaryModificationExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.2/@variable"/>
                          <operator xsi:type="operators:PlusPlus"/>
                        </position>
                      </arraySelectors>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.4/@statement/@statements.1/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.2"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="j">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.4/@statement/@statements.1/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.4"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.4/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.3"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.4/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="createOffsetArray">
      <typeReference xsi:type="types:Int"/>
      <arrayDimensionsBefore/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="numBands">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="bandOffsets">
          <typeReference xsi:type="types:Int"/>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="arrays:ArrayInstantiationBySize">
            <typeReference xsi:type="types:Int"/>
            <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@parameters.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.0/@variable">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.1/@init"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.1/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@parameters.0"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.1/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="createIndicesArray">
      <typeReference xsi:type="types:Int"/>
      <arrayDimensionsBefore/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="numBands">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="bankIndices">
          <typeReference xsi:type="types:Int"/>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="arrays:ArrayInstantiationBySize">
            <typeReference xsi:type="types:Int"/>
            <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@parameters.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.0/@variable">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.1/@init"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.1/@init"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.1/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@parameters.0"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.1/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="hashCode">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// Differentiate hash code from other ComponentSampleModel subclasses</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:ExclusiveOrExpression">
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="ComponentSampleModel.class.xmi#//@classifiers.0/@members.38"/>
            </next>
            <self xsi:type="literals:Super"/>
          </children>
          <children xsi:type="literals:HexIntegerLiteral" hexValue="2"/>
        </returnValue>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/** &#xA; *  This class represents image data which is stored in a band interleaved&#xA; *  fashion and for&#xA; *  which each sample of a pixel occupies one data element of the DataBuffer.&#xA; *  It subclasses ComponentSampleModel but provides a more efficent&#xA; *  implementation for accessing band interleaved image data than is provided&#xA; *  by ComponentSampleModel.  This class should typically be used when working&#xA; *  with images which store sample data for each band in a different bank of the&#xA; *  DataBuffer. Accessor methods are provided so that image data can be&#xA; *  manipulated directly. Pixel stride is the number of&#xA; *  data array elements between two samples for the same band on the same&#xA; *  scanline. The pixel stride for a BandedSampleModel is one.&#xA; *  Scanline stride is the number of data array elements between&#xA; *  a given sample and the corresponding sample in the same column of the next&#xA; *  scanline.  Band offsets denote the number&#xA; *  of data array elements from the first data array element of the bank&#xA; *  of the DataBuffer holding each band to the first sample of the band.&#xA; *  The bands are numbered from 0 to N-1.&#xA; *  Bank indices denote the correspondence between a bank of the data buffer&#xA; *  and a band of image data.  This class supports &#xA; *  {@link DataBuffer#TYPE_BYTE TYPE_BYTE},&#xA; *  {@link DataBuffer#TYPE_USHORT TYPE_USHORT},&#xA; *  {@link DataBuffer#TYPE_SHORT TYPE_SHORT},&#xA; *  {@link DataBuffer#TYPE_INT TYPE_INT},&#xA; *  {@link DataBuffer#TYPE_FLOAT TYPE_FLOAT}, and&#xA; *  {@link DataBuffer#TYPE_DOUBLE TYPE_DOUBLE} datatypes&#xA; */</comments>
    </annotationsAndModifiers>
    <annotationsAndModifiers xsi:type="modifiers:Final"/>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="ComponentSampleModel.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
