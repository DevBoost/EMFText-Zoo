<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xmlns:variables="http://www.emftext.org/java/variables" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../java.ecore#/5 http://www.emftext.org/java/imports ../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../java.ecore#/9 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/references ../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../java.ecore#/15 http://www.emftext.org/java/types ../../../java.ecore#/16 http://www.emftext.org/java/variables ../../../java.ecore#/17" name="ComponentColorModel.java">
  <comments>/*&#xA; * @(#)ComponentColorModel.java&#x9;1.68 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>awt</namespaces>
  <namespaces>image</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <namespaces>color</namespaces>
    <classifier xsi:type="classifiers:Class" href="../color/ColorSpace.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <namespaces>color</namespaces>
    <classifier xsi:type="classifiers:Class" href="../color/ICC_ColorSpace.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="ComponentColorModel">
    <members xsi:type="members:Field" name="signed">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * &lt;code>signed&lt;/code>  is &lt;code>true&lt;/code> for &lt;code>short&lt;/code>,&#xA;     * &lt;code>float&lt;/code>, and &lt;code>double&lt;/code> transfer types; it&#xA;     * is &lt;code>false&lt;/code> for &lt;code>byte&lt;/code>, &lt;code>ushort&lt;/code>,&#xA;     * and &lt;code>int&lt;/code> transfer types.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="is_sRGB_stdScale">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// true for transfer types short, float, double</comments>
        <comments>// false for byte, ushort, int</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="is_LinearRGB_stdScale">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="is_LinearGray_stdScale">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="is_ICCGray_stdScale">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="tosRGB8LUT">
      <typeReference xsi:type="types:Byte"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="fromsRGB8LUT8">
      <typeReference xsi:type="types:Byte"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="fromsRGB8LUT16">
      <typeReference xsi:type="types:Short"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="fromLinearGray16ToOtherGray8LUT">
      <typeReference xsi:type="types:Byte"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="fromLinearGray16ToOtherGray16LUT">
      <typeReference xsi:type="types:Short"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="needScaleInit">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="noUnnorm">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="nonStdScale">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="min">
      <typeReference xsi:type="types:Float"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="diffMinMax">
      <typeReference xsi:type="types:Float"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="compOffset">
      <typeReference xsi:type="types:Float"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="compScale">
      <typeReference xsi:type="types:Float"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Constructor" name="ComponentColorModel">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.19">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.5"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.2"/>
          </arguments>
          <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.20">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.5"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.2"/>
          </arguments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.0"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.2"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.3"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.4"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.5"/>
          <callTarget xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.1"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral" value="true"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.3"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral" value="true"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral" value="true"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.2"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.4"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral" value="true"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral" value="true"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.5"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="This constructor is not "/>
                <children xsi:type="references:StringReference" value="compatible with transferType "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.5"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </throwable>
          </statements>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.5"/>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.21"/>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="colorSpace">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../color/ColorSpace.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="bits">
        <typeReference xsi:type="types:Int"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="hasAlpha">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="isAlphaPremultiplied">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="transparency">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="transferType">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constructs a &lt;CODE>ComponentColorModel&lt;/CODE> from the specified&#xA;     * parameters. Color components will be in the specified&#xA;     * &lt;CODE>ColorSpace&lt;/CODE>.  The supported transfer types are&#xA;     * &lt;CODE>DataBuffer.TYPE_BYTE&lt;/CODE>, &lt;CODE>DataBuffer.TYPE_USHORT&lt;/CODE>,&#xA;     * &lt;CODE>DataBuffer.TYPE_INT&lt;/CODE>,&#xA;     * &lt;CODE>DataBuffer.TYPE_SHORT&lt;/CODE>, &lt;CODE>DataBuffer.TYPE_FLOAT&lt;/CODE>,&#xA;     * and &lt;CODE>DataBuffer.TYPE_DOUBLE&lt;/CODE>.&#xA;     * If not null, the &lt;CODE>bits&lt;/CODE> array specifies the&#xA;     * number of significant bits per color and alpha component and its&#xA;     * length should be at least the number of components in the&#xA;     * &lt;CODE>ColorSpace&lt;/CODE> if there is no alpha&#xA;     * information in the pixel values, or one more than this number if&#xA;     * there is alpha information.  When the &lt;CODE>transferType&lt;/CODE> is&#xA;     * &lt;CODE>DataBuffer.TYPE_SHORT&lt;/CODE>, &lt;CODE>DataBuffer.TYPE_FLOAT&lt;/CODE>,&#xA;     * or &lt;CODE>DataBuffer.TYPE_DOUBLE&lt;/CODE> the &lt;CODE>bits&lt;/CODE> array&#xA;     * argument is ignored.  &lt;CODE>hasAlpha&lt;/CODE> indicates whether alpha&#xA;     * information is present.  If &lt;CODE>hasAlpha&lt;/CODE> is true, then&#xA;     * the boolean &lt;CODE>isAlphaPremultiplied&lt;/CODE>&#xA;     * specifies how to interpret color and alpha samples in pixel values.&#xA;     * If the boolean is true, color samples are assumed to have been&#xA;     * multiplied by the alpha sample. The &lt;CODE>transparency&lt;/CODE>&#xA;     * specifies what alpha values can be represented by this color model.&#xA;     * The acceptable &lt;code>transparency&lt;/code> values are&#xA;     * &lt;CODE>OPAQUE&lt;/CODE>, &lt;CODE>BITMASK&lt;/CODE> or &lt;CODE>TRANSLUCENT&lt;/CODE>.&#xA;     * The &lt;CODE>transferType&lt;/CODE> is the type of primitive array used&#xA;     * to represent pixel values.&#xA;     *&#xA;     * @param colorSpace       The &lt;CODE>ColorSpace&lt;/CODE> associated &#xA;     *                         with this color model.&#xA;     * @param bits             The number of significant bits per component.&#xA;     *                         May be null, in which case all bits of all&#xA;     *                         component samples will be significant.&#xA;     *                         Ignored if transferType is one of&#xA;     *                         &lt;CODE>DataBuffer.TYPE_SHORT&lt;/CODE>,&#xA;     *                         &lt;CODE>DataBuffer.TYPE_FLOAT&lt;/CODE>, or&#xA;     *                         &lt;CODE>DataBuffer.TYPE_DOUBLE&lt;/CODE>,&#xA;     *                         in which case all bits of all component&#xA;     *                         samples will be significant.&#xA;     * @param hasAlpha         If true, this color model supports alpha.&#xA;     * @param isAlphaPremultiplied If true, alpha is premultiplied.&#xA;     * @param transparency     Specifies what alpha values can be represented&#xA;     *                         by this color model.&#xA;     * @param transferType     Specifies the type of primitive array used to&#xA;     *                         represent pixel values.&#xA;     *&#xA;     * @throws IllegalArgumentException If the &lt;CODE>bits&lt;/CODE> array&#xA;     *         argument is not null, its length is less than the number of&#xA;     *         color and alpha components, and transferType is one of&#xA;     *         &lt;CODE>DataBuffer.TYPE_BYTE&lt;/CODE>,&#xA;     *         &lt;CODE>DataBuffer.TYPE_USHORT&lt;/CODE>, or&#xA;     *         &lt;CODE>DataBuffer.TYPE_INT&lt;/CODE>.&#xA;     * @throws IllegalArgumentException If transferType is not one of&#xA;     *         &lt;CODE>DataBuffer.TYPE_BYTE&lt;/CODE>,&#xA;     *         &lt;CODE>DataBuffer.TYPE_USHORT&lt;/CODE>,&#xA;     *         &lt;CODE>DataBuffer.TYPE_INT&lt;/CODE>,&#xA;     *         &lt;CODE>DataBuffer.TYPE_SHORT&lt;/CODE>,&#xA;     *         &lt;CODE>DataBuffer.TYPE_FLOAT&lt;/CODE>, or&#xA;     *         &lt;CODE>DataBuffer.TYPE_DOUBLE&lt;/CODE>.&#xA;     *&#xA;     * @see ColorSpace&#xA;     * @see java.awt.Transparency&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="ComponentColorModel">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.0"/>
          <arguments xsi:type="literals:NullLiteral"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.1"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.2"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.3"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.4"/>
          <callTarget xsi:type="literals:This"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="colorSpace">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../color/ColorSpace.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="hasAlpha">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="isAlphaPremultiplied">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="transparency">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="transferType">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constructs a &lt;CODE>ComponentColorModel&lt;/CODE> from the specified &#xA;     * parameters. Color components will be in the specified &#xA;     * &lt;CODE>ColorSpace&lt;/CODE>.  The supported transfer types are&#xA;     * &lt;CODE>DataBuffer.TYPE_BYTE&lt;/CODE>, &lt;CODE>DataBuffer.TYPE_USHORT&lt;/CODE>,&#xA;     * &lt;CODE>DataBuffer.TYPE_INT&lt;/CODE>,&#xA;     * &lt;CODE>DataBuffer.TYPE_SHORT&lt;/CODE>, &lt;CODE>DataBuffer.TYPE_FLOAT&lt;/CODE>,&#xA;     * and &lt;CODE>DataBuffer.TYPE_DOUBLE&lt;/CODE>.  The number of significant&#xA;     * bits per color and alpha component will be 8, 16, 32, 16, 32,  or 64,&#xA;     * respectively.  The number of color components will be the&#xA;     * number of components in the &lt;CODE>ColorSpace&lt;/CODE>.  There will be&#xA;     * an alpha component if &lt;CODE>hasAlpha&lt;/CODE> is &lt;CODE>true&lt;/CODE>.&#xA;     * If &lt;CODE>hasAlpha&lt;/CODE> is true, then &#xA;     * the boolean &lt;CODE>isAlphaPremultiplied&lt;/CODE> &#xA;     * specifies how to interpret color and alpha samples in pixel values.  &#xA;     * If the boolean is true, color samples are assumed to have been &#xA;     * multiplied by the alpha sample. The &lt;CODE>transparency&lt;/CODE> &#xA;     * specifies what alpha values can be represented by this color model.&#xA;     * The acceptable &lt;code>transparency&lt;/code> values are&#xA;     * &lt;CODE>OPAQUE&lt;/CODE>, &lt;CODE>BITMASK&lt;/CODE> or &lt;CODE>TRANSLUCENT&lt;/CODE>.&#xA;     * The &lt;CODE>transferType&lt;/CODE> is the type of primitive array used&#xA;     * to represent pixel values.&#xA;     *&#xA;     * @param colorSpace       The &lt;CODE>ColorSpace&lt;/CODE> associated &#xA;     *                         with this color model.&#xA;     * @param hasAlpha         If true, this color model supports alpha.&#xA;     * @param isAlphaPremultiplied If true, alpha is premultiplied.&#xA;     * @param transparency     Specifies what alpha values can be represented&#xA;     *                         by this color model.&#xA;     * @param transferType     Specifies the type of primitive array used to&#xA;     *                         represent pixel values.&#xA;     *&#xA;     * @throws IllegalArgumentException If transferType is not one of&#xA;     *         &lt;CODE>DataBuffer.TYPE_BYTE&lt;/CODE>,&#xA;     *         &lt;CODE>DataBuffer.TYPE_USHORT&lt;/CODE>,&#xA;     *         &lt;CODE>DataBuffer.TYPE_INT&lt;/CODE>,&#xA;     *         &lt;CODE>DataBuffer.TYPE_SHORT&lt;/CODE>,&#xA;     *         &lt;CODE>DataBuffer.TYPE_FLOAT&lt;/CODE>, or&#xA;     *         &lt;CODE>DataBuffer.TYPE_DOUBLE&lt;/CODE>.&#xA;     *&#xA;     * @see ColorSpace&#xA;     * @see java.awt.Transparency&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="bitsHelper">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="transferType">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="colorSpace">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../color/ColorSpace.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="hasAlpha">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="numBits">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="DataBuffer.class.xmi#//@classifiers.0/@members.13"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@parameters.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="numComponents">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@parameters.1">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../color/ColorSpace.class.xmi#//@classifiers.0/@members.46"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:PrefixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.1/@variable"/>
              <operator xsi:type="operators:PlusPlus"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@parameters.2"/>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:MultiplicativeExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.0/@variable"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.1/@variable"/>
          <multiplicativeOperators xsi:type="operators:Multiplication"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="bitsArrayHelper">
      <typeReference xsi:type="types:Int"/>
      <arrayDimensionsBefore/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="origBits">
        <typeReference xsi:type="types:Int"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="transferType">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="colorSpace">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../color/ColorSpace.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="hasAlpha">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.1"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@parameters.0"/>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@parameters.0"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.3"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Break"/>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@parameters.1"/>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="numBits">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="DataBuffer.class.xmi#//@classifiers.0/@members.13"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@parameters.1"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="numComponents">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@parameters.2">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../color/ColorSpace.class.xmi#//@classifiers.0/@members.46"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:PrefixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.2/@variable"/>
              <operator xsi:type="operators:PlusPlus"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@parameters.3"/>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="bits">
          <typeReference xsi:type="types:Int"/>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="arrays:ArrayInstantiationBySize">
            <typeReference xsi:type="types:Int"/>
            <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.2/@variable"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.4/@variable">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.5/@init"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.1/@variable"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.5/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.2/@variable"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.5/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.4/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setupLUTs">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:Condition">
        <comments>// REMIND: there is potential to accelerate sRGB, LinearRGB,</comments>
        <comments>// LinearGray, ICCGray, and non-ICC Gray spaces with non-standard</comments>
        <comments>// scaling, if that becomes important</comments>
        <comments>//</comments>
        <comments>// NOTE: The is_xxx_stdScale and nonStdScale booleans are provisionally</comments>
        <comments>// set here when this method is called at construction time.  These</comments>
        <comments>// variables may be set again when initScale is called later.</comments>
        <comments>// When setupLUTs returns, nonStdScale is true if (the transferType</comments>
        <comments>// is not float or double) AND (some minimum ColorSpace component</comments>
        <comments>// value is not 0.0 OR some maximum ColorSpace component value</comments>
        <comments>// is not 1.0).  This is correct for the calls to</comments>
        <comments>// getNormalizedComponents(Object, float[], int) from initScale().</comments>
        <comments>// initScale() may change the value nonStdScale based on the</comments>
        <comments>// return value of getNormalizedComponents() - this will only</comments>
        <comments>// happen if getNormalizedComponents() has been overridden by a</comments>
        <comments>// subclass to make the mapping of min/max pixel sample values</comments>
        <comments>// something different from min/max color component values.</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral" value="true"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.11"/>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2">
                  <comments>// Note that the built-in Linear RGB space has a normalized</comments>
                  <comments>// range of 0.0 - 1.0 for each coordinate.  Usage of these</comments>
                  <comments>// LUTs makes that assumption.</comments>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:BooleanLiteral" value="true"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:BooleanLiteral"/>
              </expression>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="ColorModel.class.xmi#//@classifiers.0/@members.71"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="ColorModel.class.xmi#//@classifiers.0"/>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="ColorModel.class.xmi#//@classifiers.0/@members.72"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="ColorModel.class.xmi#//@classifiers.0"/>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
                </children>
                <children xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
                </children>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="ColorModel.class.xmi#//@classifiers.0/@members.73"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="ColorModel.class.xmi#//@classifiers.0"/>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="ColorModel.class.xmi#//@classifiers.0/@members.74"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="ColorModel.class.xmi#//@classifiers.0"/>
                    </value>
                  </expression>
                </statements>
              </elseStatement>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="ColorModel.class.xmi#//@classifiers.0/@members.69"/>
              <arguments xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.8"/>
              </arguments>
            </next>
            <target xsi:type="classifiers:Class" href="ColorModel.class.xmi#//@classifiers.0"/>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="ics">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <comments>// Note that a normalized range of 0.0 - 1.0 for the gray</comments>
                      <comments>// component is required, because usage of these LUTs makes</comments>
                      <comments>// that assumption.</comments>
                      <target xsi:type="classifiers:Class" href="../color/ICC_ColorSpace.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../color/ICC_ColorSpace.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.8"/>
                    </child>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral" value="true"/>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral"/>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="ColorModel.class.xmi#//@classifiers.0/@members.74"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="ColorModel.class.xmi#//@classifiers.0"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:BooleanLiteral" value="true"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:IdentifierReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="ColorModel.class.xmi#//@classifiers.0/@members.75"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="ColorModel.class.xmi#//@classifiers.0"/>
                          </value>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
                      </children>
                      <children xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.0"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
                      </children>
                    </condition>
                    <elseStatement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:IdentifierReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="ColorModel.class.xmi#//@classifiers.0/@members.77"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="ColorModel.class.xmi#//@classifiers.0"/>
                          </value>
                        </expression>
                      </statements>
                    </elseStatement>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="ColorModel.class.xmi#//@classifiers.0/@members.70"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="ColorModel.class.xmi#//@classifiers.0"/>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:IdentifierReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="ColorModel.class.xmi#//@classifiers.0/@members.75"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="ColorModel.class.xmi#//@classifiers.0"/>
                          </value>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:IdentifierReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="ColorModel.class.xmi#//@classifiers.0/@members.76"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="ColorModel.class.xmi#//@classifiers.0"/>
                          </value>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
                      </children>
                      <children xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.0"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
                      </children>
                    </condition>
                    <elseStatement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:IdentifierReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="ColorModel.class.xmi#//@classifiers.0/@members.77"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="ColorModel.class.xmi#//@classifiers.0"/>
                          </value>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:IdentifierReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="ColorModel.class.xmi#//@classifiers.0/@members.78"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="ColorModel.class.xmi#//@classifiers.0"/>
                          </value>
                        </expression>
                      </statements>
                    </elseStatement>
                  </statements>
                </elseStatement>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.9"/>
                  </children>
                  <children xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../color/ColorSpace.class.xmi#//@classifiers.0/@members.14"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../color/ColorSpace.class.xmi#//@classifiers.0"/>
                  </children>
                </expression>
              </children>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:InstanceOfExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../color/ICC_ColorSpace.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.8"/>
                  </child>
                </expression>
              </children>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../color/ColorSpace.class.xmi#//@classifiers.0/@members.48"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </next>
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.8"/>
                  </children>
                  <children xsi:type="literals:DecimalFloatLiteral"/>
                </expression>
              </children>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../color/ColorSpace.class.xmi#//@classifiers.0/@members.49"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </next>
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.8"/>
                  </children>
                  <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                </expression>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                      <comments>// if transferType is byte, ushort, int, or short and we</comments>
                      <comments>// don't already know the ColorSpace has minVlaue == 0.0f and</comments>
                      <comments>// maxValue == 1.0f for all components, we need to check that</comments>
                      <comments>// now and setup the min[] and diffMinMax[] arrays if necessary.</comments>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="literals:BooleanLiteral"/>
                  </expression>
                </statements>
                <statements xsi:type="statements:ForLoop">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="literals:BooleanLiteral" value="true"/>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:Break"/>
                      </statement>
                      <condition xsi:type="expressions:ConditionalOrExpression">
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:NotEqual"/>
                            <children xsi:type="references:IdentifierReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../color/ColorSpace.class.xmi#//@classifiers.0/@members.48"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.1/@init"/>
                              </next>
                              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.8"/>
                            </children>
                            <children xsi:type="literals:DecimalFloatLiteral"/>
                          </expression>
                        </children>
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:NotEqual"/>
                            <children xsi:type="references:IdentifierReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../color/ColorSpace.class.xmi#//@classifiers.0/@members.49"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.1/@init"/>
                              </next>
                              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.8"/>
                            </children>
                            <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                          </expression>
                        </children>
                      </condition>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.1/@init"/>
                    <children xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                    </children>
                    <relationOperators xsi:type="operators:LessThan"/>
                  </condition>
                  <init xsi:type="variables:LocalVariable" name="i">
                    <typeReference xsi:type="types:Int"/>
                    <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </init>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.1/@init"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="arrays:ArrayInstantiationBySize">
                          <typeReference xsi:type="types:Float"/>
                          <sizes xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                          </sizes>
                        </value>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="arrays:ArrayInstantiationBySize">
                          <typeReference xsi:type="types:Float"/>
                          <sizes xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                          </sizes>
                        </value>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ForLoop">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.2/@statement/@statements.2/@init"/>
                              </arraySelectors>
                            </child>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="references:IdentifierReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../color/ColorSpace.class.xmi#//@classifiers.0/@members.48"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.2/@statement/@statements.2/@init"/>
                              </next>
                              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.8"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14">
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.2/@statement/@statements.2/@init"/>
                              </arraySelectors>
                            </child>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:AdditiveExpression">
                              <children xsi:type="references:IdentifierReference">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../color/ColorSpace.class.xmi#//@classifiers.0/@members.49"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.2/@statement/@statements.2/@init"/>
                                </next>
                                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.8"/>
                              </children>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.2/@statement/@statements.2/@init"/>
                                </arraySelectors>
                              </children>
                              <additiveOperators xsi:type="operators:Subtraction"/>
                            </value>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.2/@statement/@statements.2/@init"/>
                        <children xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                        </children>
                        <relationOperators xsi:type="operators:LessThan"/>
                      </condition>
                      <init xsi:type="variables:LocalVariable" name="i">
                        <typeReference xsi:type="types:Int"/>
                        <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </init>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.2/@statement/@statements.2/@init"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                    </statements>
                  </statement>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="initScale">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10">
            <comments>// This method is called the first time any method which uses</comments>
            <comments>// pixel sample value to color component value scaling information</comments>
            <comments>// is called if the transferType supports non-standard scaling</comments>
            <comments>// as defined above (byte, ushort, int, and short), unless the</comments>
            <comments>// method is getNormalizedComponents(Object, float[], int) (that</comments>
            <comments>// method must be overridden to use non-standard scaling).  This</comments>
            <comments>// method also sets up the noUnnorm boolean variable for these</comments>
            <comments>// transferTypes.  After this method is called, the nonStdScale</comments>
            <comments>// variable will be true if getNormalizedComponents() maps a</comments>
            <comments>// sample value of 0 to anything other than 0.0f OR maps a</comments>
            <comments>// sample value of 2^^n - 1 (2^^15 - 1 for short transferType)</comments>
            <comments>// to anything other than 1.0f.  Note that this can be independent</comments>
            <comments>// of the colorSpace min/max component values, if the</comments>
            <comments>// getNormalizedComponents() method has been overridden for some</comments>
            <comments>// reason, e.g. to provide greater dynamic range in the sample</comments>
            <comments>// values than in the color component values.  Unfortunately,</comments>
            <comments>// this method can't be called at construction time, since a</comments>
            <comments>// subclass may still have uninitialized state that would cause</comments>
            <comments>// getNormalizedComponents() to return an incorrect result.</comments>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:BooleanLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// only needs to called once</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11">
                <comments>// The unnormalized form is only supported for unsigned</comments>
                <comments>// transferTypes and when the ColorSpace min/max values</comments>
                <comments>// are 0.0/1.0.  When this method is called nonStdScale is</comments>
                <comments>// true if the latter condition does not hold.  In addition,</comments>
                <comments>// the unnormalized form requires that the full range of</comments>
                <comments>// the pixel sample values map to the full 0.0 - 1.0 range</comments>
                <comments>// of color component values.  That condition is checked</comments>
                <comments>// later in this method.</comments>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral" value="true"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral"/>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="lowVal">
          <typeReference xsi:type="types:Float"/>
          <arrayDimensionsBefore/>
          <additionalLocalVariables name="highVal"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="bpixel">
                <typeReference xsi:type="types:Byte"/>
                <arrayDimensionsBefore/>
                <initialValue xsi:type="arrays:ArrayInstantiationBySize">
                  <typeReference xsi:type="types:Byte"/>
                  <sizes xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                  </sizes>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ForLoop">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.0/@statements.0/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.0/@statements.0/@statements.1/@init"/>
                      </arraySelectors>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.0/@statements.0/@statements.1/@init"/>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <init xsi:type="variables:LocalVariable" name="i">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </init>
              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.0/@statements.0/@statements.1/@init"/>
                <operator xsi:type="operators:PlusPlus"/>
              </updates>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.0/@statements.0/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                        </position>
                      </arraySelectors>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:Byte"/>
                      <child xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:ShiftExpression">
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                              <children xsi:type="references:IdentifierReference">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                                  </position>
                                </arraySelectors>
                                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                              </children>
                              <shiftOperators xsi:type="operators:LeftShift"/>
                            </expression>
                          </children>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                          <additiveOperators xsi:type="operators:Subtraction"/>
                        </expression>
                      </child>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.2/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.45">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.0/@statements.0/@statements.0/@variable"/>
                  <arguments xsi:type="literals:NullLiteral"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ForLoop">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.0/@statements.0/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.0/@statements.0/@statements.4/@init"/>
                      </arraySelectors>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:Byte"/>
                      <child xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:ShiftExpression">
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                              <children xsi:type="references:IdentifierReference">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.0/@statements.0/@statements.4/@init"/>
                                </arraySelectors>
                                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                              </children>
                              <shiftOperators xsi:type="operators:LeftShift"/>
                            </expression>
                          </children>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                          <additiveOperators xsi:type="operators:Subtraction"/>
                        </expression>
                      </child>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.0/@statements.0/@statements.4/@init"/>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <init xsi:type="variables:LocalVariable" name="i">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </init>
              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.0/@statements.0/@statements.4/@init"/>
                <operator xsi:type="operators:PlusPlus"/>
              </updates>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.2/@variable/@additionalLocalVariables.0"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.45">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.0/@statements.0/@statements.0/@variable"/>
                  <arguments xsi:type="literals:NullLiteral"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </value>
              </expression>
            </statements>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="uspixel">
                <typeReference xsi:type="types:Short"/>
                <arrayDimensionsBefore/>
                <initialValue xsi:type="arrays:ArrayInstantiationBySize">
                  <typeReference xsi:type="types:Short"/>
                  <sizes xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                  </sizes>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ForLoop">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.1/@statements.0/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.1/@statements.0/@statements.1/@init"/>
                      </arraySelectors>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.1/@statements.0/@statements.1/@init"/>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <init xsi:type="variables:LocalVariable" name="i">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </init>
              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.1/@statements.0/@statements.1/@init"/>
                <operator xsi:type="operators:PlusPlus"/>
              </updates>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.1/@statements.0/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                        </position>
                      </arraySelectors>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:Short"/>
                      <child xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:ShiftExpression">
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                              <children xsi:type="references:IdentifierReference">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                                  </position>
                                </arraySelectors>
                                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                              </children>
                              <shiftOperators xsi:type="operators:LeftShift"/>
                            </expression>
                          </children>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                          <additiveOperators xsi:type="operators:Subtraction"/>
                        </expression>
                      </child>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.2/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.45">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.1/@statements.0/@statements.0/@variable"/>
                  <arguments xsi:type="literals:NullLiteral"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ForLoop">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.1/@statements.0/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.1/@statements.0/@statements.4/@init"/>
                      </arraySelectors>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:Short"/>
                      <child xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:ShiftExpression">
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                              <children xsi:type="references:IdentifierReference">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.1/@statements.0/@statements.4/@init"/>
                                </arraySelectors>
                                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                              </children>
                              <shiftOperators xsi:type="operators:LeftShift"/>
                            </expression>
                          </children>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                          <additiveOperators xsi:type="operators:Subtraction"/>
                        </expression>
                      </child>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.1/@statements.0/@statements.4/@init"/>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <init xsi:type="variables:LocalVariable" name="i">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </init>
              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.1/@statements.0/@statements.4/@init"/>
                <operator xsi:type="operators:PlusPlus"/>
              </updates>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.2/@variable/@additionalLocalVariables.0"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.45">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.1/@statements.0/@statements.0/@variable"/>
                  <arguments xsi:type="literals:NullLiteral"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </value>
              </expression>
            </statements>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.1"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="ipixel">
                <typeReference xsi:type="types:Int"/>
                <arrayDimensionsBefore/>
                <initialValue xsi:type="arrays:ArrayInstantiationBySize">
                  <typeReference xsi:type="types:Int"/>
                  <sizes xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                  </sizes>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ForLoop">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.2/@statements.0/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.2/@statements.0/@statements.1/@init"/>
                      </arraySelectors>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.2/@statements.0/@statements.1/@init"/>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <init xsi:type="variables:LocalVariable" name="i">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </init>
              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.2/@statements.0/@statements.1/@init"/>
                <operator xsi:type="operators:PlusPlus"/>
              </updates>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.2/@statements.0/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                        </position>
                      </arraySelectors>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:ShiftExpression">
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                            <children xsi:type="references:IdentifierReference">
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                                </position>
                              </arraySelectors>
                              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                            </children>
                            <shiftOperators xsi:type="operators:LeftShift"/>
                          </expression>
                        </children>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <additiveOperators xsi:type="operators:Subtraction"/>
                      </expression>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.2/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.45">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.2/@statements.0/@statements.0/@variable"/>
                  <arguments xsi:type="literals:NullLiteral"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ForLoop">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.2/@statements.0/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.2/@statements.0/@statements.4/@init"/>
                      </arraySelectors>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:ShiftExpression">
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                            <children xsi:type="references:IdentifierReference">
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.2/@statements.0/@statements.4/@init"/>
                              </arraySelectors>
                              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                            </children>
                            <shiftOperators xsi:type="operators:LeftShift"/>
                          </expression>
                        </children>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <additiveOperators xsi:type="operators:Subtraction"/>
                      </expression>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.2/@statements.0/@statements.4/@init"/>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <init xsi:type="variables:LocalVariable" name="i">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </init>
              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.2/@statements.0/@statements.4/@init"/>
                <operator xsi:type="operators:PlusPlus"/>
              </updates>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.2/@variable/@additionalLocalVariables.0"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.45">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.2/@statements.0/@statements.0/@variable"/>
                  <arguments xsi:type="literals:NullLiteral"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </value>
              </expression>
            </statements>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.3"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="spixel">
                <typeReference xsi:type="types:Short"/>
                <arrayDimensionsBefore/>
                <initialValue xsi:type="arrays:ArrayInstantiationBySize">
                  <typeReference xsi:type="types:Short"/>
                  <sizes xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                  </sizes>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ForLoop">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.3/@statements.0/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.3/@statements.0/@statements.1/@init"/>
                      </arraySelectors>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.3/@statements.0/@statements.1/@init"/>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <init xsi:type="variables:LocalVariable" name="i">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </init>
              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.3/@statements.0/@statements.1/@init"/>
                <operator xsi:type="operators:PlusPlus"/>
              </updates>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.3/@statements.0/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                        </position>
                      </arraySelectors>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="32767"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.2/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.45">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.3/@statements.0/@statements.0/@variable"/>
                  <arguments xsi:type="literals:NullLiteral"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ForLoop">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.3/@statements.0/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.3/@statements.0/@statements.4/@init"/>
                      </arraySelectors>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="32767"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.3/@statements.0/@statements.4/@init"/>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <init xsi:type="variables:LocalVariable" name="i">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </init>
              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.3/@statements.0/@statements.4/@init"/>
                <operator xsi:type="operators:PlusPlus"/>
              </updates>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.2/@variable/@additionalLocalVariables.0"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.45">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.3/@cases.3/@statements.0/@statements.0/@variable"/>
                  <arguments xsi:type="literals:NullLiteral"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </value>
              </expression>
            </statements>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.2"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.2/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.2/@variable/@additionalLocalVariables.0"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:NullLiteral"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break">
            <comments>// to keep the compiler from complaining</comments>
          </statements>
        </cases>
        <variable xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:BooleanLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral" value="true"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Break"/>
            </statement>
            <condition xsi:type="expressions:ConditionalOrExpression">
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.2/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.5/@init"/>
                    </arraySelectors>
                  </children>
                  <children xsi:type="literals:DecimalFloatLiteral"/>
                </expression>
              </children>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.2/@variable/@additionalLocalVariables.0">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.5/@init"/>
                    </arraySelectors>
                  </children>
                  <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                </expression>
              </children>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.5/@init"/>
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.5/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral" value="true"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:Float"/>
                <sizes xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                </sizes>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:Float"/>
                <sizes xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                </sizes>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.6/@statement/@statements.7/@init"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.2/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.6/@statement/@statements.7/@init"/>
                    </arraySelectors>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.6/@statement/@statements.7/@init"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:MultiplicativeExpression">
                    <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.2/@variable/@additionalLocalVariables.0">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.6/@statement/@statements.7/@init"/>
                          </arraySelectors>
                        </children>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.2/@variable">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.6/@statement/@statements.7/@init"/>
                          </arraySelectors>
                        </children>
                        <additiveOperators xsi:type="operators:Subtraction"/>
                      </expression>
                    </children>
                    <multiplicativeOperators xsi:type="operators:Division"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.6/@statement/@statements.7/@init"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.6/@statement/@statements.7/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getRGBComponent">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="pixel">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="idx">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="More than one component per pixel"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
          <relationOperators xsi:type="operators:GreaterThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="Component value is signed"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.22"/>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="opixel">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// Since there is only 1 component, there is no alpha</comments>
              <comments>// Normalize the pixel in order to convert it</comments>
              <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="bpixel">
                <typeReference xsi:type="types:Byte"/>
                <arrayDimensionsBefore/>
                <initialValue xsi:type="arrays:ArrayInstantiationByValues">
                  <arrayInitializer>
                    <initialValues xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:Byte"/>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.0"/>
                    </initialValues>
                  </arrayInitializer>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.3/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.4/@cases.0/@statements.0/@statements.0/@variable"/>
              </expression>
            </statements>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="spixel">
                <typeReference xsi:type="types:Short"/>
                <arrayDimensionsBefore/>
                <initialValue xsi:type="arrays:ArrayInstantiationByValues">
                  <arrayInitializer>
                    <initialValues xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:Short"/>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.0"/>
                    </initialValues>
                  </arrayInitializer>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.3/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.4/@cases.1/@statements.0/@statements.0/@variable"/>
              </expression>
            </statements>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.1"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="ipixel">
                <typeReference xsi:type="types:Int"/>
                <arrayDimensionsBefore/>
                <initialValue xsi:type="arrays:ArrayInstantiationByValues">
                  <arrayInitializer>
                    <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.0"/>
                  </arrayInitializer>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.3/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.4/@cases.2/@statements.0/@statements.0/@variable"/>
              </expression>
            </statements>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.3"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <variable xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="norm">
          <typeReference xsi:type="types:Float"/>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.45">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.3/@variable"/>
            <arguments xsi:type="literals:NullLiteral"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="rgb">
          <typeReference xsi:type="types:Float"/>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../color/ColorSpace.class.xmi#//@classifiers.0/@members.41"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.5/@variable"/>
            </next>
            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.8"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:CastExpression">
          <typeReference xsi:type="types:Int"/>
          <child xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AdditiveExpression">
              <children xsi:type="expressions:MultiplicativeExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.6/@variable">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.1"/>
                  </arraySelectors>
                </children>
                <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                <multiplicativeOperators xsi:type="operators:Multiplication"/>
              </children>
              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </expression>
          </child>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getRed">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="pixel">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the red color component for the specified pixel, scaled&#xA;     * from 0 to 255 in the default RGB ColorSpace, sRGB.  A color conversion&#xA;     * is done if necessary.  The pixel value is specified as an int.&#xA;     * The returned value will be a non pre-multiplied value. &#xA;     * If the alpha is premultiplied, this method divides&#xA;     * it out before returning the value (if the alpha value is 0,&#xA;     * the red value will be 0).&#xA;     *&#xA;     * @param pixel The pixel from which you want to get the red color component.&#xA;     *&#xA;     * @return The red color component for the specified pixel, as an int.&#xA;     *&#xA;     * @throws IllegalArgumentException If there is more than&#xA;     * one component in this &lt;CODE>ColorModel&lt;/CODE>. &#xA;     * @throws IllegalArgumentException If the component value for this&#xA;     * &lt;CODE>ColorModel&lt;/CODE> is signed&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.23">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0"/>
          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getGreen">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="pixel">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the green color component for the specified pixel, scaled&#xA;     * from 0 to 255 in the default RGB ColorSpace, sRGB.  A color conversion&#xA;     * is done if necessary.  The pixel value is specified as an int.&#xA;     * The returned value will be a non&#xA;     * pre-multiplied value. If the alpha is premultiplied, this method&#xA;     * divides it out before returning the value (if the alpha value is 0,&#xA;     * the green value will be 0).&#xA;     *&#xA;     * @param pixel The pixel from which you want to get the green color component.&#xA;     *&#xA;     * @return The green color component for the specified pixel, as an int.&#xA;     *&#xA;     * @throws IllegalArgumentException If there is more than&#xA;     * one component in this &lt;CODE>ColorModel&lt;/CODE>. &#xA;     * @throws IllegalArgumentException If the component value for this&#xA;     * &lt;CODE>ColorModel&lt;/CODE> is signed&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.23">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0"/>
          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getBlue">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="pixel">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the blue color component for the specified pixel, scaled&#xA;     * from 0 to 255 in the default RGB ColorSpace, sRGB.  A color conversion&#xA;     * is done if necessary.  The pixel value is specified as an int.&#xA;     * The returned value will be a non&#xA;     * pre-multiplied value. If the alpha is premultiplied, this method&#xA;     * divides it out before returning the value (if the alpha value is 0,&#xA;     * the blue value will be 0).&#xA;     *&#xA;     * @param pixel The pixel from which you want to get the blue color component.&#xA;     *&#xA;     * @return The blue color component for the specified pixel, as an int.&#xA;     *&#xA;     * @throws IllegalArgumentException If there is more than&#xA;     * one component in this &lt;CODE>ColorModel&lt;/CODE>. &#xA;     * @throws IllegalArgumentException If the component value for this&#xA;     * &lt;CODE>ColorModel&lt;/CODE> is signed&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.23">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0"/>
          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getAlpha">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="pixel">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the alpha component for the specified pixel, scaled&#xA;     * from 0 to 255.   The pixel value is specified as an int.&#xA;     *&#xA;     * @param pixel The pixel from which you want to get the alpha component.&#xA;     *&#xA;     * @return The alpha component for the specified pixel, as an int.&#xA;     *&#xA;     * @throws IllegalArgumentException If there is more than&#xA;     * one component in this &lt;CODE>ColorModel&lt;/CODE>. &#xA;     * @throws IllegalArgumentException If the component value for this&#xA;     * &lt;CODE>ColorModel&lt;/CODE> is signed&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="255"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
          </children>
          <children xsi:type="literals:BooleanLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="More than one component per pixel"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
          <relationOperators xsi:type="operators:GreaterThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="Component value is signed"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:CastExpression">
          <typeReference xsi:type="types:Int"/>
          <child xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AdditiveExpression">
              <children xsi:type="expressions:MultiplicativeExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:MultiplicativeExpression">
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Float"/>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@parameters.0"/>
                      </expression>
                    </children>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:ShiftExpression">
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                            <children xsi:type="references:IdentifierReference">
                              <arraySelectors>
                                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              </arraySelectors>
                              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                            </children>
                            <shiftOperators xsi:type="operators:LeftShift"/>
                          </expression>
                        </children>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <additiveOperators xsi:type="operators:Subtraction"/>
                      </expression>
                    </children>
                    <multiplicativeOperators xsi:type="operators:Division"/>
                  </expression>
                </children>
                <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                <multiplicativeOperators xsi:type="operators:Multiplication"/>
              </children>
              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </expression>
          </child>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getRGB">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="pixel">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the color/alpha components of the pixel in the default&#xA;     * RGB color model format.  A color conversion is done if necessary.&#xA;     * The returned value will be in a non pre-multiplied format. If&#xA;     * the alpha is premultiplied, this method divides it out of the&#xA;     * color components (if the alpha value is 0, the color values will be 0).&#xA;     *&#xA;     * @param pixel The pixel from which you want to get the color/alpha components.&#xA;     *&#xA;     * @return The color/alpha components for the specified pixel, as an int.&#xA;     *&#xA;     * @throws IllegalArgumentException If there is more than&#xA;     * one component in this &lt;CODE>ColorModel&lt;/CODE>. &#xA;     * @throws IllegalArgumentException If the component value for this&#xA;     * &lt;CODE>ColorModel&lt;/CODE> is signed&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="More than one component per pixel"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
          <relationOperators xsi:type="operators:GreaterThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="Component value is signed"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:InclusiveOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:ShiftExpression">
              <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.27">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.0"/>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
              <shiftOperators xsi:type="operators:LeftShift"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:ShiftExpression">
              <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.24">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.0"/>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
              <shiftOperators xsi:type="operators:LeftShift"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:ShiftExpression">
              <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.25">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.0"/>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
              <shiftOperators xsi:type="operators:LeftShift"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:ShiftExpression">
              <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.26">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.0"/>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <shiftOperators xsi:type="operators:LeftShift"/>
            </expression>
          </children>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="extractComponent">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="inData">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="idx">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="precision">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="needAlpha">
          <typeReference xsi:type="types:Boolean">
            <comments>// Extract component idx from inData.  The precision argument</comments>
            <comments>// should be either 8 or 16.  If it's 8, this method will return</comments>
            <comments>// an 8-bit value.  If it's 16, this method will return a 16-bit</comments>
            <comments>// value for transferTypes other than TYPE_BYTE.  For TYPE_BYTE,</comments>
            <comments>// an 8-bit value will be returned.</comments>
            <comments>// This method maps the input value corresponding to a</comments>
            <comments>// normalized ColorSpace component value of 0.0 to 0, and the</comments>
            <comments>// input value corresponding to a normalized ColorSpace</comments>
            <comments>// component value of 1.0 to 2^n - 1 (where n is 8 or 16), so</comments>
            <comments>// it is appropriate only for ColorSpaces with min/max component</comments>
            <comments>// values of 0.0/1.0.  This will be true for sRGB, the built-in</comments>
            <comments>// Linear RGB and Linear Gray spaces, and any other ICC grayscale</comments>
            <comments>// spaces for which we have precomputed LUTs.</comments>
          </typeReference>
          <initialValue xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.5"/>
              </children>
            </expression>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="alp">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="comp">
          <typeReference xsi:type="types:Int"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="mask">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:ShiftExpression">
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                <children xsi:type="references:IdentifierReference">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.1"/>
                  </arraySelectors>
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                </children>
                <shiftOperators xsi:type="operators:LeftShift"/>
              </expression>
            </children>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <comments>// Note: we do no clamping of the pixel data here - we</comments>
          <comments>// assume that the data is scaled properly</comments>
          <statements xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="sdata">
                <typeReference xsi:type="types:Short"/>
                <arrayDimensionsAfter/>
                <initialValue xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Short"/>
                  <arrayDimensionsBefore/>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.0"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="scalefactor">
                <typeReference xsi:type="types:Float"/>
                <initialValue xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Float"/>
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ShiftExpression">
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.2"/>
                          <shiftOperators xsi:type="operators:LeftShift"/>
                        </expression>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </expression>
                  </child>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="s">
                    <typeReference xsi:type="types:Short"/>
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.0/@statements.0/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                        </position>
                      </arraySelectors>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Return">
                      <returnValue xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Int"/>
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:MultiplicativeExpression">
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:CastExpression">
                                      <typeReference xsi:type="types:Float"/>
                                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.0/@statements.0/@statements.0/@variable">
                                        <arraySelectors>
                                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.1"/>
                                        </arraySelectors>
                                      </child>
                                    </expression>
                                  </children>
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:CastExpression">
                                      <typeReference xsi:type="types:Float"/>
                                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.0/@statements.0/@statements.2/@statement/@statements.0/@variable"/>
                                    </expression>
                                  </children>
                                  <multiplicativeOperators xsi:type="operators:Division"/>
                                </expression>
                              </children>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.0/@statements.0/@statements.1/@variable"/>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </children>
                            <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </expression>
                        </child>
                      </returnValue>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.0/@statements.0/@statements.2/@statement/@statements.0/@variable"/>
                    <children xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:Short"/>
                      <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </children>
                  </condition>
                  <elseStatement xsi:type="statements:Block">
                    <statements xsi:type="statements:Return">
                      <returnValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </statements>
                  </elseStatement>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.0/@variable"/>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Int"/>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="expressions:MultiplicativeExpression">
                          <children xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.0/@statements.0/@statements.0/@variable">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.1"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="32767.0"/>
                              <multiplicativeOperators xsi:type="operators:Division"/>
                            </expression>
                          </children>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.0/@statements.0/@statements.1/@variable"/>
                          <multiplicativeOperators xsi:type="operators:Multiplication"/>
                        </children>
                        <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </expression>
                    </child>
                  </returnValue>
                </statements>
              </elseStatement>
            </statements>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.2"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="fdata">
                <typeReference xsi:type="types:Float"/>
                <arrayDimensionsAfter/>
                <initialValue xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Float"/>
                  <arrayDimensionsBefore/>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.0"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="scalefactor">
                <typeReference xsi:type="types:Float"/>
                <initialValue xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Float"/>
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ShiftExpression">
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.2"/>
                          <shiftOperators xsi:type="operators:LeftShift"/>
                        </expression>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </expression>
                  </child>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="f">
                    <typeReference xsi:type="types:Float"/>
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.1/@statements.0/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                        </position>
                      </arraySelectors>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Return">
                      <returnValue xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Int"/>
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:MultiplicativeExpression">
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:MultiplicativeExpression">
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.1/@statements.0/@statements.0/@variable">
                                      <arraySelectors>
                                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.1"/>
                                      </arraySelectors>
                                    </children>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.1/@statements.0/@statements.2/@statement/@statements.0/@variable"/>
                                    <multiplicativeOperators xsi:type="operators:Division"/>
                                  </expression>
                                </children>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.1/@statements.0/@statements.1/@variable"/>
                                <multiplicativeOperators xsi:type="operators:Multiplication"/>
                              </expression>
                            </children>
                            <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </expression>
                        </child>
                      </returnValue>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.1/@statements.0/@statements.2/@statement/@statements.0/@variable"/>
                    <children xsi:type="literals:DecimalFloatLiteral"/>
                  </condition>
                  <elseStatement xsi:type="statements:Block">
                    <statements xsi:type="statements:Return">
                      <returnValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </statements>
                  </elseStatement>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.0/@variable"/>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Int"/>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="expressions:MultiplicativeExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.1/@statements.0/@statements.0/@variable">
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.1"/>
                            </arraySelectors>
                          </children>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.1/@statements.0/@statements.1/@variable"/>
                          <multiplicativeOperators xsi:type="operators:Multiplication"/>
                        </children>
                        <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </expression>
                    </child>
                  </returnValue>
                </statements>
              </elseStatement>
            </statements>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.4"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="ddata">
                <typeReference xsi:type="types:Double"/>
                <arrayDimensionsAfter/>
                <initialValue xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Double"/>
                  <arrayDimensionsBefore/>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.0"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="scalefactor">
                <typeReference xsi:type="types:Double"/>
                <initialValue xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Double"/>
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ShiftExpression">
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.2"/>
                          <shiftOperators xsi:type="operators:LeftShift"/>
                        </expression>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </expression>
                  </child>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="d">
                    <typeReference xsi:type="types:Double"/>
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.2/@statements.0/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                        </position>
                      </arraySelectors>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Return">
                      <returnValue xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Int"/>
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:MultiplicativeExpression">
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:MultiplicativeExpression">
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.2/@statements.0/@statements.0/@variable">
                                      <arraySelectors>
                                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.1"/>
                                      </arraySelectors>
                                    </children>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.2/@statements.0/@statements.2/@statement/@statements.0/@variable"/>
                                    <multiplicativeOperators xsi:type="operators:Division"/>
                                  </expression>
                                </children>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.2/@statements.0/@statements.1/@variable"/>
                                <multiplicativeOperators xsi:type="operators:Multiplication"/>
                              </expression>
                            </children>
                            <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="0.5"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </expression>
                        </child>
                      </returnValue>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.2/@statements.0/@statements.2/@statement/@statements.0/@variable"/>
                    <children xsi:type="literals:DecimalDoubleLiteral"/>
                  </condition>
                  <elseStatement xsi:type="statements:Block">
                    <statements xsi:type="statements:Return">
                      <returnValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </statements>
                  </elseStatement>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.0/@variable"/>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Int"/>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="expressions:MultiplicativeExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.2/@statements.0/@statements.0/@variable">
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.1"/>
                            </arraySelectors>
                          </children>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.2/@statements.0/@statements.1/@variable"/>
                          <multiplicativeOperators xsi:type="operators:Multiplication"/>
                        </children>
                        <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="0.5"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </expression>
                    </child>
                  </returnValue>
                </statements>
              </elseStatement>
            </statements>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.5"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="bdata">
              <typeReference xsi:type="types:Byte"/>
              <arrayDimensionsAfter/>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Byte"/>
                <arrayDimensionsBefore/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.2/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AndExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.3/@statements.0/@variable">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.1"/>
                  </arraySelectors>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.3/@variable"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.2"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:AndExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.3/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                        </position>
                      </arraySelectors>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.3/@variable"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.0/@variable"/>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="usdata">
              <typeReference xsi:type="types:Short"/>
              <arrayDimensionsAfter/>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Short"/>
                <arrayDimensionsBefore/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.2/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AndExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.4/@statements.0/@variable">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.1"/>
                  </arraySelectors>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.3/@variable"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:AndExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.4/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                        </position>
                      </arraySelectors>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.3/@variable"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.0/@variable"/>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.1"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="idata">
              <typeReference xsi:type="types:Int"/>
              <arrayDimensionsAfter/>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Int"/>
                <arrayDimensionsBefore/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.2/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.5/@statements.0/@variable">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.1"/>
                </arraySelectors>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.4/@cases.5/@statements.0/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                      </position>
                    </arraySelectors>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.0/@variable"/>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.3"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/UnsupportedOperationException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="This method has not "/>
                <children xsi:type="references:StringReference" value="been implemented for transferType "/>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </throwable>
          </statements>
        </cases>
        <variable xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="scalefactor">
                  <typeReference xsi:type="types:Float"/>
                  <initialValue xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Float"/>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:ShiftExpression">
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.2"/>
                            <shiftOperators xsi:type="operators:LeftShift"/>
                          </expression>
                        </children>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <additiveOperators xsi:type="operators:Subtraction"/>
                      </expression>
                    </child>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="fcomp">
                  <typeReference xsi:type="types:Float"/>
                  <initialValue xsi:type="expressions:MultiplicativeExpression">
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Float"/>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.2/@variable"/>
                      </expression>
                    </children>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Float"/>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.3/@variable"/>
                      </expression>
                    </children>
                    <multiplicativeOperators xsi:type="operators:Division"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="invalp">
                  <typeReference xsi:type="types:Float"/>
                  <initialValue xsi:type="expressions:MultiplicativeExpression">
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Float"/>
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:ShiftExpression">
                                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                <children xsi:type="references:IdentifierReference">
                                  <arraySelectors>
                                    <position xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                                    </position>
                                  </arraySelectors>
                                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                </children>
                                <shiftOperators xsi:type="operators:LeftShift"/>
                              </expression>
                            </children>
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                            <additiveOperators xsi:type="operators:Subtraction"/>
                          </expression>
                        </child>
                      </expression>
                    </children>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Float"/>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.1/@variable"/>
                      </expression>
                    </children>
                    <multiplicativeOperators xsi:type="operators:Division"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Int"/>
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="expressions:MultiplicativeExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.5/@statement/@statements.0/@statement/@statements.1/@variable"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.5/@statement/@statements.0/@statement/@statements.2/@variable"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.5/@statement/@statements.0/@statement/@statements.0/@variable"/>
                        <multiplicativeOperators xsi:type="operators:Multiplication"/>
                        <multiplicativeOperators xsi:type="operators:Multiplication"/>
                      </children>
                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </expression>
                  </child>
                </returnValue>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.1/@variable"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </statements>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.0/@variable"/>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="scalefactor">
                  <typeReference xsi:type="types:Float"/>
                  <initialValue xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Float"/>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:ShiftExpression">
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.2"/>
                            <shiftOperators xsi:type="operators:LeftShift"/>
                          </expression>
                        </children>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <additiveOperators xsi:type="operators:Subtraction"/>
                      </expression>
                    </child>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="fcomp">
                  <typeReference xsi:type="types:Float"/>
                  <initialValue xsi:type="expressions:MultiplicativeExpression">
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Float"/>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.2/@variable"/>
                      </expression>
                    </children>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Float"/>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.3/@variable"/>
                      </expression>
                    </children>
                    <multiplicativeOperators xsi:type="operators:Division"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Int"/>
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="expressions:MultiplicativeExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.5/@elseStatement/@statements.0/@statement/@statements.1/@variable"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.5/@elseStatement/@statements.0/@statement/@statements.0/@variable"/>
                        <multiplicativeOperators xsi:type="operators:Multiplication"/>
                      </children>
                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </expression>
                  </child>
                </returnValue>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.1"/>
                </arraySelectors>
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.2"/>
            </condition>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.2/@variable"/>
          </statements>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getRGBComponent">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="inData">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="idx">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.22"/>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.29">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@parameters.0"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@parameters.1"/>
              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="lutidx">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.29">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@parameters.0"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@parameters.1"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="expressions:AndExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@statements.1/@elseStatement/@statement/@statements.0/@variable"/>
                  </arraySelectors>
                </children>
                <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
              </returnValue>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="lutidx">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.29">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@parameters.0"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="expressions:AndExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@statements.1/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                    </arraySelectors>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                </returnValue>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
          </elseStatement>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="norm">
          <typeReference xsi:type="types:Float">
            <comments>// Not CS_sRGB, CS_LINEAR_RGB, or any TYPE_GRAY ICC_ColorSpace</comments>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.45">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@parameters.0"/>
            <arguments xsi:type="literals:NullLiteral"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="rgb">
          <typeReference xsi:type="types:Float">
            <comments>// Note that getNormalizedComponents returns non-premultiplied values</comments>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../color/ColorSpace.class.xmi#//@classifiers.0/@members.41"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@statements.2/@variable"/>
            </next>
            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.8"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:CastExpression">
          <typeReference xsi:type="types:Int"/>
          <child xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AdditiveExpression">
              <children xsi:type="expressions:MultiplicativeExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@statements.3/@variable">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@parameters.1"/>
                  </arraySelectors>
                </children>
                <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                <multiplicativeOperators xsi:type="operators:Multiplication"/>
              </children>
              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </expression>
          </child>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getRed">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="inData">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the red color component for the specified pixel, scaled&#xA;     * from 0 to 255 in the default RGB ColorSpace, sRGB.  A color conversion&#xA;     * is done if necessary.  The &lt;CODE>pixel&lt;/CODE> value is specified by an array&#xA;     * of data elements of type &lt;CODE>transferType&lt;/CODE> passed in as an object &#xA;     * reference. The returned value will be a non pre-multiplied value. If the&#xA;     * alpha is premultiplied, this method divides it out before returning&#xA;     * the value (if the alpha value is 0, the red value will be 0). Since &#xA;     * &lt;code>ComponentColorModel&lt;/code> can be subclassed, subclasses&#xA;     * inherit the implementation of this method and if they don't override &#xA;     * it then they throw an exception if they use an unsupported&#xA;     * &lt;code>transferType&lt;/code>.&#xA;     * &#xA;     * @param inData The pixel from which you want to get the red color component, &#xA;     * specified by an array of data elements of type &lt;CODE>transferType&lt;/CODE>.&#xA;     *&#xA;     * @return The red color component for the specified pixel, as an int.&#xA;     *&#xA;     * @throws ClassCastException If &lt;CODE>inData&lt;/CODE> is not a primitive array &#xA;     * of type &lt;CODE>transferType&lt;/CODE>. &#xA;     * @throws ArrayIndexOutOfBoundsException if &lt;CODE>inData&lt;/CODE> is not &#xA;     * large enough to hold a pixel value for this&#xA;     * &lt;CODE>ColorModel&lt;/CODE>.&#xA;     * @throws UnsupportedOperationException If the transfer type of &#xA;     * this &lt;CODE>ComponentColorModel&lt;/CODE>&#xA;     * is not one of the supported transfer types:  &#xA;     * &lt;CODE>DataBuffer.TYPE_BYTE&lt;/CODE>, &lt;CODE>DataBuffer.TYPE_USHORT&lt;/CODE>, &#xA;     * &lt;CODE>DataBuffer.TYPE_INT&lt;/CODE>, &lt;CODE>DataBuffer.TYPE_SHORT&lt;/CODE>,&#xA;     * &lt;CODE>DataBuffer.TYPE_FLOAT&lt;/CODE>, or &lt;CODE>DataBuffer.TYPE_DOUBLE&lt;/CODE>.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.30">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0"/>
          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getGreen">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="inData">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the green color component for the specified pixel, scaled&#xA;     * from 0 to 255 in the default RGB &lt;CODE>ColorSpace&lt;/CODE>, sRGB.  &#xA;     * A color conversion is done if necessary.  The &lt;CODE>pixel&lt;/CODE> value &#xA;     * is specified by an array of data elements of type &lt;CODE>transferType&lt;/CODE> &#xA;     * passed in as an object reference. The returned value is a non pre-multiplied &#xA;     * value. If the alpha is premultiplied, this method divides it out before &#xA;     * returning the value (if the alpha value is 0, the green value will be 0).&#xA;     * Since &lt;code>ComponentColorModel&lt;/code> can be subclassed,&#xA;     * subclasses inherit the implementation of this method and if they&#xA;     * don't override it then they throw an exception if they use an&#xA;     * unsupported &lt;code>transferType&lt;/code>.&#xA;     *&#xA;     * @param inData The pixel from which you want to get the green color component, &#xA;     * specified by an array of data elements of type &lt;CODE>transferType&lt;/CODE>.&#xA;     *&#xA;     * @return The green color component for the specified pixel, as an int.&#xA;     *&#xA;     * @throws ClassCastException If &lt;CODE>inData&lt;/CODE> is not a primitive array &#xA;     * of type &lt;CODE>transferType&lt;/CODE>. &#xA;     * @throws ArrayIndexOutOfBoundsException if &lt;CODE>inData&lt;/CODE> is not &#xA;     * large enough to hold a pixel value for this&#xA;     * &lt;CODE>ColorModel&lt;/CODE>.&#xA;     * @throws UnsupportedOperationException If the transfer type of &#xA;     * this &lt;CODE>ComponentColorModel&lt;/CODE>&#xA;     * is not one of the supported transfer types:  &#xA;     * &lt;CODE>DataBuffer.TYPE_BYTE&lt;/CODE>, &lt;CODE>DataBuffer.TYPE_USHORT&lt;/CODE>, &#xA;     * &lt;CODE>DataBuffer.TYPE_INT&lt;/CODE>, &lt;CODE>DataBuffer.TYPE_SHORT&lt;/CODE>,&#xA;     * &lt;CODE>DataBuffer.TYPE_FLOAT&lt;/CODE>, or &lt;CODE>DataBuffer.TYPE_DOUBLE&lt;/CODE>.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.30">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.0"/>
          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getBlue">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="inData">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the blue color component for the specified pixel, scaled&#xA;     * from 0 to 255 in the default RGB &lt;CODE>ColorSpace&lt;/CODE>, sRGB.  &#xA;     * A color conversion is done if necessary.  The &lt;CODE>pixel&lt;/CODE> value is &#xA;     * specified by an array of data elements of type &lt;CODE>transferType&lt;/CODE> &#xA;     * passed in as an object reference. The returned value is a non pre-multiplied &#xA;     * value. If the alpha is premultiplied, this method divides it out before&#xA;     * returning the value (if the alpha value is 0, the blue value will be 0).&#xA;     * Since &lt;code>ComponentColorModel&lt;/code> can be subclassed,&#xA;     * subclasses inherit the implementation of this method and if they&#xA;     * don't override it then they throw an exception if they use an&#xA;     * unsupported &lt;code>transferType&lt;/code>.&#xA;     *&#xA;     * @param inData The pixel from which you want to get the blue color component, &#xA;     * specified by an array of data elements of type &lt;CODE>transferType&lt;/CODE>.&#xA;     *&#xA;     * @return The blue color component for the specified pixel, as an int.&#xA;     *&#xA;     * @throws ClassCastException If &lt;CODE>inData&lt;/CODE> is not a primitive array &#xA;     * of type &lt;CODE>transferType&lt;/CODE>. &#xA;     * @throws ArrayIndexOutOfBoundsException if &lt;CODE>inData&lt;/CODE> is not &#xA;     * large enough to hold a pixel value for this&#xA;     * &lt;CODE>ColorModel&lt;/CODE>.&#xA;     * @throws UnsupportedOperationException If the transfer type of &#xA;     * this &lt;CODE>ComponentColorModel&lt;/CODE>&#xA;     * is not one of the supported transfer types:  &#xA;     * &lt;CODE>DataBuffer.TYPE_BYTE&lt;/CODE>, &lt;CODE>DataBuffer.TYPE_USHORT&lt;/CODE>, &#xA;     * &lt;CODE>DataBuffer.TYPE_INT&lt;/CODE>, &lt;CODE>DataBuffer.TYPE_SHORT&lt;/CODE>,&#xA;     * &lt;CODE>DataBuffer.TYPE_FLOAT&lt;/CODE>, or &lt;CODE>DataBuffer.TYPE_DOUBLE&lt;/CODE>.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.30">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@parameters.0"/>
          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getAlpha">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="inData">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the alpha component for the specified pixel, scaled from&#xA;     * 0 to 255.  The pixel value is specified by an array of data&#xA;     * elements of type &lt;CODE>transferType&lt;/CODE> passed in as an &#xA;     * object reference.  Since &lt;code>ComponentColorModel&lt;/code> can be&#xA;     * subclassed, subclasses inherit the&#xA;     * implementation of this method and if they don't override it then   &#xA;     * they throw an exception if they use an unsupported &#xA;     * &lt;code>transferType&lt;/code>.&#xA;     *&#xA;     * @param inData The pixel from which you want to get the alpha component, &#xA;     * specified by an array of data elements of type &lt;CODE>transferType&lt;/CODE>.&#xA;     *&#xA;     * @return The alpha component for the specified pixel, as an int.&#xA;     *&#xA;     * @throws ClassCastException If &lt;CODE>inData&lt;/CODE> is not a primitive array &#xA;     * of type &lt;CODE>transferType&lt;/CODE>. &#xA;     * @throws ArrayIndexOutOfBoundsException if &lt;CODE>inData&lt;/CODE> is not &#xA;     * large enough to hold a pixel value for this&#xA;     * &lt;CODE>ColorModel&lt;/CODE>.&#xA;     * @throws UnsupportedOperationException If the transfer type of &#xA;     * this &lt;CODE>ComponentColorModel&lt;/CODE>&#xA;     * is not one of the supported transfer types:  &#xA;     * &lt;CODE>DataBuffer.TYPE_BYTE&lt;/CODE>, &lt;CODE>DataBuffer.TYPE_USHORT&lt;/CODE>, &#xA;     * &lt;CODE>DataBuffer.TYPE_INT&lt;/CODE>, &lt;CODE>DataBuffer.TYPE_SHORT&lt;/CODE>,&#xA;     * &lt;CODE>DataBuffer.TYPE_FLOAT&lt;/CODE>, or &lt;CODE>DataBuffer.TYPE_DOUBLE&lt;/CODE>.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="255"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
          </children>
          <children xsi:type="literals:BooleanLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="alpha">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="aIdx">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="mask">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:ShiftExpression">
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                <children xsi:type="references:IdentifierReference">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.2/@variable"/>
                  </arraySelectors>
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                </children>
                <shiftOperators xsi:type="operators:LeftShift"/>
              </expression>
            </children>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="sdata">
              <typeReference xsi:type="types:Short"/>
              <arrayDimensionsAfter/>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Short"/>
                <arrayDimensionsBefore/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@parameters.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Int"/>
                <child xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="expressions:MultiplicativeExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:MultiplicativeExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.4/@cases.0/@statements.0/@variable">
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.2/@variable"/>
                            </arraySelectors>
                          </children>
                          <children xsi:type="literals:DecimalFloatLiteral" decimalValue="32767.0"/>
                          <multiplicativeOperators xsi:type="operators:Division"/>
                        </expression>
                      </children>
                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                      <multiplicativeOperators xsi:type="operators:Multiplication"/>
                    </children>
                    <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </expression>
                </child>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.1/@variable"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.2"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="fdata">
              <typeReference xsi:type="types:Float"/>
              <arrayDimensionsAfter/>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Float"/>
                <arrayDimensionsBefore/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@parameters.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Int"/>
                <child xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="expressions:MultiplicativeExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.4/@cases.1/@statements.0/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.2/@variable"/>
                        </arraySelectors>
                      </children>
                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                      <multiplicativeOperators xsi:type="operators:Multiplication"/>
                    </children>
                    <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </expression>
                </child>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.1/@variable"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.4"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="ddata">
              <typeReference xsi:type="types:Double"/>
              <arrayDimensionsAfter/>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Double"/>
                <arrayDimensionsBefore/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@parameters.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Int"/>
                <child xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="expressions:MultiplicativeExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.4/@cases.2/@statements.0/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.2/@variable"/>
                        </arraySelectors>
                      </children>
                      <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="255.0"/>
                      <multiplicativeOperators xsi:type="operators:Multiplication"/>
                    </children>
                    <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="0.5"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </expression>
                </child>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.1/@variable"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.5"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="bdata">
              <typeReference xsi:type="types:Byte"/>
              <arrayDimensionsAfter/>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Byte"/>
                <arrayDimensionsBefore/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@parameters.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AndExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.4/@cases.3/@statements.0/@variable">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.2/@variable"/>
                  </arraySelectors>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.3/@variable"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="usdata">
              <typeReference xsi:type="types:Short"/>
              <arrayDimensionsAfter/>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Short"/>
                <arrayDimensionsBefore/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@parameters.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AndExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.4/@cases.4/@statements.0/@variable">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.2/@variable"/>
                  </arraySelectors>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.3/@variable"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.1"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="idata">
              <typeReference xsi:type="types:Int"/>
              <arrayDimensionsAfter/>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Int"/>
                <arrayDimensionsBefore/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@parameters.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.4/@cases.5/@statements.0/@variable">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.2/@variable"/>
                </arraySelectors>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.3"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/UnsupportedOperationException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="This method has not "/>
                <children xsi:type="references:StringReference" value="been implemented for transferType "/>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </throwable>
          </statements>
        </cases>
        <variable xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.1/@variable"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference">
            <arraySelectors>
              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.2/@variable"/>
            </arraySelectors>
            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:Int"/>
              <child xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="expressions:MultiplicativeExpression">
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:MultiplicativeExpression">
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:CastExpression">
                            <typeReference xsi:type="types:Float"/>
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.1/@variable"/>
                          </expression>
                        </children>
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:CastExpression">
                            <typeReference xsi:type="types:Float"/>
                            <child xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:ShiftExpression">
                                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                    <children xsi:type="references:IdentifierReference">
                                      <arraySelectors>
                                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.2/@variable"/>
                                      </arraySelectors>
                                      <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                    </children>
                                    <shiftOperators xsi:type="operators:LeftShift"/>
                                  </expression>
                                </children>
                                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                <additiveOperators xsi:type="operators:Subtraction"/>
                              </expression>
                            </child>
                          </expression>
                        </children>
                        <multiplicativeOperators xsi:type="operators:Division"/>
                      </expression>
                    </children>
                    <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                    <multiplicativeOperators xsi:type="operators:Multiplication"/>
                  </children>
                  <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </expression>
              </child>
            </returnValue>
          </statements>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getRGB">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="inData">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the color/alpha components for the specified pixel in the&#xA;     * default RGB color model format.  A color conversion is done if&#xA;     * necessary.  The pixel value is specified by an &#xA;     * array of data elements of type &lt;CODE>transferType&lt;/CODE> passed &#xA;     * in as an object reference.&#xA;     * The returned value is in a non pre-multiplied format. If&#xA;     * the alpha is premultiplied, this method divides it out of the&#xA;     * color components (if the alpha value is 0, the color values will be 0).&#xA;     * Since &lt;code>ComponentColorModel&lt;/code> can be subclassed,&#xA;     * subclasses inherit the implementation of this method and if they&#xA;     * don't override it then they throw an exception if they use an&#xA;     * unsupported &lt;code>transferType&lt;/code>.&#xA;     *&#xA;     * @param inData The pixel from which you want to get the color/alpha components, &#xA;     * specified by an array of data elements of type &lt;CODE>transferType&lt;/CODE>.&#xA;     *&#xA;     * @return The color/alpha components for the specified pixel, as an int.&#xA;     *&#xA;     * @throws ClassCastException If &lt;CODE>inData&lt;/CODE> is not a primitive array &#xA;     * of type &lt;CODE>transferType&lt;/CODE>. &#xA;     * @throws ArrayIndexOutOfBoundsException if &lt;CODE>inData&lt;/CODE> is not &#xA;     * large enough to hold a pixel value for this&#xA;     * &lt;CODE>ColorModel&lt;/CODE>.&#xA;     * @throws UnsupportedOperationException If the transfer type of &#xA;     * this &lt;CODE>ComponentColorModel&lt;/CODE>&#xA;     * is not one of the supported transfer types:  &#xA;     * &lt;CODE>DataBuffer.TYPE_BYTE&lt;/CODE>, &lt;CODE>DataBuffer.TYPE_USHORT&lt;/CODE>, &#xA;     * &lt;CODE>DataBuffer.TYPE_INT&lt;/CODE>, &lt;CODE>DataBuffer.TYPE_SHORT&lt;/CODE>,&#xA;     * &lt;CODE>DataBuffer.TYPE_FLOAT&lt;/CODE>, or &lt;CODE>DataBuffer.TYPE_DOUBLE&lt;/CODE>.&#xA;     * @see ColorModel#getRGBdefault&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.22"/>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="expressions:InclusiveOrExpression">
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:ShiftExpression">
                  <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.34">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35/@parameters.0"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                  <shiftOperators xsi:type="operators:LeftShift"/>
                </expression>
              </children>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:ShiftExpression">
                  <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.31">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35/@parameters.0"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                  <shiftOperators xsi:type="operators:LeftShift"/>
                </expression>
              </children>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:ShiftExpression">
                  <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.32">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35/@parameters.0"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
                  <shiftOperators xsi:type="operators:LeftShift"/>
                </expression>
              </children>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35/@parameters.0"/>
                </expression>
              </children>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="gray">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.31">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35/@parameters.0"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Return">
              <comments>// Red sRGB component should equal</comments>
              <comments>// green and blue components</comments>
              <returnValue xsi:type="expressions:InclusiveOrExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:ShiftExpression">
                    <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.34">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35/@parameters.0"/>
                    </children>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                    <shiftOperators xsi:type="operators:LeftShift"/>
                  </expression>
                </children>
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:ShiftExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35/@statements.1/@elseStatement/@statement/@statements.0/@variable"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                    <shiftOperators xsi:type="operators:LeftShift"/>
                  </expression>
                </children>
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:ShiftExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35/@statements.1/@elseStatement/@statement/@statements.0/@variable"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
                    <shiftOperators xsi:type="operators:LeftShift"/>
                  </expression>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35/@statements.1/@elseStatement/@statement/@statements.0/@variable"/>
              </returnValue>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.9"/>
            </children>
            <children xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../color/ColorSpace.class.xmi#//@classifiers.0/@members.14"/>
              </next>
              <target xsi:type="classifiers:Class" href="../color/ColorSpace.class.xmi#//@classifiers.0"/>
            </children>
          </condition>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="norm">
          <typeReference xsi:type="types:Float"/>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.45">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35/@parameters.0"/>
            <arguments xsi:type="literals:NullLiteral"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="rgb">
          <typeReference xsi:type="types:Float">
            <comments>// Note that getNormalizedComponents returns non-premult values</comments>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../color/ColorSpace.class.xmi#//@classifiers.0/@members.41"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35/@statements.2/@variable"/>
            </next>
            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.8"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:InclusiveOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:ShiftExpression">
              <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.34">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35/@parameters.0"/>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
              <shiftOperators xsi:type="operators:LeftShift"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:ShiftExpression">
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Int"/>
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="expressions:MultiplicativeExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35/@statements.3/@variable">
                          <arraySelectors>
                            <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                          </arraySelectors>
                        </children>
                        <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                        <multiplicativeOperators xsi:type="operators:Multiplication"/>
                      </children>
                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </expression>
                  </child>
                </expression>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
              <shiftOperators xsi:type="operators:LeftShift"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:ShiftExpression">
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Int"/>
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="expressions:MultiplicativeExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35/@statements.3/@variable">
                          <arraySelectors>
                            <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                          </arraySelectors>
                        </children>
                        <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                        <multiplicativeOperators xsi:type="operators:Multiplication"/>
                      </children>
                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </expression>
                  </child>
                </expression>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
              <shiftOperators xsi:type="operators:LeftShift"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:ShiftExpression">
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Int"/>
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="expressions:MultiplicativeExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35/@statements.3/@variable">
                          <arraySelectors>
                            <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                          </arraySelectors>
                        </children>
                        <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                        <multiplicativeOperators xsi:type="operators:Multiplication"/>
                      </children>
                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </expression>
                  </child>
                </expression>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <shiftOperators xsi:type="operators:LeftShift"/>
            </expression>
          </children>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getDataElements">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="rgb">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="pixel">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns a data element array representation of a pixel in this&#xA;     * &lt;CODE>ColorModel&lt;/CODE>, given an integer pixel representation &#xA;     * in the default RGB color model.&#xA;     * This array can then be passed to the &lt;CODE>setDataElements&lt;/CODE> &#xA;     * method of a &lt;CODE>WritableRaster&lt;/CODE> object.  If the &#xA;     * &lt;CODE>pixel&lt;/CODE> &#xA;     * parameter is null, a new array is allocated.  Since&#xA;     * &lt;code>ComponentColorModel&lt;/code> can be subclassed, subclasses&#xA;     * inherit the implementation of this method and if they don't&#xA;     * override it then   &#xA;     * they throw an exception if they use an unsupported &#xA;     * &lt;code>transferType&lt;/code>.&#xA;     *&#xA;     * @param rgb the integer representation of the pixel in the RGB&#xA;     *            color model&#xA;     * @param pixel the specified pixel&#xA;     * @return The data element array representation of a pixel&#xA;     * in this &lt;CODE>ColorModel&lt;/CODE>.&#xA;     * @throws ClassCastException If &lt;CODE>pixel&lt;/CODE> is not null and &#xA;     * is not a primitive array of type &lt;CODE>transferType&lt;/CODE>.  &#xA;     * @throws ArrayIndexOutOfBoundsException If &lt;CODE>pixel&lt;/CODE> is &#xA;     * not large enough to hold a pixel value for this&#xA;     * &lt;CODE>ColorModel&lt;/CODE>. &#xA;     * @throws UnsupportedOperationException If the transfer type of &#xA;     * this &lt;CODE>ComponentColorModel&lt;/CODE>&#xA;     * is not one of the supported transfer types:  &#xA;     * &lt;CODE>DataBuffer.TYPE_BYTE&lt;/CODE>, &lt;CODE>DataBuffer.TYPE_USHORT&lt;/CODE>, &#xA;     * &lt;CODE>DataBuffer.TYPE_INT&lt;/CODE>, &lt;CODE>DataBuffer.TYPE_SHORT&lt;/CODE>,&#xA;     * &lt;CODE>DataBuffer.TYPE_FLOAT&lt;/CODE>, or &lt;CODE>DataBuffer.TYPE_DOUBLE&lt;/CODE>.&#xA;     *&#xA;     * @see WritableRaster#setDataElements&#xA;     * @see SampleModel#setDataElements&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="red">
          <typeReference xsi:type="types:Int">
            <comments>// REMIND: Use rendering hints?</comments>
          </typeReference>
          <additionalLocalVariables name="grn"/>
          <additionalLocalVariables name="blu"/>
          <additionalLocalVariables name="alp"/>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:AndExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:ShiftExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.0"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                <shiftOperators xsi:type="operators:RightShift"/>
              </expression>
            </children>
            <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:AndExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:ShiftExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.0"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
                <shiftOperators xsi:type="operators:RightShift"/>
              </expression>
            </children>
            <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:AndExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.0"/>
            <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.22"/>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Switch">
            <comments>// Handle SHORT, FLOAT, &amp; DOUBLE here</comments>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="sdata">
                    <typeReference xsi:type="types:Short"/>
                    <arrayDimensionsAfter/>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.0/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="arrays:ArrayInstantiationBySize">
                          <typeReference xsi:type="types:Short"/>
                          <sizes xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                          </sizes>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.1"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </condition>
                  <elseStatement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.0/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:Short"/>
                          <arrayDimensionsBefore/>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.1"/>
                        </value>
                      </expression>
                    </statements>
                  </elseStatement>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="factor">
                    <typeReference xsi:type="types:Float"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.2/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="expressions:MultiplicativeExpression">
                          <children xsi:type="literals:DecimalFloatLiteral" decimalValue="32767.0"/>
                          <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                          <multiplicativeOperators xsi:type="operators:Division"/>
                        </value>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:AndExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:AndExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:AndExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.2/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="32767.0"/>
                              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="65535.0"/>
                              <multiplicativeOperators xsi:type="operators:Division"/>
                            </value>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:AndExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:ShiftExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.0"/>
                                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                                  <shiftOperators xsi:type="operators:RightShift"/>
                                </expression>
                              </children>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.0/@variable">
                              <arraySelectors>
                                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                              </arraySelectors>
                            </child>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:Short"/>
                              <child xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:AdditiveExpression">
                                  <children xsi:type="expressions:MultiplicativeExpression">
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                                    <children xsi:type="expressions:NestedExpression">
                                      <expression xsi:type="expressions:MultiplicativeExpression">
                                        <children xsi:type="literals:DecimalFloatLiteral" decimalValue="32767.0"/>
                                        <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                                        <multiplicativeOperators xsi:type="operators:Division"/>
                                      </expression>
                                    </children>
                                    <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                  </children>
                                  <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                                  <additiveOperators xsi:type="operators:Addition"/>
                                </expression>
                              </child>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="expressions:AssignmentExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.2/@variable"/>
                                <assignmentOperator xsi:type="operators:Assignment"/>
                                <value xsi:type="expressions:MultiplicativeExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.2/@variable"/>
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:MultiplicativeExpression">
                                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                                      <multiplicativeOperators xsi:type="operators:Division"/>
                                    </expression>
                                  </children>
                                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                </value>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.5"/>
                          </condition>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
                      </condition>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.0/@variable">
                          <arraySelectors>
                            <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                          </arraySelectors>
                        </child>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:Short"/>
                          <child xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:AdditiveExpression">
                              <children xsi:type="expressions:MultiplicativeExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.2/@variable"/>
                                <multiplicativeOperators xsi:type="operators:Multiplication"/>
                              </children>
                              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                              <additiveOperators xsi:type="operators:Addition"/>
                            </expression>
                          </child>
                        </value>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.0/@variable">
                          <arraySelectors>
                            <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                          </arraySelectors>
                        </child>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:Short"/>
                          <child xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:AdditiveExpression">
                              <children xsi:type="expressions:MultiplicativeExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.2/@variable"/>
                                <multiplicativeOperators xsi:type="operators:Multiplication"/>
                              </children>
                              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                              <additiveOperators xsi:type="operators:Addition"/>
                            </expression>
                          </child>
                        </value>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.0/@variable">
                          <arraySelectors>
                            <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                          </arraySelectors>
                        </child>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:Short"/>
                          <child xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:AdditiveExpression">
                              <children xsi:type="expressions:MultiplicativeExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.2/@variable"/>
                                <multiplicativeOperators xsi:type="operators:Multiplication"/>
                              </children>
                              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                              <additiveOperators xsi:type="operators:Addition"/>
                            </expression>
                          </child>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:ConditionalOrExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="expressions:AndExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                              </arraySelectors>
                            </children>
                            <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                          </value>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="expressions:AndExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                              </arraySelectors>
                            </children>
                            <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                          </value>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="expressions:AndExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                              </arraySelectors>
                            </children>
                            <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                          </value>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:LocalVariableStatement">
                        <variable name="gray">
                          <typeReference xsi:type="types:Float"/>
                          <initialValue xsi:type="expressions:MultiplicativeExpression">
                            <children xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:MultiplicativeExpression">
                                    <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.2125"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                                    <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                  </expression>
                                </children>
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:MultiplicativeExpression">
                                    <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.7154"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                                    <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                  </expression>
                                </children>
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:MultiplicativeExpression">
                                    <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.0721"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                                    <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                  </expression>
                                </children>
                                <additiveOperators xsi:type="operators:Addition"/>
                                <additiveOperators xsi:type="operators:Addition"/>
                              </expression>
                            </children>
                            <children xsi:type="literals:DecimalFloatLiteral" decimalValue="65535.0"/>
                            <multiplicativeOperators xsi:type="operators:Division"/>
                          </initialValue>
                        </variable>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.2/@variable"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="literals:DecimalFloatLiteral" decimalValue="32767.0"/>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="expressions:AssignmentExpression">
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                              <assignmentOperator xsi:type="operators:Assignment"/>
                              <value xsi:type="expressions:AndExpression">
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:ShiftExpression">
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.0"/>
                                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                                    <shiftOperators xsi:type="operators:RightShift"/>
                                  </expression>
                                </children>
                                <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                              </value>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="expressions:AssignmentExpression">
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.0/@variable">
                                <arraySelectors>
                                  <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                </arraySelectors>
                              </child>
                              <assignmentOperator xsi:type="operators:Assignment"/>
                              <value xsi:type="expressions:CastExpression">
                                <typeReference xsi:type="types:Short"/>
                                <child xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:AdditiveExpression">
                                    <children xsi:type="expressions:MultiplicativeExpression">
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                                      <children xsi:type="expressions:NestedExpression">
                                        <expression xsi:type="expressions:MultiplicativeExpression">
                                          <children xsi:type="literals:DecimalFloatLiteral" decimalValue="32767.0"/>
                                          <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                                          <multiplicativeOperators xsi:type="operators:Division"/>
                                        </expression>
                                      </children>
                                      <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                    </children>
                                    <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                                    <additiveOperators xsi:type="operators:Addition"/>
                                  </expression>
                                </child>
                              </value>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:Condition">
                            <statement xsi:type="statements:Block">
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="expressions:AssignmentExpression">
                                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.2/@variable"/>
                                  <assignmentOperator xsi:type="operators:Assignment"/>
                                  <value xsi:type="expressions:MultiplicativeExpression">
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.2/@variable"/>
                                    <children xsi:type="expressions:NestedExpression">
                                      <expression xsi:type="expressions:MultiplicativeExpression">
                                        <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                                        <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                                        <multiplicativeOperators xsi:type="operators:Division"/>
                                      </expression>
                                    </children>
                                    <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                    <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                  </value>
                                </expression>
                              </statements>
                            </statement>
                            <condition xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.5"/>
                            </condition>
                          </statements>
                        </statement>
                        <condition xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
                        </condition>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.0/@variable">
                            <arraySelectors>
                              <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                            </arraySelectors>
                          </child>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="expressions:CastExpression">
                            <typeReference xsi:type="types:Short"/>
                            <child xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="expressions:MultiplicativeExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@statement/@statements.3/@variable"/>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.2/@variable"/>
                                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                </children>
                                <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                                <additiveOperators xsi:type="operators:Addition"/>
                              </expression>
                            </child>
                          </value>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
                    <elseStatement xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:AndExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:AndExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:AndExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:LocalVariableStatement">
                          <variable name="gray">
                            <typeReference xsi:type="types:Int"/>
                            <initialValue xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:Int"/>
                              <child xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:AdditiveExpression">
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:MultiplicativeExpression">
                                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.2125"/>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                                      <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                    </expression>
                                  </children>
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:MultiplicativeExpression">
                                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.7154"/>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                                      <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                    </expression>
                                  </children>
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:MultiplicativeExpression">
                                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.0721"/>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                                      <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                    </expression>
                                  </children>
                                  <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                                  <additiveOperators xsi:type="operators:Addition"/>
                                  <additiveOperators xsi:type="operators:Addition"/>
                                  <additiveOperators xsi:type="operators:Addition"/>
                                </expression>
                              </child>
                            </initialValue>
                          </variable>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@statement/@statements.3/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:AndExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@statement/@statements.3/@variable"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.2/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="32767.0"/>
                              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="65535.0"/>
                              <multiplicativeOperators xsi:type="operators:Division"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="expressions:AssignmentExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                                <assignmentOperator xsi:type="operators:Assignment"/>
                                <value xsi:type="expressions:AndExpression">
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:ShiftExpression">
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.0"/>
                                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                                      <shiftOperators xsi:type="operators:RightShift"/>
                                    </expression>
                                  </children>
                                  <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                                </value>
                              </expression>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="expressions:AssignmentExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.0/@variable">
                                  <arraySelectors>
                                    <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                  </arraySelectors>
                                </child>
                                <assignmentOperator xsi:type="operators:Assignment"/>
                                <value xsi:type="expressions:CastExpression">
                                  <typeReference xsi:type="types:Short"/>
                                  <child xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:AdditiveExpression">
                                      <children xsi:type="expressions:MultiplicativeExpression">
                                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                                        <children xsi:type="expressions:NestedExpression">
                                          <expression xsi:type="expressions:MultiplicativeExpression">
                                            <children xsi:type="literals:DecimalFloatLiteral" decimalValue="32767.0"/>
                                            <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                                            <multiplicativeOperators xsi:type="operators:Division"/>
                                          </expression>
                                        </children>
                                        <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                      </children>
                                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                                      <additiveOperators xsi:type="operators:Addition"/>
                                    </expression>
                                  </child>
                                </value>
                              </expression>
                            </statements>
                            <statements xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.2/@variable"/>
                                    <assignmentOperator xsi:type="operators:Assignment"/>
                                    <value xsi:type="expressions:MultiplicativeExpression">
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.2/@variable"/>
                                      <children xsi:type="expressions:NestedExpression">
                                        <expression xsi:type="expressions:MultiplicativeExpression">
                                          <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                                          <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                                          <multiplicativeOperators xsi:type="operators:Division"/>
                                        </expression>
                                      </children>
                                      <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                      <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                    </value>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.5"/>
                              </condition>
                            </statements>
                          </statement>
                          <condition xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
                          </condition>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.0/@variable">
                              <arraySelectors>
                                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              </arraySelectors>
                            </child>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:Short"/>
                              <child xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:AdditiveExpression">
                                  <children xsi:type="expressions:MultiplicativeExpression">
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@statement/@statements.3/@variable"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.2/@variable"/>
                                    <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                  </children>
                                  <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                                  <additiveOperators xsi:type="operators:Addition"/>
                                </expression>
                              </child>
                            </value>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                      <elseStatement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.2/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                              <multiplicativeOperators xsi:type="operators:Division"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:LocalVariableStatement">
                          <variable name="norm">
                            <typeReference xsi:type="types:Float"/>
                            <arrayDimensionsAfter/>
                            <initialValue xsi:type="arrays:ArrayInstantiationBySize">
                              <typeReference xsi:type="types:Float"/>
                              <sizes xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                            </initialValue>
                          </variable>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable">
                              <arraySelectors>
                                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              </arraySelectors>
                            </child>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.2/@variable"/>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable">
                              <arraySelectors>
                                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                              </arraySelectors>
                            </child>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.2/@variable"/>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable">
                              <arraySelectors>
                                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                              </arraySelectors>
                            </child>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.2/@variable"/>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="references:IdentifierReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../color/ColorSpace.class.xmi#//@classifiers.0/@members.42"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable"/>
                              </next>
                              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.8"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ForLoop">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable">
                                      <arraySelectors>
                                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.0/@init"/>
                                      </arraySelectors>
                                    </child>
                                    <assignmentOperator xsi:type="operators:Assignment"/>
                                    <value xsi:type="expressions:MultiplicativeExpression">
                                      <children xsi:type="expressions:NestedExpression">
                                        <expression xsi:type="expressions:AdditiveExpression">
                                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable">
                                            <arraySelectors>
                                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.0/@init"/>
                                            </arraySelectors>
                                          </children>
                                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                                            <arraySelectors>
                                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.0/@init"/>
                                            </arraySelectors>
                                          </children>
                                          <additiveOperators xsi:type="operators:Subtraction"/>
                                        </expression>
                                      </children>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16">
                                        <arraySelectors>
                                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.0/@init"/>
                                        </arraySelectors>
                                      </children>
                                      <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                    </value>
                                  </expression>
                                </statements>
                                <statements xsi:type="statements:Condition">
                                  <comments>// REMIND: need to analyze whether this</comments>
                                  <comments>// clamping is necessary</comments>
                                  <statement xsi:type="statements:Block">
                                    <statements xsi:type="statements:ExpressionStatement">
                                      <expression xsi:type="expressions:AssignmentExpression">
                                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable">
                                          <arraySelectors>
                                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.0/@init"/>
                                          </arraySelectors>
                                        </child>
                                        <assignmentOperator xsi:type="operators:Assignment"/>
                                        <value xsi:type="literals:DecimalFloatLiteral"/>
                                      </expression>
                                    </statements>
                                  </statement>
                                  <condition xsi:type="expressions:RelationExpression">
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable">
                                      <arraySelectors>
                                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.0/@init"/>
                                      </arraySelectors>
                                    </children>
                                    <children xsi:type="literals:DecimalFloatLiteral"/>
                                    <relationOperators xsi:type="operators:LessThan"/>
                                  </condition>
                                </statements>
                                <statements xsi:type="statements:Condition">
                                  <statement xsi:type="statements:Block">
                                    <statements xsi:type="statements:ExpressionStatement">
                                      <expression xsi:type="expressions:AssignmentExpression">
                                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable">
                                          <arraySelectors>
                                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.0/@init"/>
                                          </arraySelectors>
                                        </child>
                                        <assignmentOperator xsi:type="operators:Assignment"/>
                                        <value xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                                      </expression>
                                    </statements>
                                  </statement>
                                  <condition xsi:type="expressions:RelationExpression">
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable">
                                      <arraySelectors>
                                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.0/@init"/>
                                      </arraySelectors>
                                    </children>
                                    <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                                    <relationOperators xsi:type="operators:GreaterThan"/>
                                  </condition>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:RelationExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.0/@init"/>
                                <children xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                                </children>
                                <relationOperators xsi:type="operators:LessThan"/>
                              </condition>
                              <init xsi:type="variables:LocalVariable" name="i">
                                <typeReference xsi:type="types:Int"/>
                                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              </init>
                              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.0/@init"/>
                                <operator xsi:type="operators:PlusPlus"/>
                              </updates>
                            </statements>
                          </statement>
                          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.2/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="literals:DecimalFloatLiteral" decimalValue="32767.0"/>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="expressions:AssignmentExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                                <assignmentOperator xsi:type="operators:Assignment"/>
                                <value xsi:type="expressions:AndExpression">
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:ShiftExpression">
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.0"/>
                                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                                      <shiftOperators xsi:type="operators:RightShift"/>
                                    </expression>
                                  </children>
                                  <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                                </value>
                              </expression>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="expressions:AssignmentExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.0/@variable">
                                  <arraySelectors>
                                    <position xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                                    </position>
                                  </arraySelectors>
                                </child>
                                <assignmentOperator xsi:type="operators:Assignment"/>
                                <value xsi:type="expressions:CastExpression">
                                  <typeReference xsi:type="types:Short"/>
                                  <child xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:AdditiveExpression">
                                      <children xsi:type="expressions:MultiplicativeExpression">
                                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                                        <children xsi:type="expressions:NestedExpression">
                                          <expression xsi:type="expressions:MultiplicativeExpression">
                                            <children xsi:type="literals:DecimalFloatLiteral" decimalValue="32767.0"/>
                                            <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                                            <multiplicativeOperators xsi:type="operators:Division"/>
                                          </expression>
                                        </children>
                                        <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                      </children>
                                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                                      <additiveOperators xsi:type="operators:Addition"/>
                                    </expression>
                                  </child>
                                </value>
                              </expression>
                            </statements>
                            <statements xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.2/@variable"/>
                                    <assignmentOperator xsi:type="operators:AssignmentMultiplication"/>
                                    <value xsi:type="expressions:MultiplicativeExpression">
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                                      <children xsi:type="expressions:NestedExpression">
                                        <expression xsi:type="expressions:MultiplicativeExpression">
                                          <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                                          <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                                          <multiplicativeOperators xsi:type="operators:Division"/>
                                        </expression>
                                      </children>
                                      <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                    </value>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.5"/>
                              </condition>
                            </statements>
                          </statement>
                          <condition xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
                          </condition>
                        </statements>
                        <statements xsi:type="statements:ForLoop">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="expressions:AssignmentExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.0/@variable">
                                  <arraySelectors>
                                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.9/@init"/>
                                  </arraySelectors>
                                </child>
                                <assignmentOperator xsi:type="operators:Assignment"/>
                                <value xsi:type="expressions:CastExpression">
                                  <typeReference xsi:type="types:Short"/>
                                  <child xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:AdditiveExpression">
                                      <children xsi:type="expressions:MultiplicativeExpression">
                                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable">
                                          <arraySelectors>
                                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.9/@init"/>
                                          </arraySelectors>
                                        </children>
                                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.2/@variable"/>
                                        <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                      </children>
                                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                                      <additiveOperators xsi:type="operators:Addition"/>
                                    </expression>
                                  </child>
                                </value>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:RelationExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.9/@init"/>
                            <children xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                            </children>
                            <relationOperators xsi:type="operators:LessThan"/>
                          </condition>
                          <init xsi:type="variables:LocalVariable" name="i">
                            <typeReference xsi:type="types:Int"/>
                            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                          </init>
                          <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.9/@init"/>
                            <operator xsi:type="operators:PlusPlus"/>
                          </updates>
                        </statements>
                      </elseStatement>
                    </elseStatement>
                  </elseStatement>
                </statements>
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.0/@statements.0/@statements.0/@variable"/>
                </statements>
              </statements>
              <condition xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.2"/>
                </next>
                <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
              </condition>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="fdata">
                    <typeReference xsi:type="types:Float"/>
                    <arrayDimensionsAfter/>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.0/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="arrays:ArrayInstantiationBySize">
                          <typeReference xsi:type="types:Float"/>
                          <sizes xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                          </sizes>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.1"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </condition>
                  <elseStatement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.0/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:Float"/>
                          <arrayDimensionsBefore/>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.1"/>
                        </value>
                      </expression>
                    </statements>
                  </elseStatement>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="factor">
                    <typeReference xsi:type="types:Float"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:AndExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:AndExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:AndExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.2/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="65535.0"/>
                              <multiplicativeOperators xsi:type="operators:Division"/>
                            </value>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
                      <elseStatement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.2/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                              <multiplicativeOperators xsi:type="operators:Division"/>
                            </value>
                          </expression>
                        </statements>
                      </elseStatement>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:AndExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:ShiftExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.0"/>
                                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                                  <shiftOperators xsi:type="operators:RightShift"/>
                                </expression>
                              </children>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.0/@variable">
                              <arraySelectors>
                                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                              </arraySelectors>
                            </child>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:MultiplicativeExpression">
                                  <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                                  <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                                  <multiplicativeOperators xsi:type="operators:Division"/>
                                </expression>
                              </children>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="expressions:AssignmentExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.2/@variable"/>
                                <assignmentOperator xsi:type="operators:AssignmentMultiplication"/>
                                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.0/@variable">
                                  <arraySelectors>
                                    <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                                  </arraySelectors>
                                </value>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.5"/>
                          </condition>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
                      </condition>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.0/@variable">
                          <arraySelectors>
                            <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                          </arraySelectors>
                        </child>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="expressions:MultiplicativeExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.2/@variable"/>
                          <multiplicativeOperators xsi:type="operators:Multiplication"/>
                        </value>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.0/@variable">
                          <arraySelectors>
                            <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                          </arraySelectors>
                        </child>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="expressions:MultiplicativeExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.2/@variable"/>
                          <multiplicativeOperators xsi:type="operators:Multiplication"/>
                        </value>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.0/@variable">
                          <arraySelectors>
                            <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                          </arraySelectors>
                        </child>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="expressions:MultiplicativeExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.2/@variable"/>
                          <multiplicativeOperators xsi:type="operators:Multiplication"/>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:ConditionalOrExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="expressions:AndExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                              </arraySelectors>
                            </children>
                            <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                          </value>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="expressions:AndExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                              </arraySelectors>
                            </children>
                            <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                          </value>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="expressions:AndExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                              </arraySelectors>
                            </children>
                            <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                          </value>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.0/@variable">
                            <arraySelectors>
                              <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                            </arraySelectors>
                          </child>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="expressions:MultiplicativeExpression">
                            <children xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:MultiplicativeExpression">
                                    <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.2125"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                                    <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                  </expression>
                                </children>
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:MultiplicativeExpression">
                                    <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.7154"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                                    <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                  </expression>
                                </children>
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:MultiplicativeExpression">
                                    <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.0721"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                                    <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                  </expression>
                                </children>
                                <additiveOperators xsi:type="operators:Addition"/>
                                <additiveOperators xsi:type="operators:Addition"/>
                              </expression>
                            </children>
                            <children xsi:type="literals:DecimalFloatLiteral" decimalValue="65535.0"/>
                            <multiplicativeOperators xsi:type="operators:Division"/>
                          </value>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="expressions:AssignmentExpression">
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                              <assignmentOperator xsi:type="operators:Assignment"/>
                              <value xsi:type="expressions:AndExpression">
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:ShiftExpression">
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.0"/>
                                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                                    <shiftOperators xsi:type="operators:RightShift"/>
                                  </expression>
                                </children>
                                <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                              </value>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="expressions:AssignmentExpression">
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.0/@variable">
                                <arraySelectors>
                                  <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                </arraySelectors>
                              </child>
                              <assignmentOperator xsi:type="operators:Assignment"/>
                              <value xsi:type="expressions:MultiplicativeExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:MultiplicativeExpression">
                                    <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                                    <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                                    <multiplicativeOperators xsi:type="operators:Division"/>
                                  </expression>
                                </children>
                                <multiplicativeOperators xsi:type="operators:Multiplication"/>
                              </value>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:Condition">
                            <statement xsi:type="statements:Block">
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="expressions:AssignmentExpression">
                                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.0/@variable">
                                    <arraySelectors>
                                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                    </arraySelectors>
                                  </child>
                                  <assignmentOperator xsi:type="operators:AssignmentMultiplication"/>
                                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.0/@variable">
                                    <arraySelectors>
                                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                    </arraySelectors>
                                  </value>
                                </expression>
                              </statements>
                            </statement>
                            <condition xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.5"/>
                            </condition>
                          </statements>
                        </statement>
                        <condition xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
                        </condition>
                      </statements>
                    </statement>
                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
                    <elseStatement xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:AndExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:AndExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:AndExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:LocalVariableStatement">
                          <variable name="gray">
                            <typeReference xsi:type="types:Int"/>
                            <initialValue xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:Int"/>
                              <child xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:AdditiveExpression">
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:MultiplicativeExpression">
                                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.2125"/>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                                      <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                    </expression>
                                  </children>
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:MultiplicativeExpression">
                                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.7154"/>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                                      <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                    </expression>
                                  </children>
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:MultiplicativeExpression">
                                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.0721"/>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                                      <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                    </expression>
                                  </children>
                                  <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                                  <additiveOperators xsi:type="operators:Addition"/>
                                  <additiveOperators xsi:type="operators:Addition"/>
                                  <additiveOperators xsi:type="operators:Addition"/>
                                </expression>
                              </child>
                            </initialValue>
                          </variable>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.0/@variable">
                              <arraySelectors>
                                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              </arraySelectors>
                            </child>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:AndExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
                                    <arraySelectors>
                                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.3/@elseStatement/@elseStatement/@statement/@statements.3/@variable"/>
                                    </arraySelectors>
                                  </children>
                                  <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                                </expression>
                              </children>
                              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="65535.0"/>
                              <multiplicativeOperators xsi:type="operators:Division"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="expressions:AssignmentExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                                <assignmentOperator xsi:type="operators:Assignment"/>
                                <value xsi:type="expressions:AndExpression">
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:ShiftExpression">
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.0"/>
                                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                                      <shiftOperators xsi:type="operators:RightShift"/>
                                    </expression>
                                  </children>
                                  <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                                </value>
                              </expression>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="expressions:AssignmentExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.0/@variable">
                                  <arraySelectors>
                                    <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                  </arraySelectors>
                                </child>
                                <assignmentOperator xsi:type="operators:Assignment"/>
                                <value xsi:type="expressions:MultiplicativeExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:MultiplicativeExpression">
                                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                                      <multiplicativeOperators xsi:type="operators:Division"/>
                                    </expression>
                                  </children>
                                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                </value>
                              </expression>
                            </statements>
                            <statements xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.0/@variable">
                                      <arraySelectors>
                                        <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                      </arraySelectors>
                                    </child>
                                    <assignmentOperator xsi:type="operators:AssignmentMultiplication"/>
                                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.0/@variable">
                                      <arraySelectors>
                                        <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                      </arraySelectors>
                                    </value>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.5"/>
                              </condition>
                            </statements>
                          </statement>
                          <condition xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
                          </condition>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                      <elseStatement xsi:type="statements:Block">
                        <statements xsi:type="statements:LocalVariableStatement">
                          <variable name="norm">
                            <typeReference xsi:type="types:Float"/>
                            <arrayDimensionsAfter/>
                            <initialValue xsi:type="arrays:ArrayInstantiationBySize">
                              <typeReference xsi:type="types:Float"/>
                              <sizes xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                            </initialValue>
                          </variable>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.2/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                              <multiplicativeOperators xsi:type="operators:Division"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable">
                              <arraySelectors>
                                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              </arraySelectors>
                            </child>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.2/@variable"/>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable">
                              <arraySelectors>
                                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                              </arraySelectors>
                            </child>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.2/@variable"/>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable">
                              <arraySelectors>
                                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                              </arraySelectors>
                            </child>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.2/@variable"/>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="references:IdentifierReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../color/ColorSpace.class.xmi#//@classifiers.0/@members.42"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable"/>
                              </next>
                              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.8"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="expressions:AssignmentExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                                <assignmentOperator xsi:type="operators:Assignment"/>
                                <value xsi:type="expressions:AndExpression">
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:ShiftExpression">
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.0"/>
                                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                                      <shiftOperators xsi:type="operators:RightShift"/>
                                    </expression>
                                  </children>
                                  <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                                </value>
                              </expression>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="expressions:AssignmentExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.0/@variable">
                                  <arraySelectors>
                                    <position xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                                    </position>
                                  </arraySelectors>
                                </child>
                                <assignmentOperator xsi:type="operators:Assignment"/>
                                <value xsi:type="expressions:MultiplicativeExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.2/@variable"/>
                                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                </value>
                              </expression>
                            </statements>
                            <statements xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.2/@variable"/>
                                    <assignmentOperator xsi:type="operators:AssignmentMultiplication"/>
                                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                                  </expression>
                                </statements>
                                <statements xsi:type="statements:ForLoop">
                                  <statement xsi:type="statements:Block">
                                    <statements xsi:type="statements:ExpressionStatement">
                                      <expression xsi:type="expressions:AssignmentExpression">
                                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable">
                                          <arraySelectors>
                                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.2/@statement/@statements.1/@init"/>
                                          </arraySelectors>
                                        </child>
                                        <assignmentOperator xsi:type="operators:AssignmentMultiplication"/>
                                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.2/@variable"/>
                                      </expression>
                                    </statements>
                                  </statement>
                                  <condition xsi:type="expressions:RelationExpression">
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.2/@statement/@statements.1/@init"/>
                                    <children xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                                    </children>
                                    <relationOperators xsi:type="operators:LessThan"/>
                                  </condition>
                                  <init xsi:type="variables:LocalVariable" name="i">
                                    <typeReference xsi:type="types:Int"/>
                                    <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                  </init>
                                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.2/@statement/@statements.1/@init"/>
                                    <operator xsi:type="operators:PlusPlus"/>
                                  </updates>
                                </statements>
                              </statement>
                              <condition xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.5"/>
                              </condition>
                            </statements>
                          </statement>
                          <condition xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
                          </condition>
                        </statements>
                        <statements xsi:type="statements:ForLoop">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="expressions:AssignmentExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.0/@variable">
                                  <arraySelectors>
                                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.7/@init"/>
                                  </arraySelectors>
                                </child>
                                <assignmentOperator xsi:type="operators:Assignment"/>
                                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable">
                                  <arraySelectors>
                                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.7/@init"/>
                                  </arraySelectors>
                                </value>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:RelationExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.7/@init"/>
                            <children xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                            </children>
                            <relationOperators xsi:type="operators:LessThan"/>
                          </condition>
                          <init xsi:type="variables:LocalVariable" name="i">
                            <typeReference xsi:type="types:Int"/>
                            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                          </init>
                          <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statements.7/@init"/>
                            <operator xsi:type="operators:PlusPlus"/>
                          </updates>
                        </statements>
                      </elseStatement>
                    </elseStatement>
                  </elseStatement>
                </statements>
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.1/@statements.0/@statements.0/@variable"/>
                </statements>
              </statements>
              <condition xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.4"/>
                </next>
                <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
              </condition>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="ddata">
                    <typeReference xsi:type="types:Double"/>
                    <arrayDimensionsAfter/>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.0/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="arrays:ArrayInstantiationBySize">
                          <typeReference xsi:type="types:Double"/>
                          <sizes xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                          </sizes>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.1"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </condition>
                  <elseStatement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.0/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:Double"/>
                          <arrayDimensionsBefore/>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.1"/>
                        </value>
                      </expression>
                    </statements>
                  </elseStatement>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="factor">
                        <typeReference xsi:type="types:Double"/>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:AndExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:AndExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:AndExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@statement/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="1.0"/>
                              <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="65535.0"/>
                              <multiplicativeOperators xsi:type="operators:Division"/>
                            </value>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
                      <elseStatement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@statement/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="1.0"/>
                              <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="255.0"/>
                              <multiplicativeOperators xsi:type="operators:Division"/>
                            </value>
                          </expression>
                        </statements>
                      </elseStatement>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:AndExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:ShiftExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.0"/>
                                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                                  <shiftOperators xsi:type="operators:RightShift"/>
                                </expression>
                              </children>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.0/@variable">
                              <arraySelectors>
                                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                              </arraySelectors>
                            </child>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:MultiplicativeExpression">
                                  <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="1.0"/>
                                  <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="255.0"/>
                                  <multiplicativeOperators xsi:type="operators:Division"/>
                                </expression>
                              </children>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="expressions:AssignmentExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@statement/@statements.0/@variable"/>
                                <assignmentOperator xsi:type="operators:AssignmentMultiplication"/>
                                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.0/@variable">
                                  <arraySelectors>
                                    <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                                  </arraySelectors>
                                </value>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.5"/>
                          </condition>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
                      </condition>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.0/@variable">
                          <arraySelectors>
                            <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                          </arraySelectors>
                        </child>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="expressions:MultiplicativeExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@statement/@statements.0/@variable"/>
                          <multiplicativeOperators xsi:type="operators:Multiplication"/>
                        </value>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.0/@variable">
                          <arraySelectors>
                            <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                          </arraySelectors>
                        </child>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="expressions:MultiplicativeExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@statement/@statements.0/@variable"/>
                          <multiplicativeOperators xsi:type="operators:Multiplication"/>
                        </value>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.0/@variable">
                          <arraySelectors>
                            <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                          </arraySelectors>
                        </child>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="expressions:MultiplicativeExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@statement/@statements.0/@variable"/>
                          <multiplicativeOperators xsi:type="operators:Multiplication"/>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:ConditionalOrExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="expressions:AndExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                              </arraySelectors>
                            </children>
                            <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                          </value>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="expressions:AndExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                              </arraySelectors>
                            </children>
                            <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                          </value>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="expressions:AndExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                              </arraySelectors>
                            </children>
                            <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                          </value>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.0/@variable">
                            <arraySelectors>
                              <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                            </arraySelectors>
                          </child>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="expressions:MultiplicativeExpression">
                            <children xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:MultiplicativeExpression">
                                    <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="0.2125"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                                    <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                  </expression>
                                </children>
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:MultiplicativeExpression">
                                    <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="0.7154"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                                    <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                  </expression>
                                </children>
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:MultiplicativeExpression">
                                    <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="0.0721"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                                    <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                  </expression>
                                </children>
                                <additiveOperators xsi:type="operators:Addition"/>
                                <additiveOperators xsi:type="operators:Addition"/>
                              </expression>
                            </children>
                            <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="65535.0"/>
                            <multiplicativeOperators xsi:type="operators:Division"/>
                          </value>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="expressions:AssignmentExpression">
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                              <assignmentOperator xsi:type="operators:Assignment"/>
                              <value xsi:type="expressions:AndExpression">
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:ShiftExpression">
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.0"/>
                                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                                    <shiftOperators xsi:type="operators:RightShift"/>
                                  </expression>
                                </children>
                                <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                              </value>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="expressions:AssignmentExpression">
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.0/@variable">
                                <arraySelectors>
                                  <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                </arraySelectors>
                              </child>
                              <assignmentOperator xsi:type="operators:Assignment"/>
                              <value xsi:type="expressions:MultiplicativeExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:MultiplicativeExpression">
                                    <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="1.0"/>
                                    <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="255.0"/>
                                    <multiplicativeOperators xsi:type="operators:Division"/>
                                  </expression>
                                </children>
                                <multiplicativeOperators xsi:type="operators:Multiplication"/>
                              </value>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:Condition">
                            <statement xsi:type="statements:Block">
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="expressions:AssignmentExpression">
                                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.0/@variable">
                                    <arraySelectors>
                                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                    </arraySelectors>
                                  </child>
                                  <assignmentOperator xsi:type="operators:AssignmentMultiplication"/>
                                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.0/@variable">
                                    <arraySelectors>
                                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                    </arraySelectors>
                                  </value>
                                </expression>
                              </statements>
                            </statement>
                            <condition xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.5"/>
                            </condition>
                          </statements>
                        </statement>
                        <condition xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
                        </condition>
                      </statements>
                    </statement>
                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
                    <elseStatement xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:AndExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:AndExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:AndExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:LocalVariableStatement">
                          <variable name="gray">
                            <typeReference xsi:type="types:Int"/>
                            <initialValue xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:Int"/>
                              <child xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:AdditiveExpression">
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:MultiplicativeExpression">
                                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.2125"/>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                                      <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                    </expression>
                                  </children>
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:MultiplicativeExpression">
                                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.7154"/>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                                      <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                    </expression>
                                  </children>
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:MultiplicativeExpression">
                                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.0721"/>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                                      <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                    </expression>
                                  </children>
                                  <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                                  <additiveOperators xsi:type="operators:Addition"/>
                                  <additiveOperators xsi:type="operators:Addition"/>
                                  <additiveOperators xsi:type="operators:Addition"/>
                                </expression>
                              </child>
                            </initialValue>
                          </variable>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.0/@variable">
                              <arraySelectors>
                                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              </arraySelectors>
                            </child>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:AndExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
                                    <arraySelectors>
                                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@elseStatement/@elseStatement/@statement/@statements.3/@variable"/>
                                    </arraySelectors>
                                  </children>
                                  <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                                </expression>
                              </children>
                              <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="65535.0"/>
                              <multiplicativeOperators xsi:type="operators:Division"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="expressions:AssignmentExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                                <assignmentOperator xsi:type="operators:Assignment"/>
                                <value xsi:type="expressions:AndExpression">
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:ShiftExpression">
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.0"/>
                                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                                      <shiftOperators xsi:type="operators:RightShift"/>
                                    </expression>
                                  </children>
                                  <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                                </value>
                              </expression>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="expressions:AssignmentExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.0/@variable">
                                  <arraySelectors>
                                    <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                  </arraySelectors>
                                </child>
                                <assignmentOperator xsi:type="operators:Assignment"/>
                                <value xsi:type="expressions:MultiplicativeExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:MultiplicativeExpression">
                                      <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="1.0"/>
                                      <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="255.0"/>
                                      <multiplicativeOperators xsi:type="operators:Division"/>
                                    </expression>
                                  </children>
                                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                </value>
                              </expression>
                            </statements>
                            <statements xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.0/@variable">
                                      <arraySelectors>
                                        <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                      </arraySelectors>
                                    </child>
                                    <assignmentOperator xsi:type="operators:AssignmentMultiplication"/>
                                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.0/@variable">
                                      <arraySelectors>
                                        <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                      </arraySelectors>
                                    </value>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.5"/>
                              </condition>
                            </statements>
                          </statement>
                          <condition xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
                          </condition>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                      <elseStatement xsi:type="statements:Block">
                        <statements xsi:type="statements:LocalVariableStatement">
                          <variable name="factor">
                            <typeReference xsi:type="types:Float"/>
                            <initialValue xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                              <multiplicativeOperators xsi:type="operators:Division"/>
                            </initialValue>
                          </variable>
                        </statements>
                        <statements xsi:type="statements:LocalVariableStatement">
                          <variable name="norm">
                            <typeReference xsi:type="types:Float"/>
                            <arrayDimensionsAfter/>
                            <initialValue xsi:type="arrays:ArrayInstantiationBySize">
                              <typeReference xsi:type="types:Float"/>
                              <sizes xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                            </initialValue>
                          </variable>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable">
                              <arraySelectors>
                                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              </arraySelectors>
                            </child>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable"/>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable">
                              <arraySelectors>
                                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                              </arraySelectors>
                            </child>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable"/>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable">
                              <arraySelectors>
                                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                              </arraySelectors>
                            </child>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable"/>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="references:IdentifierReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../color/ColorSpace.class.xmi#//@classifiers.0/@members.42"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable"/>
                              </next>
                              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.8"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="expressions:AssignmentExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                                <assignmentOperator xsi:type="operators:Assignment"/>
                                <value xsi:type="expressions:AndExpression">
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:ShiftExpression">
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.0"/>
                                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                                      <shiftOperators xsi:type="operators:RightShift"/>
                                    </expression>
                                  </children>
                                  <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                                </value>
                              </expression>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="expressions:AssignmentExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.0/@variable">
                                  <arraySelectors>
                                    <position xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                                    </position>
                                  </arraySelectors>
                                </child>
                                <assignmentOperator xsi:type="operators:Assignment"/>
                                <value xsi:type="expressions:MultiplicativeExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:MultiplicativeExpression">
                                      <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="1.0"/>
                                      <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="255.0"/>
                                      <multiplicativeOperators xsi:type="operators:Division"/>
                                    </expression>
                                  </children>
                                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                </value>
                              </expression>
                            </statements>
                            <statements xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable"/>
                                    <assignmentOperator xsi:type="operators:AssignmentMultiplication"/>
                                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                                  </expression>
                                </statements>
                                <statements xsi:type="statements:ForLoop">
                                  <statement xsi:type="statements:Block">
                                    <statements xsi:type="statements:ExpressionStatement">
                                      <expression xsi:type="expressions:AssignmentExpression">
                                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable">
                                          <arraySelectors>
                                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.2/@statement/@statements.1/@init"/>
                                          </arraySelectors>
                                        </child>
                                        <assignmentOperator xsi:type="operators:AssignmentMultiplication"/>
                                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable"/>
                                      </expression>
                                    </statements>
                                  </statement>
                                  <condition xsi:type="expressions:RelationExpression">
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.2/@statement/@statements.1/@init"/>
                                    <children xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                                    </children>
                                    <relationOperators xsi:type="operators:LessThan"/>
                                  </condition>
                                  <init xsi:type="variables:LocalVariable" name="i">
                                    <typeReference xsi:type="types:Int"/>
                                    <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                  </init>
                                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.2/@statement/@statements.1/@init"/>
                                    <operator xsi:type="operators:PlusPlus"/>
                                  </updates>
                                </statements>
                              </statement>
                              <condition xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.5"/>
                              </condition>
                            </statements>
                          </statement>
                          <condition xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
                          </condition>
                        </statements>
                        <statements xsi:type="statements:ForLoop">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="expressions:AssignmentExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.0/@variable">
                                  <arraySelectors>
                                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@elseStatement/@elseStatement/@elseStatement/@statements.7/@init"/>
                                  </arraySelectors>
                                </child>
                                <assignmentOperator xsi:type="operators:Assignment"/>
                                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable">
                                  <arraySelectors>
                                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@elseStatement/@elseStatement/@elseStatement/@statements.7/@init"/>
                                  </arraySelectors>
                                </value>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:RelationExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@elseStatement/@elseStatement/@elseStatement/@statements.7/@init"/>
                            <children xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                            </children>
                            <relationOperators xsi:type="operators:LessThan"/>
                          </condition>
                          <init xsi:type="variables:LocalVariable" name="i">
                            <typeReference xsi:type="types:Int"/>
                            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                          </init>
                          <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@elseStatement/@elseStatement/@elseStatement/@statements.7/@init"/>
                            <operator xsi:type="operators:PlusPlus"/>
                          </updates>
                        </statements>
                      </elseStatement>
                    </elseStatement>
                  </elseStatement>
                </statements>
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@statement/@statements.0/@cases.2/@statements.0/@statements.0/@variable"/>
                </statements>
              </statements>
              <condition xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.5"/>
                </next>
                <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
              </condition>
            </cases>
            <variable xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
            </variable>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="intpixel">
          <typeReference xsi:type="types:Int">
            <comments>// Handle BYTE, USHORT, &amp; INT here</comments>
            <comments>//REMIND: maybe more efficient not to use int array for</comments>
            <comments>//DataBuffer.TYPE_USHORT and DataBuffer.TYPE_INT</comments>
          </typeReference>
          <arrayDimensionsAfter/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.6/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Int"/>
                <arrayDimensionsBefore/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.1"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
            </children>
            <children xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.3"/>
              </next>
              <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
            </children>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.1"/>
            <children xsi:type="literals:NullLiteral"/>
          </children>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.6/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:Int"/>
                <sizes xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                </sizes>
              </value>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="precision">
              <typeReference xsi:type="types:Int"/>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="factor">
              <typeReference xsi:type="types:Float"/>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:AndExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                          </arraySelectors>
                        </children>
                        <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:AndExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                          </arraySelectors>
                        </children>
                        <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:AndExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                          </arraySelectors>
                        </children>
                        <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@statement/@statements.0/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@statement/@statements.1/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:MultiplicativeExpression">
                        <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                        <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                        <multiplicativeOperators xsi:type="operators:Division"/>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
                  </children>
                  <children xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
                  </children>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:AndExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                          </arraySelectors>
                        </children>
                        <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:AndExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                          </arraySelectors>
                        </children>
                        <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:AndExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                          </arraySelectors>
                        </children>
                        <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@statement/@statements.0/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@statement/@statements.1/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:MultiplicativeExpression">
                        <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                        <children xsi:type="literals:DecimalFloatLiteral" decimalValue="65535.0"/>
                        <multiplicativeOperators xsi:type="operators:Division"/>
                      </value>
                    </expression>
                  </statements>
                </elseStatement>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@statement/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@statement/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:MultiplicativeExpression">
                    <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                    <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                    <multiplicativeOperators xsi:type="operators:Division"/>
                  </value>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:AndExpression">
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:ShiftExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.0"/>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                        <shiftOperators xsi:type="operators:RightShift"/>
                      </expression>
                    </children>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.6/@variable">
                        <arraySelectors>
                          <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference">
                    <arraySelectors>
                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                    </arraySelectors>
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.6/@variable">
                        <arraySelectors>
                          <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Int"/>
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:MultiplicativeExpression">
                                  <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                                  <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                                  <multiplicativeOperators xsi:type="operators:Division"/>
                                </expression>
                              </children>
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:AdditiveExpression">
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:ShiftExpression">
                                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                      <children xsi:type="references:IdentifierReference">
                                        <arraySelectors>
                                          <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                                        </arraySelectors>
                                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                      </children>
                                      <shiftOperators xsi:type="operators:LeftShift"/>
                                    </expression>
                                  </children>
                                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                  <additiveOperators xsi:type="operators:Subtraction"/>
                                </expression>
                              </children>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </children>
                            <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </expression>
                        </child>
                      </value>
                    </expression>
                  </statements>
                </elseStatement>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <comments>// force component calculations below</comments>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@statement/@statements.1/@variable"/>
                      <assignmentOperator xsi:type="operators:AssignmentMultiplication"/>
                      <value xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:MultiplicativeExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                          <children xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                              <multiplicativeOperators xsi:type="operators:Division"/>
                            </expression>
                          </children>
                          <multiplicativeOperators xsi:type="operators:Multiplication"/>
                        </expression>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@statement/@statements.0/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:UnaryExpression">
                        <operators xsi:type="operators:Subtraction"/>
                        <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.5"/>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.6/@variable">
                    <arraySelectors>
                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference">
                <arraySelectors>
                  <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </arraySelectors>
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@statement/@statements.0/@variable"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.6/@variable">
                    <arraySelectors>
                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Int"/>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="expressions:MultiplicativeExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@statement/@statements.1/@variable"/>
                          <children xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:AdditiveExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:ShiftExpression">
                                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                  <children xsi:type="references:IdentifierReference">
                                    <arraySelectors>
                                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                    </arraySelectors>
                                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                  </children>
                                  <shiftOperators xsi:type="operators:LeftShift"/>
                                </expression>
                              </children>
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                              <additiveOperators xsi:type="operators:Subtraction"/>
                            </expression>
                          </children>
                          <multiplicativeOperators xsi:type="operators:Multiplication"/>
                          <multiplicativeOperators xsi:type="operators:Multiplication"/>
                        </children>
                        <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </expression>
                    </child>
                  </value>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.6/@variable">
                    <arraySelectors>
                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Int"/>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                    </child>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference">
                <arraySelectors>
                  <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                </arraySelectors>
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@statement/@statements.0/@variable"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.6/@variable">
                    <arraySelectors>
                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Int"/>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="expressions:MultiplicativeExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@statement/@statements.1/@variable"/>
                          <children xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:AdditiveExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:ShiftExpression">
                                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                  <children xsi:type="references:IdentifierReference">
                                    <arraySelectors>
                                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                    </arraySelectors>
                                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                  </children>
                                  <shiftOperators xsi:type="operators:LeftShift"/>
                                </expression>
                              </children>
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                              <additiveOperators xsi:type="operators:Subtraction"/>
                            </expression>
                          </children>
                          <multiplicativeOperators xsi:type="operators:Multiplication"/>
                          <multiplicativeOperators xsi:type="operators:Multiplication"/>
                        </children>
                        <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </expression>
                    </child>
                  </value>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.6/@variable">
                    <arraySelectors>
                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Int"/>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                    </child>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference">
                <arraySelectors>
                  <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                </arraySelectors>
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@statement/@statements.0/@variable"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.6/@variable">
                    <arraySelectors>
                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Int"/>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="expressions:MultiplicativeExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@statement/@statements.1/@variable"/>
                          <children xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:AdditiveExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:ShiftExpression">
                                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                  <children xsi:type="references:IdentifierReference">
                                    <arraySelectors>
                                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                                    </arraySelectors>
                                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                  </children>
                                  <shiftOperators xsi:type="operators:LeftShift"/>
                                </expression>
                              </children>
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                              <additiveOperators xsi:type="operators:Subtraction"/>
                            </expression>
                          </children>
                          <multiplicativeOperators xsi:type="operators:Multiplication"/>
                          <multiplicativeOperators xsi:type="operators:Multiplication"/>
                        </children>
                        <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </expression>
                    </child>
                  </value>
                </expression>
              </statements>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:AndExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                    </arraySelectors>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:AndExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                    </arraySelectors>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:AndExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                    </arraySelectors>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="gray">
                <typeReference xsi:type="types:Float"/>
                <initialValue xsi:type="expressions:MultiplicativeExpression">
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:MultiplicativeExpression">
                          <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.2125"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                          <multiplicativeOperators xsi:type="operators:Multiplication"/>
                        </expression>
                      </children>
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:MultiplicativeExpression">
                          <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.7154"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                          <multiplicativeOperators xsi:type="operators:Multiplication"/>
                        </expression>
                      </children>
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:MultiplicativeExpression">
                          <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.0721"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                          <multiplicativeOperators xsi:type="operators:Multiplication"/>
                        </expression>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </expression>
                  </children>
                  <children xsi:type="literals:DecimalFloatLiteral" decimalValue="65535.0"/>
                  <multiplicativeOperators xsi:type="operators:Division"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:AndExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ShiftExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.0"/>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                          <shiftOperators xsi:type="operators:RightShift"/>
                        </expression>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.6/@variable">
                          <arraySelectors>
                            <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                          </arraySelectors>
                        </child>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference">
                      <arraySelectors>
                        <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                      </arraySelectors>
                      <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                    </children>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
                  </condition>
                  <elseStatement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.6/@variable">
                          <arraySelectors>
                            <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                          </arraySelectors>
                        </child>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:Int"/>
                          <child xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:AdditiveExpression">
                              <children xsi:type="expressions:MultiplicativeExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:MultiplicativeExpression">
                                    <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                                    <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                                    <multiplicativeOperators xsi:type="operators:Division"/>
                                  </expression>
                                </children>
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:AdditiveExpression">
                                    <children xsi:type="expressions:NestedExpression">
                                      <expression xsi:type="expressions:ShiftExpression">
                                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                        <children xsi:type="references:IdentifierReference">
                                          <arraySelectors>
                                            <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                          </arraySelectors>
                                          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                        </children>
                                        <shiftOperators xsi:type="operators:LeftShift"/>
                                      </expression>
                                    </children>
                                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                    <additiveOperators xsi:type="operators:Subtraction"/>
                                  </expression>
                                </children>
                                <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                <multiplicativeOperators xsi:type="operators:Multiplication"/>
                              </children>
                              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                              <additiveOperators xsi:type="operators:Addition"/>
                            </expression>
                          </child>
                        </value>
                      </expression>
                    </statements>
                  </elseStatement>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@statement/@statements.3/@variable"/>
                        <assignmentOperator xsi:type="operators:AssignmentMultiplication"/>
                        <value xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:MultiplicativeExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                            <children xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:MultiplicativeExpression">
                                <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                                <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                                <multiplicativeOperators xsi:type="operators:Division"/>
                              </expression>
                            </children>
                            <multiplicativeOperators xsi:type="operators:Multiplication"/>
                          </expression>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.5"/>
                  </condition>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.6/@variable">
                  <arraySelectors>
                    <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </arraySelectors>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Int"/>
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="expressions:MultiplicativeExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@statement/@statements.3/@variable"/>
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:ShiftExpression">
                                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                <children xsi:type="references:IdentifierReference">
                                  <arraySelectors>
                                    <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                  </arraySelectors>
                                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                </children>
                                <shiftOperators xsi:type="operators:LeftShift"/>
                              </expression>
                            </children>
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                            <additiveOperators xsi:type="operators:Subtraction"/>
                          </expression>
                        </children>
                        <multiplicativeOperators xsi:type="operators:Multiplication"/>
                      </children>
                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </expression>
                  </child>
                </value>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:AndExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                      </arraySelectors>
                    </children>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:AndExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                      </arraySelectors>
                    </children>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:AndExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                      </arraySelectors>
                    </children>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="gray16">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Int"/>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:MultiplicativeExpression">
                            <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.2125"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                            <multiplicativeOperators xsi:type="operators:Multiplication"/>
                          </expression>
                        </children>
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:MultiplicativeExpression">
                            <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.7154"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                            <multiplicativeOperators xsi:type="operators:Multiplication"/>
                          </expression>
                        </children>
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:MultiplicativeExpression">
                            <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.0721"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                            <multiplicativeOperators xsi:type="operators:Multiplication"/>
                          </expression>
                        </children>
                        <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </expression>
                    </child>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="gray">
                  <typeReference xsi:type="types:Float"/>
                  <initialValue xsi:type="expressions:MultiplicativeExpression">
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AndExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@statement/@statements.3/@variable"/>
                          </arraySelectors>
                        </children>
                        <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                      </expression>
                    </children>
                    <children xsi:type="literals:DecimalFloatLiteral" decimalValue="65535.0"/>
                    <multiplicativeOperators xsi:type="operators:Division"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:AndExpression">
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:ShiftExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.0"/>
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                            <shiftOperators xsi:type="operators:RightShift"/>
                          </expression>
                        </children>
                        <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.6/@variable">
                            <arraySelectors>
                              <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                            </arraySelectors>
                          </child>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference">
                        <arraySelectors>
                          <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        </arraySelectors>
                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
                    </condition>
                    <elseStatement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.6/@variable">
                            <arraySelectors>
                              <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                            </arraySelectors>
                          </child>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="expressions:CastExpression">
                            <typeReference xsi:type="types:Int"/>
                            <child xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="expressions:MultiplicativeExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:MultiplicativeExpression">
                                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                                      <multiplicativeOperators xsi:type="operators:Division"/>
                                    </expression>
                                  </children>
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:AdditiveExpression">
                                      <children xsi:type="expressions:NestedExpression">
                                        <expression xsi:type="expressions:ShiftExpression">
                                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                          <children xsi:type="references:IdentifierReference">
                                            <arraySelectors>
                                              <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                            </arraySelectors>
                                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                          </children>
                                          <shiftOperators xsi:type="operators:LeftShift"/>
                                        </expression>
                                      </children>
                                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                      <additiveOperators xsi:type="operators:Subtraction"/>
                                    </expression>
                                  </children>
                                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                </children>
                                <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                                <additiveOperators xsi:type="operators:Addition"/>
                              </expression>
                            </child>
                          </value>
                        </expression>
                      </statements>
                    </elseStatement>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@statement/@statements.4/@variable"/>
                          <assignmentOperator xsi:type="operators:AssignmentMultiplication"/>
                          <value xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:MultiplicativeExpression">
                                  <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                                  <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                                  <multiplicativeOperators xsi:type="operators:Division"/>
                                </expression>
                              </children>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </expression>
                          </value>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.5"/>
                    </condition>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.6/@variable">
                    <arraySelectors>
                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Int"/>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="expressions:MultiplicativeExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@statement/@statements.4/@variable"/>
                          <children xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:AdditiveExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:ShiftExpression">
                                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                  <children xsi:type="references:IdentifierReference">
                                    <arraySelectors>
                                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                    </arraySelectors>
                                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                  </children>
                                  <shiftOperators xsi:type="operators:LeftShift"/>
                                </expression>
                              </children>
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                              <additiveOperators xsi:type="operators:Subtraction"/>
                            </expression>
                          </children>
                          <multiplicativeOperators xsi:type="operators:Multiplication"/>
                        </children>
                        <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </expression>
                    </child>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="norm">
                  <typeReference xsi:type="types:Float">
                    <comments>// Need to convert the color</comments>
                  </typeReference>
                  <arrayDimensionsBefore/>
                  <initialValue xsi:type="arrays:ArrayInstantiationBySize">
                    <typeReference xsi:type="types:Float"/>
                    <sizes xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="factor">
                  <typeReference xsi:type="types:Float"/>
                  <initialValue xsi:type="expressions:MultiplicativeExpression">
                    <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                    <children xsi:type="literals:DecimalFloatLiteral" decimalValue="255.0"/>
                    <multiplicativeOperators xsi:type="operators:Division"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable">
                    <arraySelectors>
                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:MultiplicativeExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable"/>
                    <multiplicativeOperators xsi:type="operators:Multiplication"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable">
                    <arraySelectors>
                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:MultiplicativeExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.0"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable"/>
                    <multiplicativeOperators xsi:type="operators:Multiplication"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable">
                    <arraySelectors>
                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:MultiplicativeExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.1"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable"/>
                    <multiplicativeOperators xsi:type="operators:Multiplication"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../color/ColorSpace.class.xmi#//@classifiers.0/@members.42"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable"/>
                    </next>
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.8"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ForLoop">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable">
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.0/@init"/>
                            </arraySelectors>
                          </child>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="expressions:MultiplicativeExpression">
                            <children xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable">
                                  <arraySelectors>
                                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.0/@init"/>
                                  </arraySelectors>
                                </children>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                                  <arraySelectors>
                                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.0/@init"/>
                                  </arraySelectors>
                                </children>
                                <additiveOperators xsi:type="operators:Subtraction"/>
                              </expression>
                            </children>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16">
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.0/@init"/>
                              </arraySelectors>
                            </children>
                            <multiplicativeOperators xsi:type="operators:Multiplication"/>
                          </value>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:Condition">
                        <comments>// REMIND: need to analyze whether this</comments>
                        <comments>// clamping is necessary</comments>
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="expressions:AssignmentExpression">
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.0/@init"/>
                                </arraySelectors>
                              </child>
                              <assignmentOperator xsi:type="operators:Assignment"/>
                              <value xsi:type="literals:DecimalFloatLiteral"/>
                            </expression>
                          </statements>
                        </statement>
                        <condition xsi:type="expressions:RelationExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable">
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.0/@init"/>
                            </arraySelectors>
                          </children>
                          <children xsi:type="literals:DecimalFloatLiteral"/>
                          <relationOperators xsi:type="operators:LessThan"/>
                        </condition>
                      </statements>
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="expressions:AssignmentExpression">
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.0/@init"/>
                                </arraySelectors>
                              </child>
                              <assignmentOperator xsi:type="operators:Assignment"/>
                              <value xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                            </expression>
                          </statements>
                        </statement>
                        <condition xsi:type="expressions:RelationExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable">
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.0/@init"/>
                            </arraySelectors>
                          </children>
                          <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                          <relationOperators xsi:type="operators:GreaterThan"/>
                        </condition>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.0/@init"/>
                      <children xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                      </children>
                      <relationOperators xsi:type="operators:LessThan"/>
                    </condition>
                    <init xsi:type="variables:LocalVariable" name="i">
                      <typeReference xsi:type="types:Int"/>
                      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </init>
                    <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.6/@statement/@statements.0/@init"/>
                      <operator xsi:type="operators:PlusPlus"/>
                    </updates>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:AndExpression">
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:ShiftExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.0"/>
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                            <shiftOperators xsi:type="operators:RightShift"/>
                          </expression>
                        </children>
                        <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.6/@variable">
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                              </position>
                            </arraySelectors>
                          </child>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                          </position>
                        </arraySelectors>
                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
                    </condition>
                    <elseStatement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.6/@variable">
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                              </position>
                            </arraySelectors>
                          </child>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="expressions:CastExpression">
                            <typeReference xsi:type="types:Int"/>
                            <child xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="expressions:MultiplicativeExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable"/>
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:AdditiveExpression">
                                      <children xsi:type="expressions:NestedExpression">
                                        <expression xsi:type="expressions:ShiftExpression">
                                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                          <children xsi:type="references:IdentifierReference">
                                            <arraySelectors>
                                              <position xsi:type="references:IdentifierReference">
                                                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                                              </position>
                                            </arraySelectors>
                                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                          </children>
                                          <shiftOperators xsi:type="operators:LeftShift"/>
                                        </expression>
                                      </children>
                                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                      <additiveOperators xsi:type="operators:Subtraction"/>
                                    </expression>
                                  </children>
                                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                </children>
                                <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                                <additiveOperators xsi:type="operators:Addition"/>
                              </expression>
                            </child>
                          </value>
                        </expression>
                      </statements>
                    </elseStatement>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable"/>
                          <assignmentOperator xsi:type="operators:AssignmentMultiplication"/>
                          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable/@additionalLocalVariables.2"/>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ForLoop">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="expressions:AssignmentExpression">
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.7/@statement/@statements.2/@statement/@statements.1/@init"/>
                                </arraySelectors>
                              </child>
                              <assignmentOperator xsi:type="operators:AssignmentMultiplication"/>
                              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable"/>
                            </expression>
                          </statements>
                        </statement>
                        <condition xsi:type="expressions:RelationExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.7/@statement/@statements.2/@statement/@statements.1/@init"/>
                          <children xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                          </children>
                          <relationOperators xsi:type="operators:LessThan"/>
                        </condition>
                        <init xsi:type="variables:LocalVariable" name="i">
                          <typeReference xsi:type="types:Int"/>
                          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        </init>
                        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.7/@statement/@statements.2/@statement/@statements.1/@init"/>
                          <operator xsi:type="operators:PlusPlus"/>
                        </updates>
                      </statements>
                    </statement>
                    <condition xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.5"/>
                    </condition>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
                </condition>
              </statements>
              <statements xsi:type="statements:ForLoop">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.6/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.8/@init"/>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Int"/>
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.8/@init"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:AdditiveExpression">
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:ShiftExpression">
                                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                      <children xsi:type="references:IdentifierReference">
                                        <arraySelectors>
                                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.8/@init"/>
                                        </arraySelectors>
                                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                      </children>
                                      <shiftOperators xsi:type="operators:LeftShift"/>
                                    </expression>
                                  </children>
                                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                  <additiveOperators xsi:type="operators:Subtraction"/>
                                </expression>
                              </children>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </children>
                            <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </expression>
                        </child>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.8/@init"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                  </children>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <init xsi:type="variables:LocalVariable" name="i">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </init>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@elseStatement/@elseStatement/@elseStatement/@statements.8/@init"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="bdata">
                <typeReference xsi:type="types:Byte"/>
                <arrayDimensionsAfter/>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.9/@cases.0/@statements.0/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="arrays:ArrayInstantiationBySize">
                      <typeReference xsi:type="types:Byte"/>
                      <sizes xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                      </sizes>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.1"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.9/@cases.0/@statements.0/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:Byte"/>
                      <arrayDimensionsBefore/>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.1"/>
                    </value>
                  </expression>
                </statements>
              </elseStatement>
            </statements>
            <statements xsi:type="statements:ForLoop">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.9/@cases.0/@statements.0/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.9/@cases.0/@statements.0/@statements.2/@init"/>
                      </arraySelectors>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:Byte"/>
                      <child xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:AndExpression">
                          <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.6/@variable">
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.9/@cases.0/@statements.0/@statements.2/@init"/>
                            </arraySelectors>
                          </children>
                        </expression>
                      </child>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.9/@cases.0/@statements.0/@statements.2/@init"/>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <init xsi:type="variables:LocalVariable" name="i">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </init>
              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.9/@cases.0/@statements.0/@statements.2/@init"/>
                <operator xsi:type="operators:PlusPlus"/>
              </updates>
            </statements>
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.9/@cases.0/@statements.0/@statements.0/@variable"/>
            </statements>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="sdata">
                <typeReference xsi:type="types:Short"/>
                <arrayDimensionsAfter/>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.9/@cases.1/@statements.0/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="arrays:ArrayInstantiationBySize">
                      <typeReference xsi:type="types:Short"/>
                      <sizes xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                      </sizes>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.1"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.9/@cases.1/@statements.0/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:Short"/>
                      <arrayDimensionsBefore/>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.1"/>
                    </value>
                  </expression>
                </statements>
              </elseStatement>
            </statements>
            <statements xsi:type="statements:ForLoop">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.9/@cases.1/@statements.0/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.9/@cases.1/@statements.0/@statements.2/@init"/>
                      </arraySelectors>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:Short"/>
                      <child xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:AndExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.6/@variable">
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.9/@cases.1/@statements.0/@statements.2/@init"/>
                            </arraySelectors>
                          </children>
                          <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                        </expression>
                      </child>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.9/@cases.1/@statements.0/@statements.2/@init"/>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <init xsi:type="variables:LocalVariable" name="i">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </init>
              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.9/@cases.1/@statements.0/@statements.2/@init"/>
                <operator xsi:type="operators:PlusPlus"/>
              </updates>
            </statements>
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.9/@cases.1/@statements.0/@statements.0/@variable"/>
            </statements>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.1"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ForLoop">
                <comments>// fix 4412670 - for components of 24 or more bits</comments>
                <comments>// some calculations done above with float precision</comments>
                <comments>// may lose enough precision that the integer result</comments>
                <comments>// overflows nBits, so we need to clamp.</comments>
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.6/@variable">
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.9/@cases.2/@statements.0/@statement/@statements.0/@init"/>
                            </arraySelectors>
                          </child>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:ShiftExpression">
                                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                <children xsi:type="references:IdentifierReference">
                                  <arraySelectors>
                                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.9/@cases.2/@statements.0/@statement/@statements.0/@init"/>
                                  </arraySelectors>
                                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                </children>
                                <shiftOperators xsi:type="operators:LeftShift"/>
                              </expression>
                            </children>
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                            <additiveOperators xsi:type="operators:Subtraction"/>
                          </value>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.6/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.9/@cases.2/@statements.0/@statement/@statements.0/@init"/>
                        </arraySelectors>
                      </children>
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:ShiftExpression">
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                              <children xsi:type="references:IdentifierReference">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.9/@cases.2/@statements.0/@statement/@statements.0/@init"/>
                                </arraySelectors>
                                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                              </children>
                              <shiftOperators xsi:type="operators:LeftShift"/>
                            </expression>
                          </children>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                          <additiveOperators xsi:type="operators:Subtraction"/>
                        </expression>
                      </children>
                      <relationOperators xsi:type="operators:GreaterThan"/>
                    </condition>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.9/@cases.2/@statements.0/@statement/@statements.0/@init"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                  </children>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <init xsi:type="variables:LocalVariable" name="i">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </init>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.9/@cases.2/@statements.0/@statement/@statements.0/@init"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.10"/>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="23"/>
              <relationOperators xsi:type="operators:GreaterThan"/>
            </condition>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.6/@variable"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.3"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <variable xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Throw">
        <throwable xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arguments xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:StringReference" value="This method has not been "/>
            <children xsi:type="references:StringReference" value="implemented for transferType "/>
            <children xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
            </children>
            <additiveOperators xsi:type="operators:Addition"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </arguments>
        </throwable>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getComponents">
      <typeReference xsi:type="types:Int"/>
      <arrayDimensionsBefore/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="pixel">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="components">
        <typeReference xsi:type="types:Int"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="offset">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Returns an array of unnormalized color/alpha components given a pixel&#xA;     * in this &lt;CODE>ColorModel&lt;/CODE>.&#xA;     * An IllegalArgumentException is thrown if the component value for this&#xA;     * &lt;CODE>ColorModel&lt;/CODE> is not conveniently representable in the&#xA;     * unnormalized form.  Color/alpha components are stored&#xA;     * in the &lt;CODE>components&lt;/CODE> array starting at &lt;CODE>offset&lt;/CODE> &#xA;     * (even if the array is allocated by this method).   &#xA;     *&#xA;     * @param pixel The pixel value specified as an integer.&#xA;     * @param components An integer array in which to store the unnormalized &#xA;     * color/alpha components. If the &lt;CODE>components&lt;/CODE> array is null,&#xA;     * a new array is allocated.  &#xA;     * @param offset An offset into the &lt;CODE>components&lt;/CODE> array.&#xA;     *&#xA;     * @return The components array.  &#xA;     *&#xA;     * @throws IllegalArgumentException If there is more than one&#xA;     * component in this &lt;CODE>ColorModel&lt;/CODE>.&#xA;     * @throws IllegalArgumentException If this&#xA;     * &lt;CODE>ColorModel&lt;/CODE> does not support the unnormalized form&#xA;     * @throws ArrayIndexOutOfBoundsException If the &lt;CODE>components&lt;/CODE> &#xA;     * array is not null and is not large enough to hold all the color and &#xA;     * alpha components (starting at offset).&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="More than one component per pixel"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
          <relationOperators xsi:type="operators:GreaterThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.22"/>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="This ColorModel does not support the unnormalized form"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@parameters.1"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:Int"/>
                <sizes xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@parameters.2"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </sizes>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@parameters.1"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@parameters.1">
            <arraySelectors>
              <position xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@parameters.2"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </position>
            </arraySelectors>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@parameters.0"/>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:ShiftExpression">
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                      <children xsi:type="references:IdentifierReference">
                        <arraySelectors>
                          <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        </arraySelectors>
                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                      </children>
                      <shiftOperators xsi:type="operators:LeftShift"/>
                    </expression>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </expression>
              </children>
            </expression>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@parameters.1"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getComponents">
      <typeReference xsi:type="types:Int"/>
      <arrayDimensionsBefore/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="pixel">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="components">
        <typeReference xsi:type="types:Int"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="offset">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns an array of unnormalized color/alpha components given a pixel&#xA;     * in this &lt;CODE>ColorModel&lt;/CODE>.  The pixel value is specified by an &#xA;     * array of data elements of type &lt;CODE>transferType&lt;/CODE> passed in as  &#xA;     * an object reference. &#xA;     * An IllegalArgumentException is thrown if the component values for this&#xA;     * &lt;CODE>ColorModel&lt;/CODE> are not conveniently representable in the&#xA;     * unnormalized form.&#xA;     * Color/alpha components are stored in the &lt;CODE>components&lt;/CODE> array &#xA;     * starting at  &lt;CODE>offset&lt;/CODE> (even if the array is allocated by &#xA;     * this method).  Since &lt;code>ComponentColorModel&lt;/code> can be&#xA;     * subclassed, subclasses inherit the&#xA;     * implementation of this method and if they don't override it then   &#xA;     * this method might throw an exception if they use an unsupported &#xA;     * &lt;code>transferType&lt;/code>.&#xA;     *&#xA;     * @param pixel A pixel value specified by an array of data elements of&#xA;     * type &lt;CODE>transferType&lt;/CODE>.&#xA;     * @param components An integer array in which to store the unnormalized &#xA;     * color/alpha components. If the &lt;CODE>components&lt;/CODE> array is null, &#xA;     * a new array is allocated. &#xA;     * @param offset An offset into the &lt;CODE>components&lt;/CODE> array.&#xA;     *&#xA;     * @return The &lt;CODE>components&lt;/CODE> array.&#xA;     *&#xA;     * @throws IllegalArgumentException If this&#xA;     * &lt;CODE>ComponentColorModel&lt;/CODE> does not support the unnormalized form&#xA;     * @throws UnsupportedOperationException in some cases iff the&#xA;     * transfer type of this &lt;CODE>ComponentColorModel&lt;/CODE>&#xA;     * is not one of the following transfer types:  &#xA;     * &lt;CODE>DataBuffer.TYPE_BYTE&lt;/CODE>, &lt;CODE>DataBuffer.TYPE_USHORT&lt;/CODE>, &#xA;     * or &lt;CODE>DataBuffer.TYPE_INT&lt;/CODE>.&#xA;     * @throws ClassCastException If &lt;CODE>pixel&lt;/CODE> is not a primitive &#xA;     * array of type &lt;CODE>transferType&lt;/CODE>.&#xA;     * @throws IllegalArgumentException If the &lt;CODE>components&lt;/CODE> array is &#xA;     * not null and is not large enough to hold all the color and alpha &#xA;     * components (starting at offset), or if &lt;CODE>pixel&lt;/CODE> is not large &#xA;     * enough to hold a pixel value for this ColorModel.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="intpixel">
          <typeReference xsi:type="types:Int"/>
          <arrayDimensionsAfter/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.22"/>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="This ColorModel does not support the unnormalized form"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Int"/>
                <arrayDimensionsBefore/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.0"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:InstanceOfExpression">
          <arrayDimensionsBefore/>
          <typeReference xsi:type="types:Int"/>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.0"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="DataBuffer.class.xmi#//@classifiers.0/@members.35"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.0"/>
                </next>
                <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../lang/UnsupportedOperationException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="This method has not been "/>
                    <children xsi:type="references:StringReference" value="implemented for transferType "/>
                    <children xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </throwable>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="Length of pixel array &lt; number of components in model"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.1"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:Int"/>
                <sizes xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.2"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                  </children>
                  <additiveOperators xsi:type="operators:Addition"/>
                </sizes>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.1"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Throw">
              <throwable xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:StringReference" value="Length of components array &lt; number of components in model"/>
              </throwable>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.1">
                  <next xsi:type="references:IdentifierReference"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.2"/>
                <additiveOperators xsi:type="operators:Subtraction"/>
              </expression>
            </children>
            <children xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
            </children>
            <relationOperators xsi:type="operators:LessThan"/>
          </condition>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../lang/System.class.xmi#//@classifiers.0/@members.20"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.2"/>
            <arguments xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
            </arguments>
          </next>
          <target xsi:type="classifiers:Class" href="../../lang/System.class.xmi#//@classifiers.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.1"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getUnnormalizedComponents">
      <typeReference xsi:type="types:Int"/>
      <arrayDimensionsBefore/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="normComponents">
        <typeReference xsi:type="types:Float"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="normOffset">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="components">
        <typeReference xsi:type="types:Int"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="offset">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns an array of all of the color/alpha components in unnormalized&#xA;     * form, given a normalized component array.  Unnormalized components&#xA;     * are unsigned integral values between 0 and 2&lt;sup>n&lt;/sup> - 1, where&#xA;     * n is the number of bits for a particular component.  Normalized&#xA;     * components are float values between a per component minimum and&#xA;     * maximum specified by the &lt;code>ColorSpace&lt;/code> object for this&#xA;     * &lt;code>ColorModel&lt;/code>.  An &lt;code>IllegalArgumentException&lt;/code>&#xA;     * will be thrown if color component values for this&#xA;     * &lt;code>ColorModel&lt;/code> are not conveniently representable in the&#xA;     * unnormalized form.  If the&#xA;     * &lt;code>components&lt;/code> array is &lt;code>null&lt;/code>, a new array&#xA;     * will be allocated.  The &lt;code>components&lt;/code> array will&#xA;     * be returned.  Color/alpha components are stored in the&#xA;     * &lt;code>components&lt;/code> array starting at &lt;code>offset&lt;/code> (even&#xA;     * if the array is allocated by this method). An&#xA;     * &lt;code>ArrayIndexOutOfBoundsException&lt;/code> is thrown if the&#xA;     * &lt;code>components&lt;/code> array is not &lt;code>null&lt;/code> and is not&#xA;     * large enough to hold all the color and alpha&#xA;     * components (starting at &lt;code>offset&lt;/code>).  An&#xA;     * &lt;code>IllegalArgumentException&lt;/code> is thrown if the&#xA;     * &lt;code>normComponents&lt;/code> array is not large enough to hold&#xA;     * all the color and alpha components starting at&#xA;     * &lt;code>normOffset&lt;/code>.&#xA;     * @param normComponents an array containing normalized components&#xA;     * @param normOffset the offset into the &lt;code>normComponents&lt;/code>&#xA;     * array at which to start retrieving normalized components&#xA;     * @param components an array that receives the components from&#xA;     * &lt;code>normComponents&lt;/code>&#xA;     * @param offset the index into &lt;code>components&lt;/code> at which to&#xA;     * begin storing normalized components from&#xA;     * &lt;code>normComponents&lt;/code>&#xA;     * @return an array containing unnormalized color and alpha&#xA;     * components.&#xA;     * @throws IllegalArgumentException If this&#xA;     * &lt;CODE>ComponentColorModel&lt;/CODE> does not support the unnormalized form&#xA;     * @throws IllegalArgumentException if the length of&#xA;     *          &lt;code>normComponents&lt;/code> minus &lt;code>normOffset&lt;/code>&#xA;     *          is less than &lt;code>numComponents&lt;/code>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.22"/>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="This ColorModel does not support the unnormalized form"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="ColorModel.class.xmi#//@classifiers.0/@members.50"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@parameters.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@parameters.3"/>
          </next>
          <self xsi:type="literals:Super"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getNormalizedComponents">
      <typeReference xsi:type="types:Float"/>
      <arrayDimensionsBefore/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="components">
        <typeReference xsi:type="types:Int"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="offset">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="normComponents">
        <typeReference xsi:type="types:Float"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="normOffset">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns an array of all of the color/alpha components in normalized&#xA;     * form, given an unnormalized component array.  Unnormalized components&#xA;     * are unsigned integral values between 0 and 2&lt;sup>n&lt;/sup> - 1, where&#xA;     * n is the number of bits for a particular component.  Normalized&#xA;     * components are float values between a per component minimum and&#xA;     * maximum specified by the &lt;code>ColorSpace&lt;/code> object for this&#xA;     * &lt;code>ColorModel&lt;/code>.  An &lt;code>IllegalArgumentException&lt;/code>&#xA;     * will be thrown if color component values for this&#xA;     * &lt;code>ColorModel&lt;/code> are not conveniently representable in the&#xA;     * unnormalized form.  If the&#xA;     * &lt;code>normComponents&lt;/code> array is &lt;code>null&lt;/code>, a new array&#xA;     * will be allocated.  The &lt;code>normComponents&lt;/code> array&#xA;     * will be returned.  Color/alpha components are stored in the&#xA;     * &lt;code>normComponents&lt;/code> array starting at&#xA;     * &lt;code>normOffset&lt;/code> (even if the array is allocated by this&#xA;     * method).  An &lt;code>ArrayIndexOutOfBoundsException&lt;/code> is thrown&#xA;     * if the &lt;code>normComponents&lt;/code> array is not &lt;code>null&lt;/code>&#xA;     * and is not large enough to hold all the color and alpha components&#xA;     * (starting at &lt;code>normOffset&lt;/code>).  An&#xA;     * &lt;code>IllegalArgumentException&lt;/code> is thrown if the&#xA;     * &lt;code>components&lt;/code> array is not large enough to hold all the&#xA;     * color and alpha components starting at &lt;code>offset&lt;/code>.&#xA;     * @param components an array containing unnormalized components&#xA;     * @param offset the offset into the &lt;code>components&lt;/code> array at&#xA;     * which to start retrieving unnormalized components&#xA;     * @param normComponents an array that receives the normalized components&#xA;     * @param normOffset the index into &lt;code>normComponents&lt;/code> at&#xA;     * which to begin storing normalized components&#xA;     * @return an array containing normalized color and alpha&#xA;     * components.&#xA;     * @throws IllegalArgumentException If this&#xA;     * &lt;CODE>ComponentColorModel&lt;/CODE> does not support the unnormalized form&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.22"/>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="This ColorModel does not support the unnormalized form"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="ColorModel.class.xmi#//@classifiers.0/@members.51"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@parameters.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@parameters.3"/>
          </next>
          <self xsi:type="literals:Super"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getDataElement">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="components">
        <typeReference xsi:type="types:Int"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="offset">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns a pixel value represented as an int in this &lt;CODE>ColorModel&lt;/CODE>,&#xA;     * given an array of unnormalized color/alpha components.  &#xA;     * &#xA;     * @param components An array of unnormalized color/alpha components.&#xA;     * @param offset An offset into the &lt;CODE>components&lt;/CODE> array.&#xA;     *&#xA;     * @return A pixel value represented as an int.&#xA;     *&#xA;     * @throws IllegalArgumentException If there is more than one component &#xA;     * in this &lt;CODE>ColorModel&lt;/CODE>.&#xA;     * @throws IllegalArgumentException If this&#xA;     * &lt;CODE>ComponentColorModel&lt;/CODE> does not support the unnormalized form&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.22"/>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:StringReference" value="This ColorModel does not support the unnormalized form"/>
                </throwable>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.0">
              <arraySelectors>
                <position xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.1"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </position>
              </arraySelectors>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Throw">
        <throwable xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arguments xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:StringReference" value="This model returns "/>
            <children xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
            </children>
            <children xsi:type="references:StringReference" value=" elements in the pixel array."/>
            <additiveOperators xsi:type="operators:Addition"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </arguments>
        </throwable>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getDataElements">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="components">
        <typeReference xsi:type="types:Int"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="offset">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="obj">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns a data element array representation of a pixel in this&#xA;     * &lt;CODE>ColorModel&lt;/CODE>, given an array of unnormalized color/alpha &#xA;     * components. This array can then be passed to the &lt;CODE>setDataElements&lt;/CODE> &#xA;     * method of a &lt;CODE>WritableRaster&lt;/CODE> object.&#xA;     * &#xA;     * @param components An array of unnormalized color/alpha components.&#xA;     * @param offset The integer offset into the &lt;CODE>components&lt;/CODE> array.&#xA;     * @param obj The object in which to store the data element array &#xA;     * representation of the pixel. If &lt;CODE>obj&lt;/CODE> variable is null, &#xA;     * a new array is allocated.  If &lt;CODE>obj&lt;/CODE> is not null, it must &#xA;     * be a primitive array of type &lt;CODE>transferType&lt;/CODE>. An &#xA;     * &lt;CODE>ArrayIndexOutOfBoundsException&lt;/CODE> is thrown if &#xA;     * &lt;CODE>obj&lt;/CODE> is not large enough to hold a pixel value &#xA;     * for this &lt;CODE>ColorModel&lt;/CODE>.  Since&#xA;     * &lt;code>ComponentColorModel&lt;/code> can be subclassed, subclasses&#xA;     * inherit the implementation of this method and if they don't&#xA;     * override it then they throw an exception if they use an &#xA;     * unsupported &lt;code>transferType&lt;/code>.&#xA;     *&#xA;     * @return The data element array representation of a pixel &#xA;     * in this &lt;CODE>ColorModel&lt;/CODE>.&#xA;     *&#xA;     * @throws IllegalArgumentException If the components array&#xA;     * is not large enough to hold all the color and alpha components&#xA;     * (starting at offset).  &#xA;     * @throws ClassCastException If &lt;CODE>obj&lt;/CODE> is not null and is not a &#xA;     * primitive  array of type &lt;CODE>transferType&lt;/CODE>.&#xA;     * @throws ArrayIndexOutOfBoundsException If &lt;CODE>obj&lt;/CODE> is not large&#xA;     * enough to hold a pixel value for this &lt;CODE>ColorModel&lt;/CODE>.    &#xA;     * @throws IllegalArgumentException If this&#xA;     * &lt;CODE>ComponentColorModel&lt;/CODE> does not support the unnormalized form&#xA;     * @throws UnsupportedOperationException If the transfer type of &#xA;     * this &lt;CODE>ComponentColorModel&lt;/CODE>&#xA;     * is not one of the following transfer types:  &#xA;     * &lt;CODE>DataBuffer.TYPE_BYTE&lt;/CODE>, &lt;CODE>DataBuffer.TYPE_USHORT&lt;/CODE>, &#xA;     * or &lt;CODE>DataBuffer.TYPE_INT&lt;/CODE>.&#xA;     *    &#xA;     * @see WritableRaster#setDataElements&#xA;     * @see SampleModel#setDataElements&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.22"/>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="This ColorModel does not support the unnormalized form"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="Component array too small"/>
                <children xsi:type="references:StringReference" value=" (should be "/>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.0">
                <next xsi:type="references:IdentifierReference"/>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.1"/>
              <additiveOperators xsi:type="operators:Subtraction"/>
            </expression>
          </children>
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="pixel">
                <typeReference xsi:type="types:Int"/>
                <arrayDimensionsBefore/>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.3/@cases.0/@statements.0/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="arrays:ArrayInstantiationBySize">
                      <typeReference xsi:type="types:Int"/>
                      <sizes xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                      </sizes>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.2"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.3/@cases.0/@statements.0/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:Int"/>
                      <arrayDimensionsBefore/>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.2"/>
                    </value>
                  </expression>
                </statements>
              </elseStatement>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../lang/System.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.0"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.1"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.3/@cases.0/@statements.0/@statements.0/@variable"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../lang/System.class.xmi#//@classifiers.0"/>
              </expression>
            </statements>
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.3/@cases.0/@statements.0/@statements.0/@variable"/>
            </statements>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.3"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="pixel">
                <typeReference xsi:type="types:Byte"/>
                <arrayDimensionsBefore/>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.3/@cases.1/@statements.0/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="arrays:ArrayInstantiationBySize">
                      <typeReference xsi:type="types:Byte"/>
                      <sizes xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                      </sizes>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.2"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.3/@cases.1/@statements.0/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:Byte"/>
                      <arrayDimensionsBefore/>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.2"/>
                    </value>
                  </expression>
                </statements>
              </elseStatement>
            </statements>
            <statements xsi:type="statements:ForLoop">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.3/@cases.1/@statements.0/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.3/@cases.1/@statements.0/@statements.2/@init"/>
                      </arraySelectors>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:Byte"/>
                      <child xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:AndExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.0">
                            <arraySelectors>
                              <position xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.1"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.3/@cases.1/@statements.0/@statements.2/@init"/>
                                <additiveOperators xsi:type="operators:Addition"/>
                              </position>
                            </arraySelectors>
                          </children>
                          <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                        </expression>
                      </child>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.3/@cases.1/@statements.0/@statements.2/@init"/>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <init xsi:type="variables:LocalVariable" name="i">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </init>
              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.3/@cases.1/@statements.0/@statements.2/@init"/>
                <operator xsi:type="operators:PlusPlus"/>
              </updates>
            </statements>
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.3/@cases.1/@statements.0/@statements.0/@variable"/>
            </statements>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="pixel">
                <typeReference xsi:type="types:Short"/>
                <arrayDimensionsBefore/>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.3/@cases.2/@statements.0/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="arrays:ArrayInstantiationBySize">
                      <typeReference xsi:type="types:Short"/>
                      <sizes xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                      </sizes>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.2"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.3/@cases.2/@statements.0/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:Short"/>
                      <arrayDimensionsBefore/>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.2"/>
                    </value>
                  </expression>
                </statements>
              </elseStatement>
            </statements>
            <statements xsi:type="statements:ForLoop">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.3/@cases.2/@statements.0/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.3/@cases.2/@statements.0/@statements.2/@init"/>
                      </arraySelectors>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:Short"/>
                      <child xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:AndExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.0">
                            <arraySelectors>
                              <position xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.1"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.3/@cases.2/@statements.0/@statements.2/@init"/>
                                <additiveOperators xsi:type="operators:Addition"/>
                              </position>
                            </arraySelectors>
                          </children>
                          <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                        </expression>
                      </child>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.3/@cases.2/@statements.0/@statements.2/@init"/>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <init xsi:type="variables:LocalVariable" name="i">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </init>
              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.3/@cases.2/@statements.0/@statements.2/@init"/>
                <operator xsi:type="operators:PlusPlus"/>
              </updates>
            </statements>
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.3/@cases.2/@statements.0/@statements.0/@variable"/>
            </statements>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.1"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/UnsupportedOperationException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="This method has not been "/>
                <children xsi:type="references:StringReference" value="implemented for transferType "/>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </throwable>
          </statements>
        </cases>
        <variable xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
        </variable>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getDataElement">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="normComponents">
        <typeReference xsi:type="types:Float"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="normOffset">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns a pixel value represented as an &lt;code>int&lt;/code> in this&#xA;     * &lt;code>ColorModel&lt;/code>, given an array of normalized color/alpha&#xA;     * components.  This method will throw an&#xA;     * &lt;code>IllegalArgumentException&lt;/code> if pixel values for this&#xA;     * &lt;code>ColorModel&lt;/code> are not conveniently representable as a&#xA;     * single &lt;code>int&lt;/code>.  An&#xA;     * &lt;code>ArrayIndexOutOfBoundsException&lt;/code> is thrown if  the&#xA;     * &lt;code>normComponents&lt;/code> array is not large enough to hold all the&#xA;     * color and alpha components (starting at &lt;code>normOffset&lt;/code>).&#xA;     * @param normComponents an array of normalized color and alpha&#xA;     * components&#xA;     * @param normOffset the index into &lt;code>normComponents&lt;/code> at which to&#xA;     * begin retrieving the color and alpha components&#xA;     * @return an &lt;code>int&lt;/code> pixel value in this&#xA;     * &lt;code>ColorModel&lt;/code> corresponding to the specified components.&#xA;     * @throws IllegalArgumentException if&#xA;     *  pixel values for this &lt;code>ColorModel&lt;/code> are not&#xA;     *  conveniently representable as a single &lt;code>int&lt;/code>&#xA;     * @throws ArrayIndexOutOfBoundsException if&#xA;     *  the &lt;code>normComponents&lt;/code> array is not large enough to&#xA;     *  hold all of the color and alpha components starting at&#xA;     *  &lt;code>normOffset&lt;/code>&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="More than one component per pixel"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
          <relationOperators xsi:type="operators:GreaterThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="Component value is signed"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.22"/>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="pixel">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.44">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43/@parameters.1"/>
            <arguments xsi:type="literals:NullLiteral"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="bpixel">
                <typeReference xsi:type="types:Byte"/>
                <arrayDimensionsAfter/>
                <initialValue xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Byte"/>
                  <arrayDimensionsBefore/>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43/@statements.3/@variable"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="expressions:AndExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43/@statements.4/@cases.0/@statements.0/@statements.0/@variable">
                  <arraySelectors>
                    <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </arraySelectors>
                </children>
                <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
              </returnValue>
            </statements>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="uspixel">
                <typeReference xsi:type="types:Short"/>
                <arrayDimensionsBefore/>
                <initialValue xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Short"/>
                  <arrayDimensionsBefore/>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43/@statements.3/@variable"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="expressions:AndExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43/@statements.4/@cases.1/@statements.0/@statements.0/@variable">
                  <arraySelectors>
                    <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </arraySelectors>
                </children>
                <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
              </returnValue>
            </statements>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.1"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="ipixel">
                <typeReference xsi:type="types:Int"/>
                <arrayDimensionsBefore/>
                <initialValue xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Int"/>
                  <arrayDimensionsBefore/>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43/@statements.3/@variable"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43/@statements.4/@cases.2/@statements.0/@statements.0/@variable">
                <arraySelectors>
                  <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </arraySelectors>
              </returnValue>
            </statements>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.3"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/UnsupportedOperationException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="This method has not been "/>
                <children xsi:type="references:StringReference" value="implemented for transferType "/>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </throwable>
          </statements>
        </cases>
        <variable xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
        </variable>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getDataElements">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="normComponents">
        <typeReference xsi:type="types:Float"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="normOffset">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="obj">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns a data element array representation of a pixel in this&#xA;     * &lt;code>ColorModel&lt;/code>, given an array of normalized color/alpha&#xA;     * components.  This array can then be passed to the&#xA;     * &lt;code>setDataElements&lt;/code> method of a &lt;code>WritableRaster&lt;/code>&#xA;     * object.  An &lt;code>ArrayIndexOutOfBoundsException&lt;/code> is thrown&#xA;     * if the &lt;code>normComponents&lt;/code> array is not large enough to hold&#xA;     * all the color and alpha components (starting at&#xA;     * &lt;code>normOffset&lt;/code>).  If the &lt;code>obj&lt;/code> variable is&#xA;     * &lt;code>null&lt;/code>, a new array will be allocated.  If&#xA;     * &lt;code>obj&lt;/code> is not &lt;code>null&lt;/code>, it must be a primitive&#xA;     * array of type transferType; otherwise, a&#xA;     * &lt;code>ClassCastException&lt;/code> is thrown.  An&#xA;     * &lt;code>ArrayIndexOutOfBoundsException&lt;/code> is thrown if&#xA;     * &lt;code>obj&lt;/code> is not large enough to hold a pixel value for this&#xA;     * &lt;code>ColorModel&lt;/code>.&#xA;     * @param normComponents an array of normalized color and alpha&#xA;     * components&#xA;     * @param normOffset the index into &lt;code>normComponents&lt;/code> at which to&#xA;     * begin retrieving color and alpha components&#xA;     * @param obj a primitive data array to hold the returned pixel&#xA;     * @return an &lt;code>Object&lt;/code> which is a primitive data array&#xA;     * representation of a pixel&#xA;     * @throws ClassCastException if &lt;code>obj&lt;/code>&#xA;     *  is not a primitive array of type &lt;code>transferType&lt;/code>&#xA;     * @throws ArrayIndexOutOfBoundsException if&#xA;     *  &lt;code>obj&lt;/code> is not large enough to hold a pixel value&#xA;     *  for this &lt;code>ColorModel&lt;/code> or the &lt;code>normComponents&lt;/code>&#xA;     *  array is not large enough to hold all of the color and alpha&#xA;     *  components starting at &lt;code>normOffset&lt;/code>&#xA;     * @see WritableRaster#setDataElements&#xA;     * @see SampleModel#setDataElements&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="needAlpha">
          <typeReference xsi:type="types:Boolean"/>
          <initialValue xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
            </children>
            <children xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.5"/>
            </children>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="stdNormComponents">
          <typeReference xsi:type="types:Float"/>
          <arrayDimensionsBefore/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.22"/>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:Float"/>
                <sizes xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                </sizes>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.1/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.3/@statement/@statements.1/@init"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:MultiplicativeExpression">
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.0">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.3/@statement/@statements.1/@init/@additionalLocalVariables.0"/>
                          </arraySelectors>
                        </children>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.3/@statement/@statements.1/@init"/>
                          </arraySelectors>
                        </children>
                        <additiveOperators xsi:type="operators:Subtraction"/>
                      </expression>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.3/@statement/@statements.1/@init"/>
                      </arraySelectors>
                    </children>
                    <multiplicativeOperators xsi:type="operators:Multiplication"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <comments>// REMIND: need to analyze whether this</comments>
                <comments>// clamping is necessary</comments>
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.1/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.3/@statement/@statements.1/@init"/>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:DecimalFloatLiteral"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.1/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.3/@statement/@statements.1/@init"/>
                    </arraySelectors>
                  </children>
                  <children xsi:type="literals:DecimalFloatLiteral"/>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.1/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.3/@statement/@statements.1/@init"/>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.1/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.3/@statement/@statements.1/@init"/>
                    </arraySelectors>
                  </children>
                  <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                  <relationOperators xsi:type="operators:GreaterThan"/>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.3/@statement/@statements.1/@init"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="c">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <additionalLocalVariables name="nc">
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.1"/>
              </additionalLocalVariables>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.3/@statement/@statements.1/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.3/@statement/@statements.1/@init/@additionalLocalVariables.0"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.1/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                      </position>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.0">
                    <arraySelectors>
                      <position xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                        </children>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.1"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </position>
                    </arraySelectors>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.1"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.0"/>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="bpixel">
              <typeReference xsi:type="types:Byte"/>
              <arrayDimensionsBefore/>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.0/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="arrays:ArrayInstantiationBySize">
                    <typeReference xsi:type="types:Byte"/>
                    <sizes xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                    </sizes>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.2"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.0/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Byte"/>
                    <arrayDimensionsBefore/>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.2"/>
                  </value>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="alpha">
                  <typeReference xsi:type="types:Float"/>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.1/@variable">
                    <arraySelectors>
                      <position xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                        </children>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.1"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </position>
                    </arraySelectors>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ForLoop">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.0/@statements.0/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.0/@statements.2/@statement/@statements.1/@init"/>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Byte"/>
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:MultiplicativeExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.1/@variable">
                                    <arraySelectors>
                                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.0/@statements.2/@statement/@statements.1/@init/@additionalLocalVariables.0"/>
                                    </arraySelectors>
                                  </children>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.0/@statements.2/@statement/@statements.0/@variable"/>
                                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                </expression>
                              </children>
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:CastExpression">
                                  <typeReference xsi:type="types:Float"/>
                                  <child xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:AdditiveExpression">
                                      <children xsi:type="expressions:NestedExpression">
                                        <expression xsi:type="expressions:ShiftExpression">
                                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                          <children xsi:type="references:IdentifierReference">
                                            <arraySelectors>
                                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.0/@statements.2/@statement/@statements.1/@init"/>
                                            </arraySelectors>
                                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                          </children>
                                          <shiftOperators xsi:type="operators:LeftShift"/>
                                        </expression>
                                      </children>
                                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                      <additiveOperators xsi:type="operators:Subtraction"/>
                                    </expression>
                                  </child>
                                </expression>
                              </children>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </children>
                            <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </expression>
                        </child>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.0/@statements.2/@statement/@statements.1/@init"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                  </children>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <init xsi:type="variables:LocalVariable" name="c">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <additionalLocalVariables name="nc">
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.1"/>
                  </additionalLocalVariables>
                </init>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.0/@statements.2/@statement/@statements.1/@init"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.0/@statements.2/@statement/@statements.1/@init/@additionalLocalVariables.0"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.0/@statements.0/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                      </position>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Byte"/>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="expressions:MultiplicativeExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.0/@statements.2/@statement/@statements.0/@variable"/>
                          <children xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:Float"/>
                              <child xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:AdditiveExpression">
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:ShiftExpression">
                                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                      <children xsi:type="references:IdentifierReference">
                                        <arraySelectors>
                                          <position xsi:type="references:IdentifierReference">
                                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                                          </position>
                                        </arraySelectors>
                                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                      </children>
                                      <shiftOperators xsi:type="operators:LeftShift"/>
                                    </expression>
                                  </children>
                                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                  <additiveOperators xsi:type="operators:Subtraction"/>
                                </expression>
                              </child>
                            </expression>
                          </children>
                          <multiplicativeOperators xsi:type="operators:Multiplication"/>
                        </children>
                        <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </expression>
                    </child>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.0/@variable"/>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ForLoop">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.0/@statements.0/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.0/@statements.2/@elseStatement/@statements.0/@init"/>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Byte"/>
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.1/@variable">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.0/@statements.2/@elseStatement/@statements.0/@init/@additionalLocalVariables.0"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:CastExpression">
                                  <typeReference xsi:type="types:Float"/>
                                  <child xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:AdditiveExpression">
                                      <children xsi:type="expressions:NestedExpression">
                                        <expression xsi:type="expressions:ShiftExpression">
                                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                          <children xsi:type="references:IdentifierReference">
                                            <arraySelectors>
                                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.0/@statements.2/@elseStatement/@statements.0/@init"/>
                                            </arraySelectors>
                                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                          </children>
                                          <shiftOperators xsi:type="operators:LeftShift"/>
                                        </expression>
                                      </children>
                                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                      <additiveOperators xsi:type="operators:Subtraction"/>
                                    </expression>
                                  </child>
                                </expression>
                              </children>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </children>
                            <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </expression>
                        </child>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.0/@statements.2/@elseStatement/@statements.0/@init"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                  </children>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <init xsi:type="variables:LocalVariable" name="c">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <additionalLocalVariables name="nc">
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.1"/>
                  </additionalLocalVariables>
                </init>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.0/@statements.2/@elseStatement/@statements.0/@init"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.0/@statements.2/@elseStatement/@statements.0/@init/@additionalLocalVariables.0"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.0/@statements.0/@variable"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="uspixel">
              <typeReference xsi:type="types:Short"/>
              <arrayDimensionsBefore/>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.1/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="arrays:ArrayInstantiationBySize">
                    <typeReference xsi:type="types:Short"/>
                    <sizes xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                    </sizes>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.2"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.1/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Short"/>
                    <arrayDimensionsBefore/>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.2"/>
                  </value>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="alpha">
                  <typeReference xsi:type="types:Float"/>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.1/@variable">
                    <arraySelectors>
                      <position xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                        </children>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.1"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </position>
                    </arraySelectors>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ForLoop">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.1/@statements.0/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.1/@statements.2/@statement/@statements.1/@init"/>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Short"/>
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:MultiplicativeExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.1/@variable">
                                    <arraySelectors>
                                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.1/@statements.2/@statement/@statements.1/@init/@additionalLocalVariables.0"/>
                                    </arraySelectors>
                                  </children>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.1/@statements.2/@statement/@statements.0/@variable"/>
                                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                </expression>
                              </children>
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:CastExpression">
                                  <typeReference xsi:type="types:Float"/>
                                  <child xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:AdditiveExpression">
                                      <children xsi:type="expressions:NestedExpression">
                                        <expression xsi:type="expressions:ShiftExpression">
                                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                          <children xsi:type="references:IdentifierReference">
                                            <arraySelectors>
                                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.1/@statements.2/@statement/@statements.1/@init"/>
                                            </arraySelectors>
                                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                          </children>
                                          <shiftOperators xsi:type="operators:LeftShift"/>
                                        </expression>
                                      </children>
                                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                      <additiveOperators xsi:type="operators:Subtraction"/>
                                    </expression>
                                  </child>
                                </expression>
                              </children>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </children>
                            <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </expression>
                        </child>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.1/@statements.2/@statement/@statements.1/@init"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                  </children>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <init xsi:type="variables:LocalVariable" name="c">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <additionalLocalVariables name="nc">
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.1"/>
                  </additionalLocalVariables>
                </init>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.1/@statements.2/@statement/@statements.1/@init"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.1/@statements.2/@statement/@statements.1/@init/@additionalLocalVariables.0"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.1/@statements.0/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                      </position>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Short"/>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="expressions:MultiplicativeExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.1/@statements.2/@statement/@statements.0/@variable"/>
                          <children xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:Float"/>
                              <child xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:AdditiveExpression">
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:ShiftExpression">
                                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                      <children xsi:type="references:IdentifierReference">
                                        <arraySelectors>
                                          <position xsi:type="references:IdentifierReference">
                                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                                          </position>
                                        </arraySelectors>
                                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                      </children>
                                      <shiftOperators xsi:type="operators:LeftShift"/>
                                    </expression>
                                  </children>
                                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                  <additiveOperators xsi:type="operators:Subtraction"/>
                                </expression>
                              </child>
                            </expression>
                          </children>
                          <multiplicativeOperators xsi:type="operators:Multiplication"/>
                        </children>
                        <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </expression>
                    </child>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.0/@variable"/>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ForLoop">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.1/@statements.0/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.1/@statements.2/@elseStatement/@statements.0/@init"/>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Short"/>
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.1/@variable">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.1/@statements.2/@elseStatement/@statements.0/@init/@additionalLocalVariables.0"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:CastExpression">
                                  <typeReference xsi:type="types:Float"/>
                                  <child xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:AdditiveExpression">
                                      <children xsi:type="expressions:NestedExpression">
                                        <expression xsi:type="expressions:ShiftExpression">
                                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                          <children xsi:type="references:IdentifierReference">
                                            <arraySelectors>
                                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.1/@statements.2/@elseStatement/@statements.0/@init"/>
                                            </arraySelectors>
                                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                          </children>
                                          <shiftOperators xsi:type="operators:LeftShift"/>
                                        </expression>
                                      </children>
                                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                      <additiveOperators xsi:type="operators:Subtraction"/>
                                    </expression>
                                  </child>
                                </expression>
                              </children>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </children>
                            <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </expression>
                        </child>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.1/@statements.2/@elseStatement/@statements.0/@init"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                  </children>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <init xsi:type="variables:LocalVariable" name="c">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <additionalLocalVariables name="nc">
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.1"/>
                  </additionalLocalVariables>
                </init>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.1/@statements.2/@elseStatement/@statements.0/@init"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.1/@statements.2/@elseStatement/@statements.0/@init/@additionalLocalVariables.0"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.1/@statements.0/@variable"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.1"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="ipixel">
              <typeReference xsi:type="types:Int"/>
              <arrayDimensionsBefore/>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.2/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="arrays:ArrayInstantiationBySize">
                    <typeReference xsi:type="types:Int"/>
                    <sizes xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                    </sizes>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.2"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.2/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Int"/>
                    <arrayDimensionsBefore/>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.2"/>
                  </value>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="alpha">
                  <typeReference xsi:type="types:Float"/>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.1/@variable">
                    <arraySelectors>
                      <position xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                        </children>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.1"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </position>
                    </arraySelectors>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ForLoop">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.2/@statements.0/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.2/@statements.2/@statement/@statements.1/@init"/>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Int"/>
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:MultiplicativeExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.1/@variable">
                                    <arraySelectors>
                                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.2/@statements.2/@statement/@statements.1/@init/@additionalLocalVariables.0"/>
                                    </arraySelectors>
                                  </children>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.2/@statements.2/@statement/@statements.0/@variable"/>
                                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                </expression>
                              </children>
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:CastExpression">
                                  <typeReference xsi:type="types:Float"/>
                                  <child xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:AdditiveExpression">
                                      <children xsi:type="expressions:NestedExpression">
                                        <expression xsi:type="expressions:ShiftExpression">
                                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                          <children xsi:type="references:IdentifierReference">
                                            <arraySelectors>
                                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.2/@statements.2/@statement/@statements.1/@init"/>
                                            </arraySelectors>
                                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                          </children>
                                          <shiftOperators xsi:type="operators:LeftShift"/>
                                        </expression>
                                      </children>
                                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                      <additiveOperators xsi:type="operators:Subtraction"/>
                                    </expression>
                                  </child>
                                </expression>
                              </children>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </children>
                            <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </expression>
                        </child>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.2/@statements.2/@statement/@statements.1/@init"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                  </children>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <init xsi:type="variables:LocalVariable" name="c">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <additionalLocalVariables name="nc">
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.1"/>
                  </additionalLocalVariables>
                </init>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.2/@statements.2/@statement/@statements.1/@init"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.2/@statements.2/@statement/@statements.1/@init/@additionalLocalVariables.0"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.2/@statements.0/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                      </position>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Int"/>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="expressions:MultiplicativeExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.2/@statements.2/@statement/@statements.0/@variable"/>
                          <children xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:Float"/>
                              <child xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:AdditiveExpression">
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:ShiftExpression">
                                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                      <children xsi:type="references:IdentifierReference">
                                        <arraySelectors>
                                          <position xsi:type="references:IdentifierReference">
                                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                                          </position>
                                        </arraySelectors>
                                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                      </children>
                                      <shiftOperators xsi:type="operators:LeftShift"/>
                                    </expression>
                                  </children>
                                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                  <additiveOperators xsi:type="operators:Subtraction"/>
                                </expression>
                              </child>
                            </expression>
                          </children>
                          <multiplicativeOperators xsi:type="operators:Multiplication"/>
                        </children>
                        <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </expression>
                    </child>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.0/@variable"/>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ForLoop">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.2/@statements.0/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.2/@statements.2/@elseStatement/@statements.0/@init"/>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Int"/>
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.1/@variable">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.2/@statements.2/@elseStatement/@statements.0/@init/@additionalLocalVariables.0"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:CastExpression">
                                  <typeReference xsi:type="types:Float"/>
                                  <child xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:AdditiveExpression">
                                      <children xsi:type="expressions:NestedExpression">
                                        <expression xsi:type="expressions:ShiftExpression">
                                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                          <children xsi:type="references:IdentifierReference">
                                            <arraySelectors>
                                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.2/@statements.2/@elseStatement/@statements.0/@init"/>
                                            </arraySelectors>
                                            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                          </children>
                                          <shiftOperators xsi:type="operators:LeftShift"/>
                                        </expression>
                                      </children>
                                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                      <additiveOperators xsi:type="operators:Subtraction"/>
                                    </expression>
                                  </child>
                                </expression>
                              </children>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </children>
                            <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </expression>
                        </child>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.2/@statements.2/@elseStatement/@statements.0/@init"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                  </children>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <init xsi:type="variables:LocalVariable" name="c">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <additionalLocalVariables name="nc">
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.1"/>
                  </additionalLocalVariables>
                </init>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.2/@statements.2/@elseStatement/@statements.0/@init"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.2/@statements.2/@elseStatement/@statements.0/@init/@additionalLocalVariables.0"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.2/@statements.0/@variable"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.3"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="spixel">
              <typeReference xsi:type="types:Short"/>
              <arrayDimensionsBefore/>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.3/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="arrays:ArrayInstantiationBySize">
                    <typeReference xsi:type="types:Short"/>
                    <sizes xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                    </sizes>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.2"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.3/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Short"/>
                    <arrayDimensionsBefore/>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.2"/>
                  </value>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="alpha">
                  <typeReference xsi:type="types:Float"/>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.1/@variable">
                    <arraySelectors>
                      <position xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                        </children>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.1"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </position>
                    </arraySelectors>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ForLoop">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.3/@statements.0/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.3/@statements.2/@statement/@statements.1/@init"/>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Short"/>
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.1/@variable">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.3/@statements.2/@statement/@statements.1/@init/@additionalLocalVariables.0"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.3/@statements.2/@statement/@statements.0/@variable"/>
                              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="32767.0"/>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </children>
                            <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </expression>
                        </child>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.3/@statements.2/@statement/@statements.1/@init"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                  </children>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <init xsi:type="variables:LocalVariable" name="c">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <additionalLocalVariables name="nc">
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.1"/>
                  </additionalLocalVariables>
                </init>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.3/@statements.2/@statement/@statements.1/@init"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.3/@statements.2/@statement/@statements.1/@init/@additionalLocalVariables.0"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.3/@statements.0/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                      </position>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Short"/>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="expressions:MultiplicativeExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.3/@statements.2/@statement/@statements.0/@variable"/>
                          <children xsi:type="literals:DecimalFloatLiteral" decimalValue="32767.0"/>
                          <multiplicativeOperators xsi:type="operators:Multiplication"/>
                        </children>
                        <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </expression>
                    </child>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.0/@variable"/>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ForLoop">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.3/@statements.0/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.3/@statements.2/@elseStatement/@statements.0/@init"/>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Short"/>
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.1/@variable">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.3/@statements.2/@elseStatement/@statements.0/@init/@additionalLocalVariables.0"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="literals:DecimalFloatLiteral" decimalValue="32767.0"/>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </children>
                            <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </expression>
                        </child>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.3/@statements.2/@elseStatement/@statements.0/@init"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                  </children>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <init xsi:type="variables:LocalVariable" name="c">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <additionalLocalVariables name="nc">
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.1"/>
                  </additionalLocalVariables>
                </init>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.3/@statements.2/@elseStatement/@statements.0/@init"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.3/@statements.2/@elseStatement/@statements.0/@init/@additionalLocalVariables.0"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.3/@statements.0/@variable"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.2"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="fpixel">
              <typeReference xsi:type="types:Float"/>
              <arrayDimensionsBefore/>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.4/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="arrays:ArrayInstantiationBySize">
                    <typeReference xsi:type="types:Float"/>
                    <sizes xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                    </sizes>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.2"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.4/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Float"/>
                    <arrayDimensionsBefore/>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.2"/>
                  </value>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="alpha">
                  <typeReference xsi:type="types:Float"/>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.0">
                    <arraySelectors>
                      <position xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                        </children>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.1"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </position>
                    </arraySelectors>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ForLoop">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.4/@statements.0/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.4/@statements.2/@statement/@statements.1/@init"/>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:MultiplicativeExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.0">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.4/@statements.2/@statement/@statements.1/@init/@additionalLocalVariables.0"/>
                          </arraySelectors>
                        </children>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.4/@statements.2/@statement/@statements.0/@variable"/>
                        <multiplicativeOperators xsi:type="operators:Multiplication"/>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.4/@statements.2/@statement/@statements.1/@init"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                  </children>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <init xsi:type="variables:LocalVariable" name="c">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <additionalLocalVariables name="nc">
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.1"/>
                  </additionalLocalVariables>
                </init>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.4/@statements.2/@statement/@statements.1/@init"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.4/@statements.2/@statement/@statements.1/@init/@additionalLocalVariables.0"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.4/@statements.0/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                      </position>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.4/@statements.2/@statement/@statements.0/@variable"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.0/@variable"/>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ForLoop">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.4/@statements.0/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.4/@statements.2/@elseStatement/@statements.0/@init"/>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.0">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.4/@statements.2/@elseStatement/@statements.0/@init/@additionalLocalVariables.0"/>
                        </arraySelectors>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.4/@statements.2/@elseStatement/@statements.0/@init"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                  </children>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <init xsi:type="variables:LocalVariable" name="c">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <additionalLocalVariables name="nc">
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.1"/>
                  </additionalLocalVariables>
                </init>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.4/@statements.2/@elseStatement/@statements.0/@init"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.4/@statements.2/@elseStatement/@statements.0/@init/@additionalLocalVariables.0"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.4/@statements.0/@variable"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.4"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="dpixel">
              <typeReference xsi:type="types:Double"/>
              <arrayDimensionsBefore/>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.5/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="arrays:ArrayInstantiationBySize">
                    <typeReference xsi:type="types:Double"/>
                    <sizes xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                    </sizes>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.2"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.5/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Double"/>
                    <arrayDimensionsBefore/>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.2"/>
                  </value>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="alpha">
                  <typeReference xsi:type="types:Double"/>
                  <initialValue xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Double"/>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.0">
                        <arraySelectors>
                          <position xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                            </children>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.1"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </position>
                        </arraySelectors>
                      </expression>
                    </child>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ForLoop">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.5/@statements.0/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.5/@statements.2/@statement/@statements.1/@init"/>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:MultiplicativeExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.0">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.5/@statements.2/@statement/@statements.1/@init/@additionalLocalVariables.0"/>
                          </arraySelectors>
                        </children>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.5/@statements.2/@statement/@statements.0/@variable"/>
                        <multiplicativeOperators xsi:type="operators:Multiplication"/>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.5/@statements.2/@statement/@statements.1/@init"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                  </children>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <init xsi:type="variables:LocalVariable" name="c">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <additionalLocalVariables name="nc">
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.1"/>
                  </additionalLocalVariables>
                </init>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.5/@statements.2/@statement/@statements.1/@init"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.5/@statements.2/@statement/@statements.1/@init/@additionalLocalVariables.0"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.5/@statements.0/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                      </position>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.5/@statements.2/@statement/@statements.0/@variable"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.0/@variable"/>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ForLoop">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.5/@statements.0/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.5/@statements.2/@elseStatement/@statements.0/@init"/>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Double"/>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.0">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.5/@statements.2/@elseStatement/@statements.0/@init/@additionalLocalVariables.0"/>
                          </arraySelectors>
                        </child>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.5/@statements.2/@elseStatement/@statements.0/@init"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                  </children>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <init xsi:type="variables:LocalVariable" name="c">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <additionalLocalVariables name="nc">
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.1"/>
                  </additionalLocalVariables>
                </init>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.5/@statements.2/@elseStatement/@statements.0/@init"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.5/@statements.2/@elseStatement/@statements.0/@init/@additionalLocalVariables.0"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.4/@cases.5/@statements.0/@variable"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.5"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/UnsupportedOperationException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="This method has not been "/>
                <children xsi:type="references:StringReference" value="implemented for transferType "/>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </throwable>
          </statements>
        </cases>
        <variable xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
        </variable>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getNormalizedComponents">
      <typeReference xsi:type="types:Float"/>
      <arrayDimensionsBefore/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="pixel">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="normComponents">
        <typeReference xsi:type="types:Float"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="normOffset">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns an array of all of the color/alpha components in normalized&#xA;     * form, given a pixel in this &lt;code>ColorModel&lt;/code>.  The pixel&#xA;     * value is specified by an array of data elements of type transferType&#xA;     * passed in as an object reference.  If pixel is not a primitive array&#xA;     * of type transferType, a &lt;code>ClassCastException&lt;/code> is thrown.&#xA;     * An &lt;code>ArrayIndexOutOfBoundsException&lt;/code> is thrown if&#xA;     * &lt;code>pixel&lt;/code> is not large enough to hold a pixel value for this&#xA;     * &lt;code>ColorModel&lt;/code>.&#xA;     * Normalized components are float values between a per component minimum&#xA;     * and maximum specified by the &lt;code>ColorSpace&lt;/code> object for this&#xA;     * &lt;code>ColorModel&lt;/code>.  If the&#xA;     * &lt;code>normComponents&lt;/code> array is &lt;code>null&lt;/code>, a new array&#xA;     * will be allocated.  The &lt;code>normComponents&lt;/code> array&#xA;     * will be returned.  Color/alpha components are stored in the&#xA;     * &lt;code>normComponents&lt;/code> array starting at&#xA;     * &lt;code>normOffset&lt;/code> (even if the array is allocated by this&#xA;     * method).  An &lt;code>ArrayIndexOutOfBoundsException&lt;/code> is thrown&#xA;     * if the &lt;code>normComponents&lt;/code> array is not &lt;code>null&lt;/code>&#xA;     * and is not large enough to hold all the color and alpha components&#xA;     * (starting at &lt;code>normOffset&lt;/code>).&#xA;     * &lt;p>&#xA;     * This method must be overrridden by a subclass if that subclass&#xA;     * is designed to translate pixel sample values to color component values&#xA;     * in a non-default way.  The default translations implemented by this&#xA;     * class is described in the class comments.  Any subclass implementing&#xA;     * a non-default translation must follow the constraints on allowable&#xA;     * translations defined there.&#xA;     * @param pixel the specified pixel&#xA;     * @param normComponents an array to receive the normalized components&#xA;     * @param normOffset the offset into the &lt;code>normComponents&lt;/code>&#xA;     * array at which to start storing normalized components&#xA;     * @return an array containing normalized color and alpha&#xA;     * components.&#xA;     * @throws ClassCastException if &lt;code>pixel&lt;/code> is not a primitive&#xA;     *          array of type transferType&#xA;     * @throws ArrayIndexOutOfBoundsException if&#xA;     *          &lt;code>normComponents&lt;/code> is not large enough to hold all&#xA;     *          color and alpha components starting at &lt;code>normOffset&lt;/code>&#xA;     * @throws ArrayIndexOutOfBoundsException if&#xA;     *          &lt;code>pixel&lt;/code> is not large enough to hold a pixel&#xA;     *          value for this &lt;code>ColorModel&lt;/code>.&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.1"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:Float"/>
                <sizes xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.2"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </sizes>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.1"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="bpixel">
              <typeReference xsi:type="types:Byte"/>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Byte"/>
                <arrayDimensionsBefore/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.1">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.0/@statements.1/@init/@additionalLocalVariables.0"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:MultiplicativeExpression">
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Float"/>
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AndExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.0/@statements.0/@variable">
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.0/@statements.1/@init"/>
                              </arraySelectors>
                            </children>
                            <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                          </expression>
                        </child>
                      </expression>
                    </children>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Float"/>
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:ShiftExpression">
                                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                <children xsi:type="references:IdentifierReference">
                                  <arraySelectors>
                                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.0/@statements.1/@init"/>
                                  </arraySelectors>
                                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                </children>
                                <shiftOperators xsi:type="operators:LeftShift"/>
                              </expression>
                            </children>
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                            <additiveOperators xsi:type="operators:Subtraction"/>
                          </expression>
                        </child>
                      </expression>
                    </children>
                    <multiplicativeOperators xsi:type="operators:Division"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.0/@statements.1/@init"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="c">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <additionalLocalVariables name="nc">
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.2"/>
              </additionalLocalVariables>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.0/@statements.1/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.0/@statements.1/@init/@additionalLocalVariables.0"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="uspixel">
              <typeReference xsi:type="types:Short"/>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Short"/>
                <arrayDimensionsBefore/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.1">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.1/@statements.1/@init/@additionalLocalVariables.0"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:MultiplicativeExpression">
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Float"/>
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AndExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.1/@statements.0/@variable">
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.1/@statements.1/@init"/>
                              </arraySelectors>
                            </children>
                            <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                          </expression>
                        </child>
                      </expression>
                    </children>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Float"/>
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:ShiftExpression">
                                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                <children xsi:type="references:IdentifierReference">
                                  <arraySelectors>
                                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.1/@statements.1/@init"/>
                                  </arraySelectors>
                                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                </children>
                                <shiftOperators xsi:type="operators:LeftShift"/>
                              </expression>
                            </children>
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                            <additiveOperators xsi:type="operators:Subtraction"/>
                          </expression>
                        </child>
                      </expression>
                    </children>
                    <multiplicativeOperators xsi:type="operators:Division"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.1/@statements.1/@init"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="c">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <additionalLocalVariables name="nc">
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.2"/>
              </additionalLocalVariables>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.1/@statements.1/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.1/@statements.1/@init/@additionalLocalVariables.0"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.1"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="ipixel">
              <typeReference xsi:type="types:Int"/>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Int"/>
                <arrayDimensionsBefore/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.1">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.2/@statements.1/@init/@additionalLocalVariables.0"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:MultiplicativeExpression">
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Float"/>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.2/@statements.0/@variable">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.2/@statements.1/@init"/>
                          </arraySelectors>
                        </child>
                      </expression>
                    </children>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Float"/>
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:ShiftExpression">
                                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                <children xsi:type="references:IdentifierReference">
                                  <arraySelectors>
                                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.2/@statements.1/@init"/>
                                  </arraySelectors>
                                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                </children>
                                <shiftOperators xsi:type="operators:LeftShift"/>
                              </expression>
                            </children>
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                            <additiveOperators xsi:type="operators:Subtraction"/>
                          </expression>
                        </child>
                      </expression>
                    </children>
                    <multiplicativeOperators xsi:type="operators:Division"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.2/@statements.1/@init"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="c">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <additionalLocalVariables name="nc">
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.2"/>
              </additionalLocalVariables>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.2/@statements.1/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.2/@statements.1/@init/@additionalLocalVariables.0"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.3"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="spixel">
              <typeReference xsi:type="types:Short"/>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Short"/>
                <arrayDimensionsBefore/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.1">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.3/@statements.1/@init/@additionalLocalVariables.0"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:MultiplicativeExpression">
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Float"/>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.3/@statements.0/@variable">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.3/@statements.1/@init"/>
                          </arraySelectors>
                        </child>
                      </expression>
                    </children>
                    <children xsi:type="literals:DecimalFloatLiteral" decimalValue="32767.0"/>
                    <multiplicativeOperators xsi:type="operators:Division"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.3/@statements.1/@init"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="c">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <additionalLocalVariables name="nc">
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.2"/>
              </additionalLocalVariables>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.3/@statements.1/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.3/@statements.1/@init/@additionalLocalVariables.0"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.2"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="fpixel">
              <typeReference xsi:type="types:Float"/>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Float"/>
                <arrayDimensionsBefore/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.1">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.4/@statements.1/@init/@additionalLocalVariables.0"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.4/@statements.0/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.4/@statements.1/@init"/>
                    </arraySelectors>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.4/@statements.1/@init"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="c">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <additionalLocalVariables name="nc">
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.2"/>
              </additionalLocalVariables>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.4/@statements.1/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.4/@statements.1/@init/@additionalLocalVariables.0"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.4"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="dpixel">
              <typeReference xsi:type="types:Double"/>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Double"/>
                <arrayDimensionsBefore/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.1">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.5/@statements.1/@init/@additionalLocalVariables.0"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Float"/>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.5/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.5/@statements.1/@init"/>
                      </arraySelectors>
                    </child>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.5/@statements.1/@init"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="c">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <additionalLocalVariables name="nc">
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.2"/>
              </additionalLocalVariables>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.5/@statements.1/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@cases.5/@statements.1/@init/@additionalLocalVariables.0"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.5"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/UnsupportedOperationException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="This method has not been "/>
                <children xsi:type="references:StringReference" value="implemented for transferType "/>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </throwable>
          </statements>
        </cases>
        <variable xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="alpha">
              <typeReference xsi:type="types:Float"/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.1">
                <arraySelectors>
                  <position xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.2"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </position>
                </arraySelectors>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="invAlpha">
                  <typeReference xsi:type="types:Float"/>
                  <initialValue xsi:type="expressions:MultiplicativeExpression">
                    <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.2/@statement/@statements.0/@variable"/>
                    <multiplicativeOperators xsi:type="operators:Division"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ForLoop">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.1">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.2/@statement/@statements.1/@statement/@statements.1/@init"/>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:AssignmentMultiplication"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.2/@statement/@statements.1/@statement/@statements.0/@variable"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.2/@statement/@statements.1/@statement/@statements.1/@init"/>
                  <children xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.2"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </children>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <init xsi:type="variables:LocalVariable" name="c">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.2"/>
                </init>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.2/@statement/@statements.1/@statement/@statements.1/@init"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.2/@statement/@statements.0/@variable"/>
              <children xsi:type="literals:DecimalFloatLiteral"/>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
          </children>
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.5"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ForLoop">
            <comments>// Normally (i.e. when this class is not subclassed to override</comments>
            <comments>// this method), the test (min != null) will be equivalent to</comments>
            <comments>// the test (nonStdScale).  However, there is an unlikely, but</comments>
            <comments>// possible case, in which this method is overridden, nonStdScale</comments>
            <comments>// is set true by initScale(), the subclass method for some</comments>
            <comments>// reason calls this superclass method, but the min and</comments>
            <comments>// diffMinMax arrays were never initialized by setupLUTs().  In</comments>
            <comments>// that case, the right thing to do is follow the intended</comments>
            <comments>// semantics of this method, and rescale the color components</comments>
            <comments>// only if the ColorSpace min/max were detected to be other</comments>
            <comments>// than 0.0/1.0 by setupLUTs().  Note that this implies the</comments>
            <comments>// transferType is byte, ushort, int, or short - i.e. components</comments>
            <comments>// derived from float and double pixel data are never rescaled.</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.1">
                    <arraySelectors>
                      <position xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.3/@statement/@statements.0/@init"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.2"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </position>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.3/@statement/@statements.0/@init"/>
                      </arraySelectors>
                    </children>
                    <children xsi:type="expressions:MultiplicativeExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.3/@statement/@statements.0/@init"/>
                        </arraySelectors>
                      </children>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.1">
                        <arraySelectors>
                          <position xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.3/@statement/@statements.0/@init"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.2"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </position>
                        </arraySelectors>
                      </children>
                      <multiplicativeOperators xsi:type="operators:Multiplication"/>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.3/@statement/@statements.0/@init"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.7"/>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="c">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.3/@statement/@statements.0/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.1"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="coerceData">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ColorModel.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="raster">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="WritableRaster.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="isAlphaPremultiplied">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Forces the raster data to match the state specified in the&#xA;     * &lt;CODE>isAlphaPremultiplied&lt;/CODE> variable, assuming the data &#xA;     * is currently correctly described by this &lt;CODE>ColorModel&lt;/CODE>.  &#xA;     * It may multiply or divide the color raster data by alpha, or &#xA;     * do nothing if the data is in the correct state.  If the data needs &#xA;     * to be coerced, this method also returns an instance of &#xA;     * this &lt;CODE>ColorModel&lt;/CODE> with&#xA;     * the &lt;CODE>isAlphaPremultiplied&lt;/CODE> flag set appropriately.&#xA;     * Since &lt;code>ColorModel&lt;/code> can be subclassed, subclasses inherit&#xA;     * the implementation of this method and if they don't override it&#xA;     * then they throw an exception if they use an unsupported &#xA;     * &lt;code>transferType&lt;/code>.&#xA;     *&#xA;     * @throws NullPointerException if &lt;code>raster&lt;/code> is &#xA;     * &lt;code>null&lt;/code> and data coercion is required.&#xA;     * @throws UnsupportedOperationException if the transfer type of &#xA;     * this &lt;CODE>ComponentColorModel&lt;/CODE>&#xA;     * is not one of the supported transfer types:  &#xA;     * &lt;CODE>DataBuffer.TYPE_BYTE&lt;/CODE>, &lt;CODE>DataBuffer.TYPE_USHORT&lt;/CODE>, &#xA;     * &lt;CODE>DataBuffer.TYPE_INT&lt;/CODE>, &lt;CODE>DataBuffer.TYPE_SHORT&lt;/CODE>,&#xA;     * &lt;CODE>DataBuffer.TYPE_FLOAT&lt;/CODE>, or &lt;CODE>DataBuffer.TYPE_DOUBLE&lt;/CODE>.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <comments>// Nothing to do</comments>
            <returnValue xsi:type="references:SelfReference">
              <self xsi:type="literals:This"/>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
              </children>
              <children xsi:type="literals:BooleanLiteral"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.5"/>
                </next>
                <self xsi:type="literals:This"/>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.1"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="w">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.40"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="h">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.41"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="aIdx">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.42"/>
              </next>
            </children>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="normAlpha">
          <typeReference xsi:type="types:Float"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="rminX">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.38"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="rY">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.39"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="rX">
          <typeReference xsi:type="types:Int"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Switch">
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="pixel">
                    <typeReference xsi:type="types:Byte"/>
                    <arrayDimensionsAfter/>
                    <initialValue xsi:type="literals:NullLiteral"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="zpixel">
                    <typeReference xsi:type="types:Byte"/>
                    <arrayDimensionsAfter/>
                    <initialValue xsi:type="literals:NullLiteral"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="alphaScale">
                    <typeReference xsi:type="types:Float"/>
                    <initialValue xsi:type="expressions:MultiplicativeExpression">
                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:Float"/>
                          <child xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:AdditiveExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:ShiftExpression">
                                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                  <children xsi:type="references:IdentifierReference">
                                    <arraySelectors>
                                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                    </arraySelectors>
                                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                  </children>
                                  <shiftOperators xsi:type="operators:LeftShift"/>
                                </expression>
                              </children>
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                              <additiveOperators xsi:type="operators:Subtraction"/>
                            </expression>
                          </child>
                        </expression>
                      </children>
                      <multiplicativeOperators xsi:type="operators:Division"/>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:ForLoop">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.5/@variable"/>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ForLoop">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.0/@statements.0/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:Byte"/>
                              <arrayDimensionsBefore/>
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.47"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.0/@statements.0/@statements.0/@variable"/>
                                </next>
                              </child>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:AndExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.0/@statements.0/@statements.0/@variable">
                                    <arraySelectors>
                                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                    </arraySelectors>
                                  </children>
                                  <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                                </expression>
                              </children>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.0/@statements.0/@statements.2/@variable"/>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ForLoop">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.0/@statements.0/@statements.0/@variable">
                                      <arraySelectors>
                                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@init"/>
                                      </arraySelectors>
                                    </child>
                                    <assignmentOperator xsi:type="operators:Assignment"/>
                                    <value xsi:type="expressions:CastExpression">
                                      <typeReference xsi:type="types:Byte"/>
                                      <child xsi:type="expressions:NestedExpression">
                                        <expression xsi:type="expressions:AdditiveExpression">
                                          <children xsi:type="expressions:MultiplicativeExpression">
                                            <children xsi:type="expressions:NestedExpression">
                                              <expression xsi:type="expressions:AndExpression">
                                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.0/@statements.0/@statements.0/@variable">
                                                  <arraySelectors>
                                                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@init"/>
                                                  </arraySelectors>
                                                </children>
                                                <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                                              </expression>
                                            </children>
                                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                                            <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                          </children>
                                          <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                                          <additiveOperators xsi:type="operators:Addition"/>
                                        </expression>
                                      </child>
                                    </value>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:RelationExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@init"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                <relationOperators xsi:type="operators:LessThan"/>
                              </condition>
                              <init xsi:type="variables:LocalVariable" name="c">
                                <typeReference xsi:type="types:Int"/>
                                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              </init>
                              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@init"/>
                                <operator xsi:type="operators:PlusPlus"/>
                              </updates>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="WritableRaster.class.xmi#//@classifiers.0/@members.6"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.0/@statements.0/@statements.0/@variable"/>
                                </next>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:NotEqual"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                            <children xsi:type="literals:DecimalFloatLiteral"/>
                          </condition>
                          <elseStatement xsi:type="statements:Block">
                            <statements xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.0/@statements.0/@statements.1/@variable"/>
                                    <assignmentOperator xsi:type="operators:Assignment"/>
                                    <value xsi:type="arrays:ArrayInstantiationBySize">
                                      <typeReference xsi:type="types:Byte"/>
                                      <sizes xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                                      </sizes>
                                    </value>
                                  </expression>
                                </statements>
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="../../util/Arrays.class.xmi#//@classifiers.0/@members.83"/>
                                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.0/@statements.0/@statements.1/@variable"/>
                                          <arguments xsi:type="expressions:CastExpression">
                                            <typeReference xsi:type="types:Byte"/>
                                            <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                          </arguments>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../../util/Arrays.class.xmi#//@classifiers.0"/>
                                      </next>
                                    </next>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:EqualityExpression">
                                <equalityOperators xsi:type="operators:Equal"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.0/@statements.0/@statements.1/@variable"/>
                                <children xsi:type="literals:NullLiteral"/>
                              </condition>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="WritableRaster.class.xmi#//@classifiers.0/@members.6"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.0/@statements.0/@statements.1/@variable"/>
                                </next>
                              </expression>
                            </statements>
                          </elseStatement>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@statement/@statements.1/@init"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.1/@variable"/>
                        <relationOperators xsi:type="operators:LessThan"/>
                      </condition>
                      <init xsi:type="variables:LocalVariable" name="x">
                        <typeReference xsi:type="types:Int"/>
                        <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </init>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@statement/@statements.1/@init"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@init"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.2/@variable"/>
                    <relationOperators xsi:type="operators:LessThan"/>
                  </condition>
                  <init xsi:type="variables:LocalVariable" name="y">
                    <typeReference xsi:type="types:Int"/>
                    <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </init>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.0/@statements.0/@statements.3/@init"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                </statements>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.0"/>
                </next>
                <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
              </condition>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="pixel">
                    <typeReference xsi:type="types:Short"/>
                    <arrayDimensionsAfter/>
                    <initialValue xsi:type="literals:NullLiteral"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="zpixel">
                    <typeReference xsi:type="types:Short"/>
                    <arrayDimensionsAfter/>
                    <initialValue xsi:type="literals:NullLiteral"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="alphaScale">
                    <typeReference xsi:type="types:Float"/>
                    <initialValue xsi:type="expressions:MultiplicativeExpression">
                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:Float"/>
                          <child xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:AdditiveExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:ShiftExpression">
                                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                  <children xsi:type="references:IdentifierReference">
                                    <arraySelectors>
                                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                    </arraySelectors>
                                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                  </children>
                                  <shiftOperators xsi:type="operators:LeftShift"/>
                                </expression>
                              </children>
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                              <additiveOperators xsi:type="operators:Subtraction"/>
                            </expression>
                          </child>
                        </expression>
                      </children>
                      <multiplicativeOperators xsi:type="operators:Division"/>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:ForLoop">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.5/@variable"/>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ForLoop">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.1/@statements.0/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:Short"/>
                              <arrayDimensionsBefore/>
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.47"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.1/@statements.0/@statements.0/@variable"/>
                                </next>
                              </child>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:AndExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.1/@statements.0/@statements.0/@variable">
                                    <arraySelectors>
                                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                    </arraySelectors>
                                  </children>
                                  <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                                </expression>
                              </children>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.1/@statements.0/@statements.2/@variable"/>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ForLoop">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.1/@statements.0/@statements.0/@variable">
                                      <arraySelectors>
                                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.1/@statements.0/@statements.3/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@init"/>
                                      </arraySelectors>
                                    </child>
                                    <assignmentOperator xsi:type="operators:Assignment"/>
                                    <value xsi:type="expressions:CastExpression">
                                      <typeReference xsi:type="types:Short"/>
                                      <child xsi:type="expressions:NestedExpression">
                                        <expression xsi:type="expressions:AdditiveExpression">
                                          <children xsi:type="expressions:MultiplicativeExpression">
                                            <children xsi:type="expressions:NestedExpression">
                                              <expression xsi:type="expressions:AndExpression">
                                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.1/@statements.0/@statements.0/@variable">
                                                  <arraySelectors>
                                                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.1/@statements.0/@statements.3/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@init"/>
                                                  </arraySelectors>
                                                </children>
                                                <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                                              </expression>
                                            </children>
                                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                                            <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                          </children>
                                          <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                                          <additiveOperators xsi:type="operators:Addition"/>
                                        </expression>
                                      </child>
                                    </value>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:RelationExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.1/@statements.0/@statements.3/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@init"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                <relationOperators xsi:type="operators:LessThan"/>
                              </condition>
                              <init xsi:type="variables:LocalVariable" name="c">
                                <typeReference xsi:type="types:Int"/>
                                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              </init>
                              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.1/@statements.0/@statements.3/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@init"/>
                                <operator xsi:type="operators:PlusPlus"/>
                              </updates>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="WritableRaster.class.xmi#//@classifiers.0/@members.6"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.1/@statements.0/@statements.0/@variable"/>
                                </next>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:NotEqual"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                            <children xsi:type="literals:DecimalFloatLiteral"/>
                          </condition>
                          <elseStatement xsi:type="statements:Block">
                            <statements xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.1/@statements.0/@statements.1/@variable"/>
                                    <assignmentOperator xsi:type="operators:Assignment"/>
                                    <value xsi:type="arrays:ArrayInstantiationBySize">
                                      <typeReference xsi:type="types:Short"/>
                                      <sizes xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                                      </sizes>
                                    </value>
                                  </expression>
                                </statements>
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="../../util/Arrays.class.xmi#//@classifiers.0/@members.79"/>
                                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.1/@statements.0/@statements.1/@variable"/>
                                          <arguments xsi:type="expressions:CastExpression">
                                            <typeReference xsi:type="types:Short"/>
                                            <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                          </arguments>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../../util/Arrays.class.xmi#//@classifiers.0"/>
                                      </next>
                                    </next>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:EqualityExpression">
                                <equalityOperators xsi:type="operators:Equal"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.1/@statements.0/@statements.1/@variable"/>
                                <children xsi:type="literals:NullLiteral"/>
                              </condition>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="WritableRaster.class.xmi#//@classifiers.0/@members.6"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.1/@statements.0/@statements.1/@variable"/>
                                </next>
                              </expression>
                            </statements>
                          </elseStatement>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.1/@statements.0/@statements.3/@statement/@statements.1/@init"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.1/@variable"/>
                        <relationOperators xsi:type="operators:LessThan"/>
                      </condition>
                      <init xsi:type="variables:LocalVariable" name="x">
                        <typeReference xsi:type="types:Int"/>
                        <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </init>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.1/@statements.0/@statements.3/@statement/@statements.1/@init"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.1/@statements.0/@statements.3/@init"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.2/@variable"/>
                    <relationOperators xsi:type="operators:LessThan"/>
                  </condition>
                  <init xsi:type="variables:LocalVariable" name="y">
                    <typeReference xsi:type="types:Int"/>
                    <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </init>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.1/@statements.0/@statements.3/@init"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                </statements>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.1"/>
                </next>
                <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
              </condition>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="pixel">
                    <typeReference xsi:type="types:Int"/>
                    <arrayDimensionsAfter/>
                    <initialValue xsi:type="literals:NullLiteral"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="zpixel">
                    <typeReference xsi:type="types:Int"/>
                    <arrayDimensionsAfter/>
                    <initialValue xsi:type="literals:NullLiteral"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="alphaScale">
                    <typeReference xsi:type="types:Float"/>
                    <initialValue xsi:type="expressions:MultiplicativeExpression">
                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:Float"/>
                          <child xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:AdditiveExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:ShiftExpression">
                                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                  <children xsi:type="references:IdentifierReference">
                                    <arraySelectors>
                                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                    </arraySelectors>
                                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                  </children>
                                  <shiftOperators xsi:type="operators:LeftShift"/>
                                </expression>
                              </children>
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                              <additiveOperators xsi:type="operators:Subtraction"/>
                            </expression>
                          </child>
                        </expression>
                      </children>
                      <multiplicativeOperators xsi:type="operators:Division"/>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:ForLoop">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.5/@variable"/>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ForLoop">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.2/@statements.0/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:Int"/>
                              <arrayDimensionsBefore/>
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.47"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.2/@statements.0/@statements.0/@variable"/>
                                </next>
                              </child>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.2/@statements.0/@statements.0/@variable">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.2/@statements.0/@statements.2/@variable"/>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ForLoop">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.2/@statements.0/@statements.0/@variable">
                                      <arraySelectors>
                                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.2/@statements.0/@statements.3/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@init"/>
                                      </arraySelectors>
                                    </child>
                                    <assignmentOperator xsi:type="operators:Assignment"/>
                                    <value xsi:type="expressions:CastExpression">
                                      <typeReference xsi:type="types:Int"/>
                                      <child xsi:type="expressions:NestedExpression">
                                        <expression xsi:type="expressions:AdditiveExpression">
                                          <children xsi:type="expressions:MultiplicativeExpression">
                                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.2/@statements.0/@statements.0/@variable">
                                              <arraySelectors>
                                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.2/@statements.0/@statements.3/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@init"/>
                                              </arraySelectors>
                                            </children>
                                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                                            <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                          </children>
                                          <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                                          <additiveOperators xsi:type="operators:Addition"/>
                                        </expression>
                                      </child>
                                    </value>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:RelationExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.2/@statements.0/@statements.3/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@init"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                <relationOperators xsi:type="operators:LessThan"/>
                              </condition>
                              <init xsi:type="variables:LocalVariable" name="c">
                                <typeReference xsi:type="types:Int"/>
                                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              </init>
                              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.2/@statements.0/@statements.3/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@init"/>
                                <operator xsi:type="operators:PlusPlus"/>
                              </updates>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="WritableRaster.class.xmi#//@classifiers.0/@members.6"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.2/@statements.0/@statements.0/@variable"/>
                                </next>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:NotEqual"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                            <children xsi:type="literals:DecimalFloatLiteral"/>
                          </condition>
                          <elseStatement xsi:type="statements:Block">
                            <statements xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.2/@statements.0/@statements.1/@variable"/>
                                    <assignmentOperator xsi:type="operators:Assignment"/>
                                    <value xsi:type="arrays:ArrayInstantiationBySize">
                                      <typeReference xsi:type="types:Int"/>
                                      <sizes xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                                      </sizes>
                                    </value>
                                  </expression>
                                </statements>
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="../../util/Arrays.class.xmi#//@classifiers.0/@members.77"/>
                                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.2/@statements.0/@statements.1/@variable"/>
                                          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../../util/Arrays.class.xmi#//@classifiers.0"/>
                                      </next>
                                    </next>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:EqualityExpression">
                                <equalityOperators xsi:type="operators:Equal"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.2/@statements.0/@statements.1/@variable"/>
                                <children xsi:type="literals:NullLiteral"/>
                              </condition>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="WritableRaster.class.xmi#//@classifiers.0/@members.6"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.2/@statements.0/@statements.1/@variable"/>
                                </next>
                              </expression>
                            </statements>
                          </elseStatement>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.2/@statements.0/@statements.3/@statement/@statements.1/@init"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.1/@variable"/>
                        <relationOperators xsi:type="operators:LessThan"/>
                      </condition>
                      <init xsi:type="variables:LocalVariable" name="x">
                        <typeReference xsi:type="types:Int"/>
                        <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </init>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.2/@statements.0/@statements.3/@statement/@statements.1/@init"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.2/@statements.0/@statements.3/@init"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.2/@variable"/>
                    <relationOperators xsi:type="operators:LessThan"/>
                  </condition>
                  <init xsi:type="variables:LocalVariable" name="y">
                    <typeReference xsi:type="types:Int"/>
                    <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </init>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.2/@statements.0/@statements.3/@init"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                </statements>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.3"/>
                </next>
                <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
              </condition>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="pixel">
                    <typeReference xsi:type="types:Short"/>
                    <arrayDimensionsAfter/>
                    <initialValue xsi:type="literals:NullLiteral"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="zpixel">
                    <typeReference xsi:type="types:Short"/>
                    <arrayDimensionsAfter/>
                    <initialValue xsi:type="literals:NullLiteral"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="alphaScale">
                    <typeReference xsi:type="types:Float"/>
                    <initialValue xsi:type="expressions:MultiplicativeExpression">
                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="32767.0"/>
                      <multiplicativeOperators xsi:type="operators:Division"/>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:ForLoop">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.5/@variable"/>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ForLoop">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.3/@statements.0/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:Short"/>
                              <arrayDimensionsBefore/>
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.47"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.3/@statements.0/@statements.0/@variable"/>
                                </next>
                              </child>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.3/@statements.0/@statements.0/@variable">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.3/@statements.0/@statements.2/@variable"/>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ForLoop">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.3/@statements.0/@statements.0/@variable">
                                      <arraySelectors>
                                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.3/@statements.0/@statements.3/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@init"/>
                                      </arraySelectors>
                                    </child>
                                    <assignmentOperator xsi:type="operators:Assignment"/>
                                    <value xsi:type="expressions:CastExpression">
                                      <typeReference xsi:type="types:Short"/>
                                      <child xsi:type="expressions:NestedExpression">
                                        <expression xsi:type="expressions:AdditiveExpression">
                                          <children xsi:type="expressions:MultiplicativeExpression">
                                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.3/@statements.0/@statements.0/@variable">
                                              <arraySelectors>
                                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.3/@statements.0/@statements.3/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@init"/>
                                              </arraySelectors>
                                            </children>
                                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                                            <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                          </children>
                                          <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                                          <additiveOperators xsi:type="operators:Addition"/>
                                        </expression>
                                      </child>
                                    </value>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:RelationExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.3/@statements.0/@statements.3/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@init"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                <relationOperators xsi:type="operators:LessThan"/>
                              </condition>
                              <init xsi:type="variables:LocalVariable" name="c">
                                <typeReference xsi:type="types:Int"/>
                                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              </init>
                              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.3/@statements.0/@statements.3/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@init"/>
                                <operator xsi:type="operators:PlusPlus"/>
                              </updates>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="WritableRaster.class.xmi#//@classifiers.0/@members.6"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.3/@statements.0/@statements.0/@variable"/>
                                </next>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:NotEqual"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                            <children xsi:type="literals:DecimalFloatLiteral"/>
                          </condition>
                          <elseStatement xsi:type="statements:Block">
                            <statements xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.3/@statements.0/@statements.1/@variable"/>
                                    <assignmentOperator xsi:type="operators:Assignment"/>
                                    <value xsi:type="arrays:ArrayInstantiationBySize">
                                      <typeReference xsi:type="types:Short"/>
                                      <sizes xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                                      </sizes>
                                    </value>
                                  </expression>
                                </statements>
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="../../util/Arrays.class.xmi#//@classifiers.0/@members.79"/>
                                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.3/@statements.0/@statements.1/@variable"/>
                                          <arguments xsi:type="expressions:CastExpression">
                                            <typeReference xsi:type="types:Short"/>
                                            <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                          </arguments>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../../util/Arrays.class.xmi#//@classifiers.0"/>
                                      </next>
                                    </next>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:EqualityExpression">
                                <equalityOperators xsi:type="operators:Equal"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.3/@statements.0/@statements.1/@variable"/>
                                <children xsi:type="literals:NullLiteral"/>
                              </condition>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="WritableRaster.class.xmi#//@classifiers.0/@members.6"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.3/@statements.0/@statements.1/@variable"/>
                                </next>
                              </expression>
                            </statements>
                          </elseStatement>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.3/@statements.0/@statements.3/@statement/@statements.1/@init"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.1/@variable"/>
                        <relationOperators xsi:type="operators:LessThan"/>
                      </condition>
                      <init xsi:type="variables:LocalVariable" name="x">
                        <typeReference xsi:type="types:Int"/>
                        <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </init>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.3/@statements.0/@statements.3/@statement/@statements.1/@init"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.3/@statements.0/@statements.3/@init"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.2/@variable"/>
                    <relationOperators xsi:type="operators:LessThan"/>
                  </condition>
                  <init xsi:type="variables:LocalVariable" name="y">
                    <typeReference xsi:type="types:Int"/>
                    <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </init>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.3/@statements.0/@statements.3/@init"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                </statements>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.2"/>
                </next>
                <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
              </condition>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="pixel">
                    <typeReference xsi:type="types:Float"/>
                    <arrayDimensionsAfter/>
                    <initialValue xsi:type="literals:NullLiteral"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="zpixel">
                    <typeReference xsi:type="types:Float"/>
                    <arrayDimensionsAfter/>
                    <initialValue xsi:type="literals:NullLiteral"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:ForLoop">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.5/@variable"/>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ForLoop">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.4/@statements.0/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:Float"/>
                              <arrayDimensionsBefore/>
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.47"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.4/@statements.0/@statements.0/@variable"/>
                                </next>
                              </child>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.4/@statements.0/@statements.0/@variable">
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                              </arraySelectors>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ForLoop">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.4/@statements.0/@statements.0/@variable">
                                      <arraySelectors>
                                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.4/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@init"/>
                                      </arraySelectors>
                                    </child>
                                    <assignmentOperator xsi:type="operators:AssignmentMultiplication"/>
                                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:RelationExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.4/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@init"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                <relationOperators xsi:type="operators:LessThan"/>
                              </condition>
                              <init xsi:type="variables:LocalVariable" name="c">
                                <typeReference xsi:type="types:Int"/>
                                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              </init>
                              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.4/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@init"/>
                                <operator xsi:type="operators:PlusPlus"/>
                              </updates>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="WritableRaster.class.xmi#//@classifiers.0/@members.6"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.4/@statements.0/@statements.0/@variable"/>
                                </next>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:NotEqual"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                            <children xsi:type="literals:DecimalFloatLiteral"/>
                          </condition>
                          <elseStatement xsi:type="statements:Block">
                            <statements xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.4/@statements.0/@statements.1/@variable"/>
                                    <assignmentOperator xsi:type="operators:Assignment"/>
                                    <value xsi:type="arrays:ArrayInstantiationBySize">
                                      <typeReference xsi:type="types:Float"/>
                                      <sizes xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                                      </sizes>
                                    </value>
                                  </expression>
                                </statements>
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="../../util/Arrays.class.xmi#//@classifiers.0/@members.89"/>
                                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.4/@statements.0/@statements.1/@variable"/>
                                          <arguments xsi:type="literals:DecimalFloatLiteral"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../../util/Arrays.class.xmi#//@classifiers.0"/>
                                      </next>
                                    </next>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:EqualityExpression">
                                <equalityOperators xsi:type="operators:Equal"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.4/@statements.0/@statements.1/@variable"/>
                                <children xsi:type="literals:NullLiteral"/>
                              </condition>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="WritableRaster.class.xmi#//@classifiers.0/@members.6"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.4/@statements.0/@statements.1/@variable"/>
                                </next>
                              </expression>
                            </statements>
                          </elseStatement>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.4/@statements.0/@statements.2/@statement/@statements.1/@init"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.1/@variable"/>
                        <relationOperators xsi:type="operators:LessThan"/>
                      </condition>
                      <init xsi:type="variables:LocalVariable" name="x">
                        <typeReference xsi:type="types:Int"/>
                        <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </init>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.4/@statements.0/@statements.2/@statement/@statements.1/@init"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.4/@statements.0/@statements.2/@init"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.2/@variable"/>
                    <relationOperators xsi:type="operators:LessThan"/>
                  </condition>
                  <init xsi:type="variables:LocalVariable" name="y">
                    <typeReference xsi:type="types:Int"/>
                    <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </init>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.4/@statements.0/@statements.2/@init"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                </statements>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.4"/>
                </next>
                <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
              </condition>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="pixel">
                    <typeReference xsi:type="types:Double"/>
                    <arrayDimensionsAfter/>
                    <initialValue xsi:type="literals:NullLiteral"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="zpixel">
                    <typeReference xsi:type="types:Double"/>
                    <arrayDimensionsAfter/>
                    <initialValue xsi:type="literals:NullLiteral"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:ForLoop">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.5/@variable"/>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ForLoop">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.5/@statements.0/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:Double"/>
                              <arrayDimensionsBefore/>
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.47"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.5/@statements.0/@statements.0/@variable"/>
                                </next>
                              </child>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:LocalVariableStatement">
                          <variable name="dnormAlpha">
                            <typeReference xsi:type="types:Double"/>
                            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.5/@statements.0/@statements.0/@variable">
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                              </arraySelectors>
                            </initialValue>
                          </variable>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ForLoop">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.5/@statements.0/@statements.0/@variable">
                                      <arraySelectors>
                                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.5/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@init"/>
                                      </arraySelectors>
                                    </child>
                                    <assignmentOperator xsi:type="operators:AssignmentMultiplication"/>
                                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.5/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.1/@variable"/>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:RelationExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.5/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@init"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                <relationOperators xsi:type="operators:LessThan"/>
                              </condition>
                              <init xsi:type="variables:LocalVariable" name="c">
                                <typeReference xsi:type="types:Int"/>
                                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              </init>
                              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.5/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@init"/>
                                <operator xsi:type="operators:PlusPlus"/>
                              </updates>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="WritableRaster.class.xmi#//@classifiers.0/@members.6"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.5/@statements.0/@statements.0/@variable"/>
                                </next>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:NotEqual"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.5/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.1/@variable"/>
                            <children xsi:type="literals:DecimalDoubleLiteral"/>
                          </condition>
                          <elseStatement xsi:type="statements:Block">
                            <statements xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.5/@statements.0/@statements.1/@variable"/>
                                    <assignmentOperator xsi:type="operators:Assignment"/>
                                    <value xsi:type="arrays:ArrayInstantiationBySize">
                                      <typeReference xsi:type="types:Double"/>
                                      <sizes xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                                      </sizes>
                                    </value>
                                  </expression>
                                </statements>
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="../../util/Arrays.class.xmi#//@classifiers.0/@members.87"/>
                                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.5/@statements.0/@statements.1/@variable"/>
                                          <arguments xsi:type="literals:DecimalDoubleLiteral"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../../util/Arrays.class.xmi#//@classifiers.0"/>
                                      </next>
                                    </next>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:EqualityExpression">
                                <equalityOperators xsi:type="operators:Equal"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.5/@statements.0/@statements.1/@variable"/>
                                <children xsi:type="literals:NullLiteral"/>
                              </condition>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="WritableRaster.class.xmi#//@classifiers.0/@members.6"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.5/@statements.0/@statements.1/@variable"/>
                                </next>
                              </expression>
                            </statements>
                          </elseStatement>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.5/@statements.0/@statements.2/@statement/@statements.1/@init"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.1/@variable"/>
                        <relationOperators xsi:type="operators:LessThan"/>
                      </condition>
                      <init xsi:type="variables:LocalVariable" name="x">
                        <typeReference xsi:type="types:Int"/>
                        <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </init>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.5/@statements.0/@statements.2/@statement/@statements.1/@init"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.5/@statements.0/@statements.2/@init"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.2/@variable"/>
                    <relationOperators xsi:type="operators:LessThan"/>
                  </condition>
                  <init xsi:type="variables:LocalVariable" name="y">
                    <typeReference xsi:type="types:Int"/>
                    <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </init>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@statement/@statements.0/@cases.5/@statements.0/@statements.2/@init"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                </statements>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.5"/>
                </next>
                <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
              </condition>
            </cases>
            <cases xsi:type="statements:DefaultSwitchCase">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../lang/UnsupportedOperationException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="This method has not been "/>
                    <children xsi:type="references:StringReference" value="implemented for transferType "/>
                    <children xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </throwable>
              </statements>
            </cases>
            <variable xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
            </variable>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.1"/>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:Switch">
            <comments>// We are premultiplied and want to divide it out</comments>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="pixel">
                    <typeReference xsi:type="types:Byte"/>
                    <arrayDimensionsAfter/>
                    <initialValue xsi:type="literals:NullLiteral"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="alphaScale">
                    <typeReference xsi:type="types:Float"/>
                    <initialValue xsi:type="expressions:MultiplicativeExpression">
                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:Float"/>
                          <child xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:AdditiveExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:ShiftExpression">
                                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                  <children xsi:type="references:IdentifierReference">
                                    <arraySelectors>
                                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                    </arraySelectors>
                                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                  </children>
                                  <shiftOperators xsi:type="operators:LeftShift"/>
                                </expression>
                              </children>
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                              <additiveOperators xsi:type="operators:Subtraction"/>
                            </expression>
                          </child>
                        </expression>
                      </children>
                      <multiplicativeOperators xsi:type="operators:Division"/>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:ForLoop">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.5/@variable"/>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ForLoop">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.0/@statements.0/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:Byte"/>
                              <arrayDimensionsBefore/>
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.47"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.0/@statements.0/@statements.0/@variable"/>
                                </next>
                              </child>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:AndExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.0/@statements.0/@statements.0/@variable">
                                    <arraySelectors>
                                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                    </arraySelectors>
                                  </children>
                                  <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                                </expression>
                              </children>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.0/@statements.0/@statements.1/@variable"/>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:LocalVariableStatement">
                              <variable name="invAlpha">
                                <typeReference xsi:type="types:Float"/>
                                <initialValue xsi:type="expressions:MultiplicativeExpression">
                                  <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                                  <multiplicativeOperators xsi:type="operators:Division"/>
                                </initialValue>
                              </variable>
                            </statements>
                            <statements xsi:type="statements:ForLoop">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.0/@statements.0/@statements.0/@variable">
                                      <arraySelectors>
                                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.0/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.1/@init"/>
                                      </arraySelectors>
                                    </child>
                                    <assignmentOperator xsi:type="operators:Assignment"/>
                                    <value xsi:type="expressions:CastExpression">
                                      <typeReference xsi:type="types:Byte"/>
                                      <child xsi:type="expressions:NestedExpression">
                                        <expression xsi:type="expressions:AdditiveExpression">
                                          <children xsi:type="expressions:MultiplicativeExpression">
                                            <children xsi:type="expressions:NestedExpression">
                                              <expression xsi:type="expressions:AndExpression">
                                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.0/@statements.0/@statements.0/@variable">
                                                  <arraySelectors>
                                                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.0/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.1/@init"/>
                                                  </arraySelectors>
                                                </children>
                                                <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                                              </expression>
                                            </children>
                                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.0/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@variable"/>
                                            <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                          </children>
                                          <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                                          <additiveOperators xsi:type="operators:Addition"/>
                                        </expression>
                                      </child>
                                    </value>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:RelationExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.0/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.1/@init"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                <relationOperators xsi:type="operators:LessThan"/>
                              </condition>
                              <init xsi:type="variables:LocalVariable" name="c">
                                <typeReference xsi:type="types:Int"/>
                                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              </init>
                              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.0/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.1/@init"/>
                                <operator xsi:type="operators:PlusPlus"/>
                              </updates>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="WritableRaster.class.xmi#//@classifiers.0/@members.6"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.0/@statements.0/@statements.0/@variable"/>
                                </next>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:NotEqual"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                            <children xsi:type="literals:DecimalFloatLiteral"/>
                          </condition>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.0/@statements.0/@statements.2/@statement/@statements.1/@init"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.1/@variable"/>
                        <relationOperators xsi:type="operators:LessThan"/>
                      </condition>
                      <init xsi:type="variables:LocalVariable" name="x">
                        <typeReference xsi:type="types:Int"/>
                        <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </init>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.0/@statements.0/@statements.2/@statement/@statements.1/@init"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.0/@statements.0/@statements.2/@init"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.2/@variable"/>
                    <relationOperators xsi:type="operators:LessThan"/>
                  </condition>
                  <init xsi:type="variables:LocalVariable" name="y">
                    <typeReference xsi:type="types:Int"/>
                    <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </init>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.0/@statements.0/@statements.2/@init"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                </statements>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.0"/>
                </next>
                <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
              </condition>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="pixel">
                    <typeReference xsi:type="types:Short"/>
                    <arrayDimensionsAfter/>
                    <initialValue xsi:type="literals:NullLiteral"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="alphaScale">
                    <typeReference xsi:type="types:Float"/>
                    <initialValue xsi:type="expressions:MultiplicativeExpression">
                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:Float"/>
                          <child xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:AdditiveExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:ShiftExpression">
                                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                  <children xsi:type="references:IdentifierReference">
                                    <arraySelectors>
                                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                    </arraySelectors>
                                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                  </children>
                                  <shiftOperators xsi:type="operators:LeftShift"/>
                                </expression>
                              </children>
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                              <additiveOperators xsi:type="operators:Subtraction"/>
                            </expression>
                          </child>
                        </expression>
                      </children>
                      <multiplicativeOperators xsi:type="operators:Division"/>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:ForLoop">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.5/@variable"/>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ForLoop">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.1/@statements.0/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:Short"/>
                              <arrayDimensionsBefore/>
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.47"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.1/@statements.0/@statements.0/@variable"/>
                                </next>
                              </child>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:AndExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.1/@statements.0/@statements.0/@variable">
                                    <arraySelectors>
                                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                    </arraySelectors>
                                  </children>
                                  <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                                </expression>
                              </children>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.1/@statements.0/@statements.1/@variable"/>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:LocalVariableStatement">
                              <variable name="invAlpha">
                                <typeReference xsi:type="types:Float"/>
                                <initialValue xsi:type="expressions:MultiplicativeExpression">
                                  <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                                  <multiplicativeOperators xsi:type="operators:Division"/>
                                </initialValue>
                              </variable>
                            </statements>
                            <statements xsi:type="statements:ForLoop">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.1/@statements.0/@statements.0/@variable">
                                      <arraySelectors>
                                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.1/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.1/@init"/>
                                      </arraySelectors>
                                    </child>
                                    <assignmentOperator xsi:type="operators:Assignment"/>
                                    <value xsi:type="expressions:CastExpression">
                                      <typeReference xsi:type="types:Short"/>
                                      <child xsi:type="expressions:NestedExpression">
                                        <expression xsi:type="expressions:AdditiveExpression">
                                          <children xsi:type="expressions:MultiplicativeExpression">
                                            <children xsi:type="expressions:NestedExpression">
                                              <expression xsi:type="expressions:AndExpression">
                                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.1/@statements.0/@statements.0/@variable">
                                                  <arraySelectors>
                                                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.1/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.1/@init"/>
                                                  </arraySelectors>
                                                </children>
                                                <children xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
                                              </expression>
                                            </children>
                                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.1/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@variable"/>
                                            <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                          </children>
                                          <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                                          <additiveOperators xsi:type="operators:Addition"/>
                                        </expression>
                                      </child>
                                    </value>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:RelationExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.1/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.1/@init"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                <relationOperators xsi:type="operators:LessThan"/>
                              </condition>
                              <init xsi:type="variables:LocalVariable" name="c">
                                <typeReference xsi:type="types:Int"/>
                                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              </init>
                              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.1/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.1/@init"/>
                                <operator xsi:type="operators:PlusPlus"/>
                              </updates>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="WritableRaster.class.xmi#//@classifiers.0/@members.6"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.1/@statements.0/@statements.0/@variable"/>
                                </next>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:NotEqual"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                            <children xsi:type="literals:DecimalFloatLiteral"/>
                          </condition>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.1/@statements.0/@statements.2/@statement/@statements.1/@init"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.1/@variable"/>
                        <relationOperators xsi:type="operators:LessThan"/>
                      </condition>
                      <init xsi:type="variables:LocalVariable" name="x">
                        <typeReference xsi:type="types:Int"/>
                        <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </init>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.1/@statements.0/@statements.2/@statement/@statements.1/@init"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.1/@statements.0/@statements.2/@init"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.2/@variable"/>
                    <relationOperators xsi:type="operators:LessThan"/>
                  </condition>
                  <init xsi:type="variables:LocalVariable" name="y">
                    <typeReference xsi:type="types:Int"/>
                    <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </init>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.1/@statements.0/@statements.2/@init"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                </statements>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.1"/>
                </next>
                <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
              </condition>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="pixel">
                    <typeReference xsi:type="types:Int"/>
                    <arrayDimensionsAfter/>
                    <initialValue xsi:type="literals:NullLiteral"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="alphaScale">
                    <typeReference xsi:type="types:Float"/>
                    <initialValue xsi:type="expressions:MultiplicativeExpression">
                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:Float"/>
                          <child xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:AdditiveExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:ShiftExpression">
                                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                  <children xsi:type="references:IdentifierReference">
                                    <arraySelectors>
                                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                    </arraySelectors>
                                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                                  </children>
                                  <shiftOperators xsi:type="operators:LeftShift"/>
                                </expression>
                              </children>
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                              <additiveOperators xsi:type="operators:Subtraction"/>
                            </expression>
                          </child>
                        </expression>
                      </children>
                      <multiplicativeOperators xsi:type="operators:Division"/>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:ForLoop">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.5/@variable"/>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ForLoop">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.2/@statements.0/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:Int"/>
                              <arrayDimensionsBefore/>
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.47"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.2/@statements.0/@statements.0/@variable"/>
                                </next>
                              </child>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.2/@statements.0/@statements.0/@variable">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.2/@statements.0/@statements.1/@variable"/>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:LocalVariableStatement">
                              <variable name="invAlpha">
                                <typeReference xsi:type="types:Float"/>
                                <initialValue xsi:type="expressions:MultiplicativeExpression">
                                  <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                                  <multiplicativeOperators xsi:type="operators:Division"/>
                                </initialValue>
                              </variable>
                            </statements>
                            <statements xsi:type="statements:ForLoop">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.2/@statements.0/@statements.0/@variable">
                                      <arraySelectors>
                                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.2/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.1/@init"/>
                                      </arraySelectors>
                                    </child>
                                    <assignmentOperator xsi:type="operators:Assignment"/>
                                    <value xsi:type="expressions:CastExpression">
                                      <typeReference xsi:type="types:Int"/>
                                      <child xsi:type="expressions:NestedExpression">
                                        <expression xsi:type="expressions:AdditiveExpression">
                                          <children xsi:type="expressions:MultiplicativeExpression">
                                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.2/@statements.0/@statements.0/@variable">
                                              <arraySelectors>
                                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.2/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.1/@init"/>
                                              </arraySelectors>
                                            </children>
                                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.2/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@variable"/>
                                            <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                          </children>
                                          <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                                          <additiveOperators xsi:type="operators:Addition"/>
                                        </expression>
                                      </child>
                                    </value>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:RelationExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.2/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.1/@init"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                <relationOperators xsi:type="operators:LessThan"/>
                              </condition>
                              <init xsi:type="variables:LocalVariable" name="c">
                                <typeReference xsi:type="types:Int"/>
                                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              </init>
                              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.2/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.1/@init"/>
                                <operator xsi:type="operators:PlusPlus"/>
                              </updates>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="WritableRaster.class.xmi#//@classifiers.0/@members.6"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.2/@statements.0/@statements.0/@variable"/>
                                </next>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:NotEqual"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                            <children xsi:type="literals:DecimalFloatLiteral"/>
                          </condition>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.2/@statements.0/@statements.2/@statement/@statements.1/@init"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.1/@variable"/>
                        <relationOperators xsi:type="operators:LessThan"/>
                      </condition>
                      <init xsi:type="variables:LocalVariable" name="x">
                        <typeReference xsi:type="types:Int"/>
                        <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </init>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.2/@statements.0/@statements.2/@statement/@statements.1/@init"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.2/@statements.0/@statements.2/@init"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.2/@variable"/>
                    <relationOperators xsi:type="operators:LessThan"/>
                  </condition>
                  <init xsi:type="variables:LocalVariable" name="y">
                    <typeReference xsi:type="types:Int"/>
                    <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </init>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.2/@statements.0/@statements.2/@init"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                </statements>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.3"/>
                </next>
                <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
              </condition>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="pixel">
                    <typeReference xsi:type="types:Short"/>
                    <arrayDimensionsAfter/>
                    <initialValue xsi:type="literals:NullLiteral"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="alphaScale">
                    <typeReference xsi:type="types:Float"/>
                    <initialValue xsi:type="expressions:MultiplicativeExpression">
                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                      <children xsi:type="literals:DecimalFloatLiteral" decimalValue="32767.0"/>
                      <multiplicativeOperators xsi:type="operators:Division"/>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:ForLoop">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.5/@variable"/>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ForLoop">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.3/@statements.0/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:Short"/>
                              <arrayDimensionsBefore/>
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.47"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.3/@statements.0/@statements.0/@variable"/>
                                </next>
                              </child>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.3/@statements.0/@statements.0/@variable">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.3/@statements.0/@statements.1/@variable"/>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:LocalVariableStatement">
                              <variable name="invAlpha">
                                <typeReference xsi:type="types:Float"/>
                                <initialValue xsi:type="expressions:MultiplicativeExpression">
                                  <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                                  <multiplicativeOperators xsi:type="operators:Division"/>
                                </initialValue>
                              </variable>
                            </statements>
                            <statements xsi:type="statements:ForLoop">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.3/@statements.0/@statements.0/@variable">
                                      <arraySelectors>
                                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.3/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.1/@init"/>
                                      </arraySelectors>
                                    </child>
                                    <assignmentOperator xsi:type="operators:Assignment"/>
                                    <value xsi:type="expressions:CastExpression">
                                      <typeReference xsi:type="types:Short"/>
                                      <child xsi:type="expressions:NestedExpression">
                                        <expression xsi:type="expressions:AdditiveExpression">
                                          <children xsi:type="expressions:MultiplicativeExpression">
                                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.3/@statements.0/@statements.0/@variable">
                                              <arraySelectors>
                                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.3/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.1/@init"/>
                                              </arraySelectors>
                                            </children>
                                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.3/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@variable"/>
                                            <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                          </children>
                                          <children xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
                                          <additiveOperators xsi:type="operators:Addition"/>
                                        </expression>
                                      </child>
                                    </value>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:RelationExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.3/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.1/@init"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                <relationOperators xsi:type="operators:LessThan"/>
                              </condition>
                              <init xsi:type="variables:LocalVariable" name="c">
                                <typeReference xsi:type="types:Int"/>
                                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              </init>
                              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.3/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.2/@statement/@statements.1/@init"/>
                                <operator xsi:type="operators:PlusPlus"/>
                              </updates>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="WritableRaster.class.xmi#//@classifiers.0/@members.6"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.3/@statements.0/@statements.0/@variable"/>
                                </next>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:NotEqual"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                            <children xsi:type="literals:DecimalFloatLiteral"/>
                          </condition>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.3/@statements.0/@statements.2/@statement/@statements.1/@init"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.1/@variable"/>
                        <relationOperators xsi:type="operators:LessThan"/>
                      </condition>
                      <init xsi:type="variables:LocalVariable" name="x">
                        <typeReference xsi:type="types:Int"/>
                        <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </init>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.3/@statements.0/@statements.2/@statement/@statements.1/@init"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.3/@statements.0/@statements.2/@init"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.2/@variable"/>
                    <relationOperators xsi:type="operators:LessThan"/>
                  </condition>
                  <init xsi:type="variables:LocalVariable" name="y">
                    <typeReference xsi:type="types:Int"/>
                    <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </init>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.3/@statements.0/@statements.2/@init"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                </statements>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.2"/>
                </next>
                <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
              </condition>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="pixel">
                    <typeReference xsi:type="types:Float"/>
                    <arrayDimensionsAfter/>
                    <initialValue xsi:type="literals:NullLiteral"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:ForLoop">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.5/@variable"/>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ForLoop">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.4/@statements.0/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:Float"/>
                              <arrayDimensionsBefore/>
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.47"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.4/@statements.0/@statements.0/@variable"/>
                                </next>
                              </child>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.4/@statements.0/@statements.0/@variable">
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                              </arraySelectors>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:LocalVariableStatement">
                              <variable name="invAlpha">
                                <typeReference xsi:type="types:Float"/>
                                <initialValue xsi:type="expressions:MultiplicativeExpression">
                                  <children xsi:type="literals:DecimalFloatLiteral" decimalValue="1.0"/>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                                  <multiplicativeOperators xsi:type="operators:Division"/>
                                </initialValue>
                              </variable>
                            </statements>
                            <statements xsi:type="statements:ForLoop">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.4/@statements.0/@statements.0/@variable">
                                      <arraySelectors>
                                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.4/@statements.0/@statements.1/@statement/@statements.1/@statement/@statements.2/@statement/@statements.1/@init"/>
                                      </arraySelectors>
                                    </child>
                                    <assignmentOperator xsi:type="operators:AssignmentMultiplication"/>
                                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.4/@statements.0/@statements.1/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@variable"/>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:RelationExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.4/@statements.0/@statements.1/@statement/@statements.1/@statement/@statements.2/@statement/@statements.1/@init"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                <relationOperators xsi:type="operators:LessThan"/>
                              </condition>
                              <init xsi:type="variables:LocalVariable" name="c">
                                <typeReference xsi:type="types:Int"/>
                                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              </init>
                              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.4/@statements.0/@statements.1/@statement/@statements.1/@statement/@statements.2/@statement/@statements.1/@init"/>
                                <operator xsi:type="operators:PlusPlus"/>
                              </updates>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="WritableRaster.class.xmi#//@classifiers.0/@members.6"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.4/@statements.0/@statements.0/@variable"/>
                                </next>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:NotEqual"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.4/@variable"/>
                            <children xsi:type="literals:DecimalFloatLiteral"/>
                          </condition>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.4/@statements.0/@statements.1/@statement/@statements.1/@init"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.1/@variable"/>
                        <relationOperators xsi:type="operators:LessThan"/>
                      </condition>
                      <init xsi:type="variables:LocalVariable" name="x">
                        <typeReference xsi:type="types:Int"/>
                        <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </init>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.4/@statements.0/@statements.1/@statement/@statements.1/@init"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.4/@statements.0/@statements.1/@init"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.2/@variable"/>
                    <relationOperators xsi:type="operators:LessThan"/>
                  </condition>
                  <init xsi:type="variables:LocalVariable" name="y">
                    <typeReference xsi:type="types:Int"/>
                    <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </init>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.4/@statements.0/@statements.1/@init"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                </statements>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.4"/>
                </next>
                <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
              </condition>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="pixel">
                    <typeReference xsi:type="types:Double"/>
                    <arrayDimensionsAfter/>
                    <initialValue xsi:type="literals:NullLiteral"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:ForLoop">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.5/@variable"/>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ForLoop">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.5/@statements.0/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:Double"/>
                              <arrayDimensionsBefore/>
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.47"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.5/@statements.0/@statements.0/@variable"/>
                                </next>
                              </child>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:LocalVariableStatement">
                          <variable name="dnormAlpha">
                            <typeReference xsi:type="types:Double"/>
                            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.5/@statements.0/@statements.0/@variable">
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                              </arraySelectors>
                            </initialValue>
                          </variable>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:LocalVariableStatement">
                              <variable name="invAlpha">
                                <typeReference xsi:type="types:Double"/>
                                <initialValue xsi:type="expressions:MultiplicativeExpression">
                                  <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="1.0"/>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.5/@statements.0/@statements.1/@statement/@statements.1/@statement/@statements.1/@variable"/>
                                  <multiplicativeOperators xsi:type="operators:Division"/>
                                </initialValue>
                              </variable>
                            </statements>
                            <statements xsi:type="statements:ForLoop">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.5/@statements.0/@statements.0/@variable">
                                      <arraySelectors>
                                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.5/@statements.0/@statements.1/@statement/@statements.1/@statement/@statements.2/@statement/@statements.1/@init"/>
                                      </arraySelectors>
                                    </child>
                                    <assignmentOperator xsi:type="operators:AssignmentMultiplication"/>
                                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.5/@statements.0/@statements.1/@statement/@statements.1/@statement/@statements.2/@statement/@statements.0/@variable"/>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:RelationExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.5/@statements.0/@statements.1/@statement/@statements.1/@statement/@statements.2/@statement/@statements.1/@init"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.3/@variable"/>
                                <relationOperators xsi:type="operators:LessThan"/>
                              </condition>
                              <init xsi:type="variables:LocalVariable" name="c">
                                <typeReference xsi:type="types:Int"/>
                                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              </init>
                              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.5/@statements.0/@statements.1/@statement/@statements.1/@statement/@statements.2/@statement/@statements.1/@init"/>
                                <operator xsi:type="operators:PlusPlus"/>
                              </updates>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="WritableRaster.class.xmi#//@classifiers.0/@members.6"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.5/@statements.0/@statements.0/@variable"/>
                                </next>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:NotEqual"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.5/@statements.0/@statements.1/@statement/@statements.1/@statement/@statements.1/@variable"/>
                            <children xsi:type="literals:DecimalDoubleLiteral"/>
                          </condition>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.5/@statements.0/@statements.1/@statement/@statements.1/@init"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.1/@variable"/>
                        <relationOperators xsi:type="operators:LessThan"/>
                      </condition>
                      <init xsi:type="variables:LocalVariable" name="x">
                        <typeReference xsi:type="types:Int"/>
                        <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </init>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.5/@statements.0/@statements.1/@statement/@statements.1/@init"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.7/@variable"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.5/@statements.0/@statements.1/@init"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.2/@variable"/>
                    <relationOperators xsi:type="operators:LessThan"/>
                  </condition>
                  <init xsi:type="variables:LocalVariable" name="y">
                    <typeReference xsi:type="types:Int"/>
                    <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </init>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.8/@elseStatement/@statements.0/@cases.5/@statements.0/@statements.1/@init"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.6/@variable"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                </statements>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.5"/>
                </next>
                <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
              </condition>
            </cases>
            <cases xsi:type="statements:DefaultSwitchCase">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../lang/UnsupportedOperationException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="This method has not been "/>
                    <children xsi:type="references:StringReference" value="implemented for transferType "/>
                    <children xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </throwable>
              </statements>
            </cases>
            <variable xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
            </variable>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// Return a new color model</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences target="//@classifiers.0"/>
              </typeReference>
              <arguments xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.8"/>
              </arguments>
              <arguments xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
              </arguments>
              <arguments xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.1"/>
              <arguments xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.3"/>
              </arguments>
              <arguments xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
              </arguments>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="expressions:UnaryExpression">
          <operators xsi:type="operators:Negate"/>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences target="//@classifiers.0"/>
              </typeReference>
              <arguments xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.8"/>
              </arguments>
              <arguments xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.4"/>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.1"/>
              <arguments xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.3"/>
              </arguments>
              <arguments xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
              </arguments>
            </returnValue>
          </statements>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="isCompatibleRaster">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="raster">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Raster.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;      * Returns true if &lt;CODE>raster&lt;/CODE> is compatible with this &#xA;      * &lt;CODE>ColorModel&lt;/CODE>; false if it is not.&#xA;      *&#xA;      * @param raster The &lt;CODE>Raster&lt;/CODE> object to test for compatibility.&#xA;      *&#xA;      * @return &lt;CODE>true&lt;/CODE> if &lt;CODE>raster&lt;/CODE> is compatible with this &#xA;      * &lt;CODE>ColorModel&lt;/CODE>, &lt;CODE>false&lt;/CODE> if it is not.&#xA;      */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="sm">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="SampleModel.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.46"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="literals:BooleanLiteral"/>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="SampleModel.class.xmi#//@classifiers.0/@members.8"/>
                </next>
              </children>
              <children xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="ColorModel.class.xmi#//@classifiers.0/@members.35"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Return">
                    <returnValue xsi:type="literals:BooleanLiteral"/>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="SampleModel.class.xmi#//@classifiers.0/@members.44"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@statements.1/@statement/@statements.1/@init"/>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@statements.1/@statement/@statements.1/@init"/>
                    </arraySelectors>
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
                  </children>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@statements.1/@statement/@statements.1/@init"/>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference"/>
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.2"/>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@statements.1/@statement/@statements.1/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.44"/>
                  </next>
                </children>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
                </children>
              </expression>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="expressions:InstanceOfExpression">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="ComponentSampleModel.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@statements.0/@variable"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral"/>
          </statements>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="createCompatibleWritableRaster">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="WritableRaster.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="w">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="h">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Creates a &lt;CODE>WritableRaster&lt;/CODE> with the specified width and height, &#xA;     * that  has a data layout (&lt;CODE>SampleModel&lt;/CODE>) compatible with &#xA;     * this &lt;CODE>ColorModel&lt;/CODE>.  &#xA;     *&#xA;     * @param w The width of the &lt;CODE>WritableRaster&lt;/CODE> you want to create.&#xA;     * @param h The height of the &lt;CODE>WritableRaster&lt;/CODE> you want to create.&#xA;     *&#xA;     * @return A &lt;CODE>WritableRaster&lt;/CODE> that is compatible with &#xA;     * this &lt;CODE>ColorModel&lt;/CODE>.&#xA;     * @see WritableRaster&#xA;     * @see SampleModel&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="dataSize">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:MultiplicativeExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@parameters.0"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@parameters.1"/>
            <children xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
            </children>
            <multiplicativeOperators xsi:type="operators:Multiplication"/>
            <multiplicativeOperators xsi:type="operators:Multiplication"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="raster">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="WritableRaster.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.12"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@parameters.0"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@parameters.1"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                  </arguments>
                  <arguments xsi:type="literals:NullLiteral"/>
                </next>
                <target xsi:type="classifiers:Class" href="Raster.class.xmi#//@classifiers.0"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.1"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="sm">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="SampleModel.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.49">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@parameters.1"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="db">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.2/@cases.2/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="SampleModel.class.xmi#//@classifiers.0/@members.42"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.24"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.2/@cases.2/@statements.0/@variable"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.2/@cases.2/@statements.1/@variable"/>
                  <arguments xsi:type="literals:NullLiteral"/>
                </next>
                <target xsi:type="classifiers:Class" href="Raster.class.xmi#//@classifiers.0"/>
              </value>
            </expression>
          </statements>
        </cases>
        <variable xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="createCompatibleSampleModel">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="SampleModel.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="w">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="h">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Creates a &lt;CODE>SampleModel&lt;/CODE> with the specified width and height, &#xA;     * that  has a data layout compatible with this &lt;CODE>ColorModel&lt;/CODE>.  &#xA;     *&#xA;     * @param w The width of the &lt;CODE>SampleModel&lt;/CODE> you want to create.&#xA;     * @param h The height of the &lt;CODE>SampleModel&lt;/CODE> you want to create.&#xA;     *&#xA;     * @return A &lt;CODE>SampleModel&lt;/CODE> that is compatible with this&#xA;     * &lt;CODE>ColorModel&lt;/CODE>.&#xA;     *&#xA;     * @see SampleModel&#x9; &#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="bandOffsets">
          <typeReference xsi:type="types:Int"/>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="arrays:ArrayInstantiationBySize">
            <typeReference xsi:type="types:Int"/>
            <sizes xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
            </sizes>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@statements.0/@variable">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@statements.1/@init"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@statements.1/@init"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@statements.1/@init"/>
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@statements.1/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="PixelInterleavedSampleModel.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@parameters.0"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@parameters.1"/>
              <arguments xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
              </arguments>
              <arguments xsi:type="expressions:MultiplicativeExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@parameters.0"/>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                </children>
                <multiplicativeOperators xsi:type="operators:Multiplication"/>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@statements.0/@variable"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="DataBuffer.class.xmi#//@classifiers.0/@members.1"/>
            </next>
            <target xsi:type="classifiers:Class" href="DataBuffer.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="ComponentSampleModel.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@parameters.0"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@parameters.1"/>
              <arguments xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
              </arguments>
              <arguments xsi:type="expressions:MultiplicativeExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@parameters.0"/>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
                </children>
                <multiplicativeOperators xsi:type="operators:Multiplication"/>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@statements.0/@variable"/>
            </returnValue>
          </statements>
        </cases>
        <variable xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
        </variable>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="isCompatibleSampleModel">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="sm">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="SampleModel.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;     * Checks whether or not the specified &lt;CODE>SampleModel&lt;/CODE> &#xA;     * is compatible with this &lt;CODE>ColorModel&lt;/CODE>.&#xA;     *&#xA;     * @param sm The &lt;CODE>SampleModel&lt;/CODE> to test for compatibility.&#xA;     *&#xA;     * @return &lt;CODE>true&lt;/CODE> if the &lt;CODE>SampleModel&lt;/CODE> is &#xA;     * compatible with this &lt;CODE>ColorModel&lt;/CODE>, &lt;CODE>false&lt;/CODE> &#xA;     * if it is not.&#xA;     *&#xA;     * @see SampleModel &#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:UnaryExpression">
          <operators xsi:type="operators:Negate"/>
          <child xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:InstanceOfExpression">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="ComponentSampleModel.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@parameters.0"/>
            </expression>
          </child>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// Must have the same number of components</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.6"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="SampleModel.class.xmi#//@classifiers.0/@members.8"/>
            </next>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="SampleModel.class.xmi#//@classifiers.0/@members.11"/>
            </next>
          </children>
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ColorModel.class.xmi#//@classifiers.0/@members.12"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getAlphaRaster">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="WritableRaster.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="raster">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="WritableRaster.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns a &lt;CODE>Raster&lt;/CODE> representing the alpha channel of an image,&#xA;     * extracted from the input &lt;CODE>Raster&lt;/CODE>.&#xA;     * This method assumes that &lt;CODE>Raster&lt;/CODE> objects associated with &#xA;     * this &lt;CODE>ColorModel&lt;/CODE> store the alpha band, if present, as &#xA;     * the last band of image data. Returns null if there is no separate spatial &#xA;     * alpha channel associated with this &lt;CODE>ColorModel&lt;/CODE>.&#xA;     * This method creates a new &lt;CODE>Raster&lt;/CODE>, but will share the data&#xA;     * array.&#xA;     *&#xA;     * @param raster The &lt;CODE>WritableRaster&lt;/CODE> from which to extract the &#xA;     * alpha  channel.&#xA;     *&#xA;     * @return A &lt;CODE>WritableRaster&lt;/CODE> containing the image's alpha channel.&#xA;     *&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:NullLiteral"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="ColorModel.class.xmi#//@classifiers.0/@members.28"/>
          </children>
          <children xsi:type="literals:BooleanLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="x">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.38"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="y">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.39"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="band">
          <typeReference xsi:type="types:Int"/>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="arrays:ArrayInstantiationBySize">
            <typeReference xsi:type="types:Int"/>
            <sizes xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@statements.3/@variable">
            <arraySelectors>
              <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </arraySelectors>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.42"/>
              </next>
            </children>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="WritableRaster.class.xmi#//@classifiers.0/@members.5"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@statements.1/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@statements.2/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.40"/>
              </next>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Raster.class.xmi#//@classifiers.0/@members.41"/>
              </next>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@statements.1/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@statements.2/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@statements.3/@variable"/>
          </next>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="equals">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="obj">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Compares this color model with another for equality.  &#xA;     *&#xA;     * @param obj The object to compare with this color model.&#xA;     * @return &lt;CODE>true&lt;/CODE> if the color model objects are equal, &#xA;     * &lt;CODE>false&lt;/CODE> if they are not.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:UnaryExpression">
          <operators xsi:type="operators:Negate"/>
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="ColorModel.class.xmi#//@classifiers.0/@members.57"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52/@parameters.0"/>
            </next>
            <self xsi:type="literals:Super"/>
          </child>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../lang/Object.class.xmi#//@classifiers.0/@members.2"/>
            </next>
          </children>
          <children xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../lang/Object.class.xmi#//@classifiers.0/@members.2"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * A &lt;CODE>ColorModel&lt;/CODE> class that works with pixel values that &#xA; * represent color and alpha information as separate samples and that &#xA; * store each sample in a separate data element.  This class can be &#xA; * used with an arbitrary &lt;CODE>ColorSpace&lt;/CODE>.  The number of &#xA; * color samples in the pixel values must be same as the number of &#xA; * color components in the &lt;CODE>ColorSpace&lt;/CODE>. There may be a &#xA; * single alpha sample.  &#xA; * &lt;p>&#xA; * For those methods that use&#xA; * a primitive array pixel representation of type &lt;CODE>transferType&lt;/CODE>,&#xA; * the array length is the same as the number of color and alpha samples.&#xA; * Color samples are stored first in the array followed by the alpha&#xA; * sample, if present.  The order of the color samples is specified&#xA; * by the &lt;CODE>ColorSpace&lt;/CODE>.  Typically, this order reflects the &#xA; * name of the color space type. For example, for &lt;CODE>TYPE_RGB&lt;/CODE>, &#xA; * index 0 corresponds to red, index 1 to green, and index 2 to blue.  &#xA; * &lt;p>&#xA; * The translation from pixel sample values to color/alpha components for&#xA; * display or processing purposes is based on a one-to-one correspondence of&#xA; * samples to components.&#xA; * Depending on the transfer type used to create an instance of&#xA; * &lt;code>ComponentColorModel&lt;/code>, the pixel sample values&#xA; * represented by that instance may be signed or unsigned and may&#xA; * be of integral type or float or double (see below for details).&#xA; * The translation from sample values to normalized color/alpha components&#xA; * must follow certain rules.  For float and double samples, the translation&#xA; * is an identity, i.e. normalized component values are equal to the&#xA; * corresponding sample values.  For integral samples, the translation&#xA; * should be only a simple scale and offset, where the scale and offset&#xA; * constants may be different for each component.  The result of&#xA; * applying the scale and offset constants is a set of color/alpha&#xA; * component values, which are guaranteed to fall within a certain&#xA; * range.  Typically, the range for a color component will be the range&#xA; * defined by the &lt;code>getMinValue&lt;/code> and &lt;code>getMaxValue&lt;/code>&#xA; * methods of the &lt;code>ColorSpace&lt;/code> class.  The range for an&#xA; * alpha component should be 0.0 to 1.0.&#xA; * &lt;p>&#xA; * Instances of &lt;code>ComponentColorModel&lt;/code> created with transfer types&#xA; * &lt;CODE>DataBuffer.TYPE_BYTE&lt;/CODE>, &lt;CODE>DataBuffer.TYPE_USHORT&lt;/CODE>,&#xA; * and &lt;CODE>DataBuffer.TYPE_INT&lt;/CODE> have pixel sample values which&#xA; * are treated as unsigned integral values.&#xA; * The number of bits in a color or alpha sample of a pixel value might not&#xA; * be the same as the number of bits for the corresponding color or alpha&#xA; * sample passed to the&#xA; * &lt;code>ComponentColorModel(ColorSpace, int[], boolean, boolean, int, int)&lt;/code>&#xA; * constructor.  In&#xA; * that case, this class assumes that the least significant n bits of a sample&#xA; * value hold the component value, where n is the number of significant bits &#xA; * for the component passed to the constructor.  It also assumes that &#xA; * any higher-order bits in a sample value are zero.  Thus, sample values&#xA; * range from 0 to 2&lt;sup>n&lt;/sup> - 1.  This class maps these sample values&#xA; * to normalized color component values such that 0 maps to the value&#xA; * obtained from the &lt;code>ColorSpace's&lt;/code> &lt;code>getMinValue&lt;/code>&#xA; * method for each component and 2&lt;sup>n&lt;/sup> - 1 maps to the value&#xA; * obtained from &lt;code>getMaxValue&lt;/code>.  To create a&#xA; * &lt;code>ComponentColorModel&lt;/code> with a different color sample mapping&#xA; * requires subclassing this class and overriding the&#xA; * &lt;code>getNormalizedComponents(Object, float[], int)&lt;/code> method.&#xA; * The mapping for an alpha sample always maps 0 to 0.0 and&#xA; * 2&lt;sup>n&lt;/sup> - 1 to 1.0.&#xA; * &lt;p>&#xA; * For instances with unsigned sample values,&#xA; * the unnormalized color/alpha component representation is only&#xA; * supported if two conditions hold.  First, sample value value 0 must&#xA; * map to normalized component value 0.0 and sample value 2&lt;sup>n&lt;/sup> - 1&#xA; * to 1.0.  Second the min/max range of all color components of the&#xA; * &lt;code>ColorSpace&lt;/code> must be 0.0 to 1.0.  In this case, the&#xA; * component representation is the n least&#xA; * significant bits of the corresponding sample.  Thus each component is&#xA; * an unsigned integral value between 0 and 2&lt;sup>n&lt;/sup> - 1, where&#xA; * n is the number of significant bits for a particular component.&#xA; * If these conditions are not met, any method taking an unnormalized&#xA; * component argument will throw an &lt;code>IllegalArgumentException&lt;/code>.&#xA; * &lt;p>&#xA; * Instances of &lt;code>ComponentColorModel&lt;/code> created with transfer types&#xA; * &lt;CODE>DataBuffer.TYPE_SHORT&lt;/CODE>, &lt;CODE>DataBuffer.TYPE_FLOAT&lt;/CODE>, and&#xA; * &lt;CODE>DataBuffer.TYPE_DOUBLE&lt;/CODE> have pixel sample values which&#xA; * are treated as signed short, float, or double values.&#xA; * Such instances do not support the unnormalized color/alpha component&#xA; * representation, so any methods taking such a representation as an argument&#xA; * will throw an &lt;code>IllegalArgumentException&lt;/code> when called on one&#xA; * of these instances.  The normalized component values of instances&#xA; * of this class have a range which depends on the transfer&#xA; * type as follows: for float samples, the full range of the float data&#xA; * type; for double samples, the full range of the float data type&#xA; * (resulting from casting double to float); for short samples,&#xA; * from approximately -maxVal to +maxVal, where maxVal is the per&#xA; * component maximum value for the &lt;code>ColorSpace&lt;/code>&#xA; * (-32767 maps to -maxVal, 0 maps to 0.0, and 32767 maps&#xA; * to +maxVal).  A subclass may override the scaling for short sample&#xA; * values to normalized component values by overriding the&#xA; * &lt;code>getNormalizedComponents(Object, float[], int)&lt;/code> method.&#xA; * For float and double samples, the normalized component values are&#xA; * taken to be equal to the corresponding sample values, and subclasses&#xA; * should not attempt to add any non-identity scaling for these transfer&#xA; * types.&#xA; * &lt;p>&#xA; * Instances of &lt;code>ComponentColorModel&lt;/code> created with transfer types&#xA; * &lt;CODE>DataBuffer.TYPE_SHORT&lt;/CODE>, &lt;CODE>DataBuffer.TYPE_FLOAT&lt;/CODE>, and&#xA; * &lt;CODE>DataBuffer.TYPE_DOUBLE&lt;/CODE>&#xA; * use all the bits of all sample values.  Thus all color/alpha components&#xA; * have 16 bits when using &lt;CODE>DataBuffer.TYPE_SHORT&lt;/CODE>, 32 bits when&#xA; * using &lt;CODE>DataBuffer.TYPE_FLOAT&lt;/CODE>, and 64 bits when using&#xA; * &lt;CODE>DataBuffer.TYPE_DOUBLE&lt;/CODE>.  When the&#xA; * &lt;code>ComponentColorModel(ColorSpace, int[], boolean, boolean, int, int)&lt;/code>&#xA; * form of constructor is used with one of these transfer types, the&#xA; * bits array argument is ignored.&#xA; * &lt;p>&#xA; * It is possible to have color/alpha sample values&#xA; * which cannot be reasonably interpreted as component values for rendering.&#xA; * This can happen when &lt;code>ComponentColorModel&lt;/code> is subclassed to&#xA; * override the mapping of unsigned sample values to normalized color&#xA; * component values or when signed sample values outside a certain range&#xA; * are used.  (As an example, specifying an alpha component as a signed&#xA; * short value outside the range 0 to 32767, normalized range 0.0 to 1.0, can&#xA; * lead to unexpected results.) It is the&#xA; * responsibility of applications to appropriately scale pixel data before&#xA; * rendering such that color components fall within the normalized range&#xA; * of the &lt;code>ColorSpace&lt;/code> (obtained using the &lt;code>getMinValue&lt;/code>&#xA; * and &lt;code>getMaxValue&lt;/code> methods of the &lt;code>ColorSpace&lt;/code> class)&#xA; * and the alpha component is between 0.0 and 1.0.  If color or alpha&#xA; * component values fall outside these ranges, rendering results are&#xA; * indeterminate.&#xA; * &lt;p>&#xA; * Methods that use a single int pixel representation throw&#xA; * an &lt;CODE>IllegalArgumentException&lt;/CODE>, unless the number of components &#xA; * for the &lt;CODE>ComponentColorModel&lt;/CODE> is one and the component&#xA; * value is unsigned -- in other words,  a single color component using&#xA; * a transfer type of &lt;CODE>DataBuffer.TYPE_BYTE&lt;/CODE>,&#xA; * &lt;CODE>DataBuffer.TYPE_USHORT&lt;/CODE>, or &lt;CODE>DataBuffer.TYPE_INT&lt;/CODE> &#xA; * and no alpha.&#xA; * &lt;p>&#xA; * A &lt;CODE>ComponentColorModel&lt;/CODE> can be used in conjunction with a &#xA; * &lt;CODE>ComponentSampleModel&lt;/CODE>, a &lt;CODE>BandedSampleModel&lt;/CODE>, &#xA; * or a &lt;CODE>PixelInterleavedSampleModel&lt;/CODE> to construct a&#xA; * &lt;CODE>BufferedImage&lt;/CODE>.&#xA; *&#xA; * @see ColorModel&#xA; * @see ColorSpace&#xA; * @see ComponentSampleModel&#xA; * @see BandedSampleModel&#xA; * @see PixelInterleavedSampleModel&#xA; * @see BufferedImage&#xA; *&#xA; * @version 10 Feb 1997&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="ColorModel.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
