<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xmlns:variables="http://www.emftext.org/java/variables" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/expressions ../../java.ecore#/5 http://www.emftext.org/java/imports ../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../java.ecore#/8 http://www.emftext.org/java/literals ../../java.ecore#/9 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/operators ../../java.ecore#/12 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/references ../../java.ecore#/14 http://www.emftext.org/java/statements ../../java.ecore#/15 http://www.emftext.org/java/types ../../java.ecore#/16 http://www.emftext.org/java/variables ../../java.ecore#/17" name="FlowLayout.java">
  <comments>/*&#xA; * @(#)FlowLayout.java&#x9;1.52 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>awt</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../io/ObjectInputStream.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../io/IOException.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="FlowLayout">
    <members xsi:type="members:Field" name="LEFT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * This value indicates that each row of components&#xA;     * should be left-justified.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="CENTER">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * This value indicates that each row of components&#xA;     * should be centered.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="RIGHT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * This value indicates that each row of components&#xA;     * should be right-justified.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="LEADING">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * This value indicates that each row of components&#xA;     * should be justified to the leading edge of the container's&#xA;     * orientation, for example, to the left in left-to-right orientations.&#xA;     *&#xA;     * @see     java.awt.Component#getComponentOrientation&#xA;     * @see     java.awt.ComponentOrientation&#xA;     * @since   1.2&#xA;     * Package-private pending API change approval&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="TRAILING">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * This value indicates that each row of components&#xA;     * should be justified to the trailing edge of the container's&#xA;     * orientation, for example, to the right in left-to-right orientations.&#xA;     *&#xA;     * @see     java.awt.Component#getComponentOrientation&#xA;     * @see     java.awt.ComponentOrientation&#xA;     * @since   1.2&#xA;     * Package-private pending API change approval&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="align">
      <typeReference xsi:type="types:Int">
        <comments>/**&#xA;     * &lt;code>align&lt;/code> is the property that determines&#xA;     * how each row distributes empty space.&#xA;     * It can be one of the following values:&#xA;     * &lt;ul>&#xA;     * &lt;code>LEFT&lt;/code>&#xA;     * &lt;code>RIGHT&lt;/code>&#xA;     * &lt;code>CENTER&lt;/code>&#xA;     * &lt;code>LEADING&lt;/code>&#xA;     * &lt;code>TRAILING&lt;/code>&#xA;     * &lt;/ul>&#xA;     *&#xA;     * @serial&#xA;     * @see #getAlignment&#xA;     * @see #setAlignment&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="newAlign">
      <typeReference xsi:type="types:Int">
        <comments>// This is for 1.1 serialization compatibility</comments>
        <comments>/**&#xA;     * &lt;code>newAlign&lt;/code> is the property that determines&#xA;     * how each row distributes empty space for the Java 2 platform,&#xA;     * v1.2 and greater.&#xA;     * It can be one of the following three values:&#xA;     * &lt;ul>&#xA;     * &lt;code>LEFT&lt;/code>&#xA;     * &lt;code>RIGHT&lt;/code>&#xA;     * &lt;code>CENTER&lt;/code>&#xA;     * &lt;code>LEADING&lt;/code>&#xA;     * &lt;code>TRAILING&lt;/code>&#xA;     * &lt;/ul>&#xA;     *&#xA;     * @serial&#xA;     * @since 1.2&#xA;     * @see #getAlignment&#xA;     * @see #setAlignment&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="hgap">
      <typeReference xsi:type="types:Int">
        <comments>// This is the one we actually use</comments>
        <comments>/**&#xA;     * The flow layout manager allows a seperation of&#xA;     * components with gaps.  The horizontal gap will&#xA;     * specify the space between components and between&#xA;     * the components and the borders of the&#xA;     * &lt;code>Container&lt;/code>.&#xA;     *&#xA;     * @serial&#xA;     * @see #getHgap()&#xA;     * @see #setHgap(int)&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="vgap">
      <typeReference xsi:type="types:Int">
        <comments>/**&#xA;     * The flow layout manager allows a seperation of&#xA;     * components with gaps.  The vertical gap will&#xA;     * specify the space between rows and between the&#xA;     * the rows and the borders of the &lt;code>Container&lt;/code>.&#xA;     *&#xA;     * @serial&#xA;     * @see #getHgap()&#xA;     * @see #setHgap(int)&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="serialVersionUID">
      <initialValue xsi:type="expressions:UnaryExpression">
        <operators xsi:type="operators:Subtraction"/>
        <child xsi:type="literals:DecimalLongLiteral" decimalValue="7262534875583282631"/>
      </initialValue>
      <typeReference xsi:type="types:Long"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/*&#xA;     * JDK 1.1 serialVersionUID&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Constructor" name="FlowLayout">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
          <callTarget xsi:type="literals:This"/>
        </expression>
      </statements>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constructs a new &lt;code>FlowLayout&lt;/code> with a centered alignment and a&#xA;     * default 5-unit horizontal and vertical gap.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="FlowLayout">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.0"/>
          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
          <callTarget xsi:type="literals:This"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="align">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constructs a new &lt;code>FlowLayout&lt;/code> with the specified&#xA;     * alignment and a default 5-unit horizontal and vertical gap.&#xA;     * The value of the alignment argument must be one of&#xA;     * &lt;code>FlowLayout.LEFT&lt;/code>, &lt;code>FlowLayout.RIGHT&lt;/code>,&#xA;     * &lt;code>FlowLayout.CENTER&lt;/code>, &lt;code>FlowLayout.LEADING&lt;/code>,&#xA;     * or &lt;code>FlowLayout.TRAILING&lt;/code>.&#xA;     * @param align the alignment value&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="FlowLayout">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.1"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.2"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.14">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.0"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="align">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="hgap">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="vgap">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Creates a new flow layout manager with the indicated alignment&#xA;     * and the indicated horizontal and vertical gaps.&#xA;     * &lt;p>&#xA;     * The value of the alignment argument must be one of&#xA;     * &lt;code>FlowLayout.LEFT&lt;/code>, &lt;code>FlowLayout.RIGHT&lt;/code>,&#xA;     * &lt;code>FlowLayout.CENTER&lt;/code>, &lt;code>FlowLayout.LEADING&lt;/code>,&#xA;     * or &lt;code>FlowLayout.TRAILING&lt;/code>.&#xA;     * @param      align   the alignment value&#xA;     * @param      hgap    the horizontal gap between components&#xA;     *                     and between the components and the &#xA;     *                     borders of the &lt;code>Container&lt;/code>&#xA;     * @param      vgap    the vertical gap between components&#xA;     *                     and between the components and the &#xA;     *                     borders of the &lt;code>Container&lt;/code>&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="getAlignment">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Gets the alignment for this layout.&#xA;     * Possible values are &lt;code>FlowLayout.LEFT&lt;/code>,&#xA;     * &lt;code>FlowLayout.RIGHT&lt;/code>, &lt;code>FlowLayout.CENTER&lt;/code>,&#xA;     * &lt;code>FlowLayout.LEADING&lt;/code>,&#xA;     * or &lt;code>FlowLayout.TRAILING&lt;/code>.&#xA;     * @return     the alignment value for this layout&#xA;     * @see        java.awt.FlowLayout#setAlignment&#xA;     * @since      JDK1.1&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setAlignment">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="align">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Sets the alignment for this layout.&#xA;     * Possible values are&#xA;     * &lt;ul>&#xA;     * &lt;li>&lt;code>FlowLayout.LEFT&lt;/code>&#xA;     * &lt;li>&lt;code>FlowLayout.RIGHT&lt;/code>&#xA;     * &lt;li>&lt;code>FlowLayout.CENTER&lt;/code>&#xA;     * &lt;li>&lt;code>FlowLayout.LEADING&lt;/code>&#xA;     * &lt;li>&lt;code>FlowLayout.TRAILING&lt;/code>&#xA;     * &lt;/ul>&#xA;     * @param      align one of the alignment values shown above&#xA;     * @see        #getAlignment()&#xA;     * @since      JDK1.1&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Switch">
        <comments>// this.align is used only for serialization compatibility,</comments>
        <comments>// so set it to a value compatible with the 1.1 version</comments>
        <comments>// of the class</comments>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
                <self xsi:type="literals:This"/>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
                <self xsi:type="literals:This"/>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
                <self xsi:type="literals:This"/>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getHgap">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Gets the horizontal gap between components&#xA;     * and between the components and the borders&#xA;     * of the &lt;code>Container&lt;/code>&#xA;     *&#xA;     * @return     the horizontal gap between components&#xA;     *             and between the components and the borders&#xA;     *             of the &lt;code>Container&lt;/code>&#xA;     * @see        java.awt.FlowLayout#setHgap&#xA;     * @since      JDK1.1&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setHgap">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="hgap">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Sets the horizontal gap between components and&#xA;     * between the components and the borders of the&#xA;     * &lt;code>Container&lt;/code>.&#xA;     *&#xA;     * @param hgap the horizontal gap between components&#xA;     *             and between the components and the borders&#xA;     *             of the &lt;code>Container&lt;/code>&#xA;     * @see        java.awt.FlowLayout#getHgap&#xA;     * @since      JDK1.1&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getVgap">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Gets the vertical gap between components and&#xA;     * between the components and the borders of the&#xA;     * &lt;code>Container&lt;/code>.&#xA;     *&#xA;     * @return     the vertical gap between components&#xA;     *             and between the components and the borders&#xA;     *             of the &lt;code>Container&lt;/code>&#xA;     * @see        java.awt.FlowLayout#setVgap&#xA;     * @since      JDK1.1&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setVgap">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="vgap">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Sets the vertical gap between components and between&#xA;     * the components and the borders of the &lt;code>Container&lt;/code>.&#xA;     *&#xA;     * @param vgap the vertical gap between components&#xA;     *             and between the components and the borders&#xA;     *             of the &lt;code>Container&lt;/code>&#xA;     * @see        java.awt.FlowLayout#getVgap&#xA;     * @since      JDK1.1&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="addLayoutComponent">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="comp">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Component.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Adds the specified component to the layout.&#xA;     * Not used by this class.&#xA;     * @param name the name of the component&#xA;     * @param comp the component to be added&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="removeLayoutComponent">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="comp">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Component.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Removes the specified component from the layout.&#xA;     * Not used by this class.&#xA;     * @param comp the component to remove&#xA;     * @see       java.awt.Container#removeAll&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="preferredLayoutSize">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Dimension.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="target">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Container.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the preferred dimensions for this layout given the &#xA;     * &lt;i>visible&lt;/i> components in the specified target container.&#xA;     *&#xA;     * @param target the container that needs to be laid out&#xA;     * @return    the preferred dimensions to lay out the&#xA;     *            subcomponents of the specified container&#xA;     * @see Container&#xA;     * @see #minimumLayoutSize&#xA;     * @see       java.awt.Container#getPreferredSize&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:SynchronizedBlock">
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="dim">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="Dimension.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="Dimension.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="nmembers">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Container.class.xmi#//@classifiers.0/@members.25"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="firstVisibleComponent">
            <typeReference xsi:type="types:Boolean"/>
            <initialValue xsi:type="literals:BooleanLiteral" value="true"/>
          </variable>
        </statements>
        <statements xsi:type="statements:ForLoop">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="m">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="Component.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Container.class.xmi#//@classifiers.0/@members.27"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@statements.3/@init"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="d">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="Dimension.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@statements.3/@statement/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="Component.class.xmi#//@classifiers.0/@members.177"/>
                      </next>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@statements.0/@variable">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="Dimension.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../lang/Math.class.xmi#//@classifiers.0/@members.33"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@statements.0/@variable">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="Dimension.class.xmi#//@classifiers.0/@members.1"/>
                          </next>
                        </arguments>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@statements.3/@statement/@statements.1/@statement/@statements.0/@variable">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="Dimension.class.xmi#//@classifiers.0/@members.1"/>
                          </next>
                        </arguments>
                      </next>
                      <target xsi:type="classifiers:Class" href="../lang/Math.class.xmi#//@classifiers.0"/>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@statements.2/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="literals:BooleanLiteral"/>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@statements.2/@variable"/>
                  <elseStatement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@statements.0/@variable">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="Dimension.class.xmi#//@classifiers.0/@members.0"/>
                          </next>
                        </child>
                        <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                      </expression>
                    </statements>
                  </elseStatement>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@statements.0/@variable">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="Dimension.class.xmi#//@classifiers.0/@members.0"/>
                      </next>
                    </child>
                    <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@statements.3/@statement/@statements.1/@statement/@statements.0/@variable">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="Dimension.class.xmi#//@classifiers.0/@members.0"/>
                      </next>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@statements.3/@statement/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Component.class.xmi#//@classifiers.0/@members.18"/>
                </next>
              </condition>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@statements.3/@init"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@statements.1/@variable"/>
            <relationOperators xsi:type="operators:LessThan"/>
          </condition>
          <init xsi:type="variables:LocalVariable" name="i">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </init>
          <updates xsi:type="expressions:SuffixUnaryModificationExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@statements.3/@init"/>
            <operator xsi:type="operators:PlusPlus"/>
          </updates>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="insets">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="Insets.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Container.class.xmi#//@classifiers.0/@members.30"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@statements.0/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="Dimension.class.xmi#//@classifiers.0/@members.0"/>
              </next>
            </child>
            <assignmentOperator xsi:type="operators:AssignmentPlus"/>
            <value xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@statements.4/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Insets.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@statements.4/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Insets.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </children>
              <children xsi:type="expressions:MultiplicativeExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                <multiplicativeOperators xsi:type="operators:Multiplication"/>
              </children>
              <additiveOperators xsi:type="operators:Addition"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@statements.0/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="Dimension.class.xmi#//@classifiers.0/@members.1"/>
              </next>
            </child>
            <assignmentOperator xsi:type="operators:AssignmentPlus"/>
            <value xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@statements.4/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Insets.class.xmi#//@classifiers.0/@members.0"/>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@statements.4/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Insets.class.xmi#//@classifiers.0/@members.2"/>
                </next>
              </children>
              <children xsi:type="expressions:MultiplicativeExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                <multiplicativeOperators xsi:type="operators:Multiplication"/>
              </children>
              <additiveOperators xsi:type="operators:Addition"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@statements.0/@variable"/>
        </statements>
        <lockProvider xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="Component.class.xmi#//@classifiers.0/@members.105"/>
          </next>
        </lockProvider>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="minimumLayoutSize">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Dimension.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="target">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Container.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the minimum dimensions needed to layout the &lt;i>visible&lt;/i>&#xA;     * components contained in the specified target container.&#xA;     * @param target the container that needs to be laid out&#xA;     * @return    the minimum dimensions to lay out the&#xA;     *            subcomponents of the specified container&#xA;     * @see #preferredLayoutSize&#xA;     * @see       java.awt.Container&#xA;     * @see       java.awt.Container#doLayout&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:SynchronizedBlock">
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="dim">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="Dimension.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="Dimension.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="nmembers">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Container.class.xmi#//@classifiers.0/@members.25"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ForLoop">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="m">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="Component.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Container.class.xmi#//@classifiers.0/@members.27"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@statements.2/@init"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="d">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="Dimension.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@statements.2/@statement/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="Component.class.xmi#//@classifiers.0/@members.181"/>
                      </next>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@statements.0/@variable">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="Dimension.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../lang/Math.class.xmi#//@classifiers.0/@members.33"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@statements.0/@variable">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="Dimension.class.xmi#//@classifiers.0/@members.1"/>
                          </next>
                        </arguments>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.0/@variable">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="Dimension.class.xmi#//@classifiers.0/@members.1"/>
                          </next>
                        </arguments>
                      </next>
                      <target xsi:type="classifiers:Class" href="../lang/Math.class.xmi#//@classifiers.0"/>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@statements.0/@variable">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="Dimension.class.xmi#//@classifiers.0/@members.0"/>
                          </next>
                        </child>
                        <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@statements.2/@init"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <relationOperators xsi:type="operators:GreaterThan"/>
                  </condition>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@statements.0/@variable">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="Dimension.class.xmi#//@classifiers.0/@members.0"/>
                      </next>
                    </child>
                    <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@statements.2/@statement/@statements.1/@statement/@statements.0/@variable">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="Dimension.class.xmi#//@classifiers.0/@members.0"/>
                      </next>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@statements.2/@statement/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Component.class.xmi#//@classifiers.0/@members.18"/>
                </next>
              </condition>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@statements.2/@init"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@statements.1/@variable"/>
            <relationOperators xsi:type="operators:LessThan"/>
          </condition>
          <init xsi:type="variables:LocalVariable" name="i">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </init>
          <updates xsi:type="expressions:SuffixUnaryModificationExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@statements.2/@init"/>
            <operator xsi:type="operators:PlusPlus"/>
          </updates>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="insets">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="Insets.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Container.class.xmi#//@classifiers.0/@members.30"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@statements.0/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="Dimension.class.xmi#//@classifiers.0/@members.0"/>
              </next>
            </child>
            <assignmentOperator xsi:type="operators:AssignmentPlus"/>
            <value xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@statements.3/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Insets.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@statements.3/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Insets.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </children>
              <children xsi:type="expressions:MultiplicativeExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                <multiplicativeOperators xsi:type="operators:Multiplication"/>
              </children>
              <additiveOperators xsi:type="operators:Addition"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@statements.0/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="Dimension.class.xmi#//@classifiers.0/@members.1"/>
              </next>
            </child>
            <assignmentOperator xsi:type="operators:AssignmentPlus"/>
            <value xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@statements.3/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Insets.class.xmi#//@classifiers.0/@members.0"/>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@statements.3/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Insets.class.xmi#//@classifiers.0/@members.2"/>
                </next>
              </children>
              <children xsi:type="expressions:MultiplicativeExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                <multiplicativeOperators xsi:type="operators:Multiplication"/>
              </children>
              <additiveOperators xsi:type="operators:Addition"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@statements.0/@variable"/>
        </statements>
        <lockProvider xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="Component.class.xmi#//@classifiers.0/@members.105"/>
          </next>
        </lockProvider>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="moveComponents">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="target">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Container.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="y">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="width">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="height">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="rowStart">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="rowEnd">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="ltr">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Centers the elements in the specified row, if there is any slack.&#xA;     * @param target the component which needs to be moved&#xA;     * @param x the x coordinate&#xA;     * @param y the y coordinate&#xA;     * @param width the width dimensions&#xA;     * @param height the height dimensions&#xA;     * @param rowStart the beginning of the row&#xA;     * @param rowEnd the the ending of the row&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:SynchronizedBlock">
        <statements xsi:type="statements:Switch">
          <cases xsi:type="statements:NormalSwitchCase">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.1"/>
                <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                <value xsi:type="expressions:ConditionalExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.7"/>
                  <expressionIf xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.3"/>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:Break"/>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          </cases>
          <cases xsi:type="statements:NormalSwitchCase">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.1"/>
                <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                <value xsi:type="expressions:MultiplicativeExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.3"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                  <multiplicativeOperators xsi:type="operators:Division"/>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:Break"/>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
          </cases>
          <cases xsi:type="statements:NormalSwitchCase">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.1"/>
                <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                <value xsi:type="expressions:ConditionalExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.7"/>
                  <expressionIf xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.3"/>
                  <expressionElse xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:Break"/>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
          </cases>
          <cases xsi:type="statements:NormalSwitchCase">
            <statements xsi:type="statements:Break"/>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
          </cases>
          <cases xsi:type="statements:NormalSwitchCase">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.1"/>
                <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.3"/>
              </expression>
            </statements>
            <statements xsi:type="statements:Break"/>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
          </cases>
          <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
        </statements>
        <statements xsi:type="statements:ForLoop">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="m">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="Component.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Container.class.xmi#//@classifiers.0/@members.27"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.0/@statements.1/@init"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.0/@statements.1/@statement/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="Component.class.xmi#//@classifiers.0/@members.149"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.1"/>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.2"/>
                            <children xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:AdditiveExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.4"/>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.0/@statements.1/@statement/@statements.0/@variable">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="Component.class.xmi#//@classifiers.0/@members.8"/>
                                    </next>
                                  </children>
                                  <additiveOperators xsi:type="operators:Subtraction"/>
                                </expression>
                              </children>
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                              <multiplicativeOperators xsi:type="operators:Division"/>
                            </children>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                        </next>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.7"/>
                  <elseStatement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.0/@statements.1/@statement/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="Component.class.xmi#//@classifiers.0/@members.149"/>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.0">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="Component.class.xmi#//@classifiers.0/@members.7"/>
                              </next>
                            </children>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.1"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.0/@statements.1/@statement/@statements.0/@variable">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="Component.class.xmi#//@classifiers.0/@members.7"/>
                              </next>
                            </children>
                            <additiveOperators xsi:type="operators:Subtraction"/>
                            <additiveOperators xsi:type="operators:Subtraction"/>
                          </arguments>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.2"/>
                            <children xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:AdditiveExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.4"/>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.0/@statements.1/@statement/@statements.0/@variable">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="Component.class.xmi#//@classifiers.0/@members.8"/>
                                    </next>
                                  </children>
                                  <additiveOperators xsi:type="operators:Subtraction"/>
                                </expression>
                              </children>
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                              <multiplicativeOperators xsi:type="operators:Division"/>
                            </children>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                        </next>
                      </expression>
                    </statements>
                  </elseStatement>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.1"/>
                    <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                    <value xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.0/@statements.1/@statement/@statements.0/@variable">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="Component.class.xmi#//@classifiers.0/@members.7"/>
                        </next>
                      </children>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.0/@statements.1/@statement/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Component.class.xmi#//@classifiers.0/@members.18"/>
                </next>
              </condition>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.0/@statements.1/@init"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.6"/>
            <relationOperators xsi:type="operators:LessThan"/>
          </condition>
          <init xsi:type="variables:LocalVariable" name="i">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.5"/>
          </init>
          <updates xsi:type="expressions:SuffixUnaryModificationExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.0/@statements.1/@init"/>
            <operator xsi:type="operators:PlusPlus"/>
          </updates>
        </statements>
        <lockProvider xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="Component.class.xmi#//@classifiers.0/@members.105"/>
          </next>
        </lockProvider>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="layoutContainer">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="target">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Container.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Lays out the container. This method lets each &#xA;     * &lt;i>visible&lt;/i> component take&#xA;     * its preferred size by reshaping the components in the&#xA;     * target container in order to satisfy the alignment of&#xA;     * this &lt;code>FlowLayout&lt;/code> object.&#xA;     *&#xA;     * @param target the specified component being laid out&#xA;     * @see Container&#xA;     * @see       java.awt.Container#doLayout&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:SynchronizedBlock">
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="insets">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="Insets.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Container.class.xmi#//@classifiers.0/@members.30"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="maxwidth">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Component.class.xmi#//@classifiers.0/@members.7"/>
                </next>
              </children>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.0/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="Insets.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.0/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="Insets.class.xmi#//@classifiers.0/@members.3"/>
                    </next>
                  </children>
                  <children xsi:type="expressions:MultiplicativeExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                    <multiplicativeOperators xsi:type="operators:Multiplication"/>
                  </children>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </expression>
              </children>
              <additiveOperators xsi:type="operators:Subtraction"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="nmembers">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Container.class.xmi#//@classifiers.0/@members.25"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="x">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <additionalLocalVariables name="y">
              <initialValue xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.0/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Insets.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValue>
            </additionalLocalVariables>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="rowh">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <additionalLocalVariables name="start">
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </additionalLocalVariables>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="ltr">
            <typeReference xsi:type="types:Boolean"/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="ComponentOrientation.class.xmi#//@classifiers.0/@members.8"/>
                </next>
                <target xsi:type="members:ClassMethod" href="Component.class.xmi#//@classifiers.0/@members.360"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ForLoop">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="m">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="Component.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Container.class.xmi#//@classifiers.0/@members.27"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.6/@init"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="d">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="Dimension.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.6/@statement/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="Component.class.xmi#//@classifiers.0/@members.177"/>
                      </next>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.6/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="Component.class.xmi#//@classifiers.0/@members.154"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.6/@statement/@statements.1/@statement/@statements.0/@variable">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="Dimension.class.xmi#//@classifiers.0/@members.0"/>
                        </next>
                      </arguments>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.6/@statement/@statements.1/@statement/@statements.0/@variable">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="Dimension.class.xmi#//@classifiers.0/@members.1"/>
                        </next>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.3/@variable"/>
                            <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.3/@variable"/>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <relationOperators xsi:type="operators:GreaterThan"/>
                      </condition>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.3/@variable"/>
                        <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.6/@statement/@statements.1/@statement/@statements.0/@variable">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="Dimension.class.xmi#//@classifiers.0/@members.0"/>
                          </next>
                        </value>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.4/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../lang/Math.class.xmi#//@classifiers.0/@members.33"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.4/@variable"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.6/@statement/@statements.1/@statement/@statements.0/@variable">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="Dimension.class.xmi#//@classifiers.0/@members.1"/>
                              </next>
                            </arguments>
                          </next>
                          <target xsi:type="classifiers:Class" href="../lang/Math.class.xmi#//@classifiers.0"/>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:ConditionalOrExpression">
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:Equal"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.3/@variable"/>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </expression>
                    </children>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:RelationExpression">
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.3/@variable"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.6/@statement/@statements.1/@statement/@statements.0/@variable">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="Dimension.class.xmi#//@classifiers.0/@members.0"/>
                              </next>
                            </children>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </expression>
                        </children>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.1/@variable"/>
                        <relationOperators xsi:type="operators:LessThanOrEqual"/>
                      </expression>
                    </children>
                  </condition>
                  <elseStatement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.23">
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0"/>
                        <arguments xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.0/@variable">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="Insets.class.xmi#//@classifiers.0/@members.1"/>
                            </next>
                          </children>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                        </arguments>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.3/@variable/@additionalLocalVariables.0"/>
                        <arguments xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.1/@variable"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.3/@variable"/>
                          <additiveOperators xsi:type="operators:Subtraction"/>
                        </arguments>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.4/@variable"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.4/@variable/@additionalLocalVariables.0"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.6/@init"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.5/@variable"/>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.3/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.6/@statement/@statements.1/@statement/@statements.0/@variable">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="Dimension.class.xmi#//@classifiers.0/@members.0"/>
                          </next>
                        </value>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.3/@variable/@additionalLocalVariables.0"/>
                        <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                        <value xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.4/@variable"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                        </value>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.4/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.6/@statement/@statements.1/@statement/@statements.0/@variable">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="Dimension.class.xmi#//@classifiers.0/@members.1"/>
                          </next>
                        </value>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.4/@variable/@additionalLocalVariables.0"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.6/@init"/>
                      </expression>
                    </statements>
                  </elseStatement>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.6/@statement/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Component.class.xmi#//@classifiers.0/@members.18"/>
                </next>
              </condition>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.6/@init"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.2/@variable"/>
            <relationOperators xsi:type="operators:LessThan"/>
          </condition>
          <init xsi:type="variables:LocalVariable" name="i">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </init>
          <updates xsi:type="expressions:SuffixUnaryModificationExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.6/@init"/>
            <operator xsi:type="operators:PlusPlus"/>
          </updates>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.23">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Insets.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.3/@variable/@additionalLocalVariables.0"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.1/@variable"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.3/@variable"/>
              <additiveOperators xsi:type="operators:Subtraction"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.4/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.4/@variable/@additionalLocalVariables.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.2/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statements.5/@variable"/>
          </expression>
        </statements>
        <lockProvider xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="Component.class.xmi#//@classifiers.0/@members.105"/>
          </next>
        </lockProvider>
      </statements>
    </members>
    <members xsi:type="members:Field" name="currentSerialVersion">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>//</comments>
        <comments>// the internal serial version which says which version was written</comments>
        <comments>// - 0 (default) for versions before the Java 2 platform, v1.2</comments>
        <comments>// - 1 for version >= Java 2 platform v1.2, which includes &quot;newAlign&quot; field</comments>
        <comments>//</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="serialVersionOnStream">
      <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * This represent the &lt;code>currentSerialVersion&lt;/code>&#xA;     * which is bein used.  It will be one of two values :&#xA;     * &lt;code>0&lt;/code> versions before Java 2 platform v1.2..&#xA;     * &lt;code>1&lt;/code> versions after  Java 2 platform v1.2..&#xA;     *&#xA;     * @serial&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="readObject">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="stream">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../io/ObjectInputStream.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../lang/ClassNotFoundException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Reads this object out of a serialization stream, handling&#xA;     * objects written by older versions of the class that didn't contain all&#xA;     * of the fields we use now..&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../io/ObjectInputStream.class.xmi#//@classifiers.0/@members.19"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.14">
              <comments>// &quot;newAlign&quot; field wasn't present, so use the old &quot;align&quot; field.</comments>
              <arguments xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
                <self xsi:type="literals:This"/>
              </arguments>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="toString">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns a string representation of this &lt;code>FlowLayout&lt;/code>&#xA;     * object and its values.&#xA;     * @return     a string representation of this layout&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="str">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:StringReference" value=""/>
        </variable>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:StringReference" value=",align=left"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:StringReference" value=",align=center"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:StringReference" value=",align=right"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:StringReference" value=",align=leading"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:StringReference" value=",align=trailing"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:AdditiveExpression">
          <children xsi:type="references:MethodCall">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../lang/Class.class.xmi#//@classifiers.0/@members.44"/>
            </next>
            <target xsi:type="members:ClassMethod" href="../lang/Object.class.xmi#//@classifiers.0/@members.2"/>
          </children>
          <children xsi:type="references:StringReference" value="[hgap="/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
          <children xsi:type="references:StringReference" value=",vgap="/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@statements.0/@variable"/>
          <children xsi:type="references:StringReference" value="]"/>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
        </returnValue>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * A flow layout arranges components in a directional flow, much&#xA; * like lines of text in a paragraph. The flow direction is&#xA; * determined by the container's &lt;code>componentOrientation&lt;/code>&#xA; * property and may be one of two values: &#xA; * &lt;ul>&#xA; * &lt;li>&lt;code>ComponentOrientation.LEFT_TO_RIGHT&lt;/code>&#xA; * &lt;li>&lt;code>ComponentOrientation.RIGHT_TO_LEFT&lt;/code>&#xA; * &lt;/ul>&#xA; * Flow layouts are typically used&#xA; * to arrange buttons in a panel. It arranges buttons&#xA; * horizontally until no more buttons fit on the same line.&#xA; * The line alignment is determined by the &lt;code>align&lt;/code>&#xA; * property. The possible values are:&#xA; * &lt;ul>&#xA; * &lt;li>{@link #LEFT LEFT}&#xA; * &lt;li>{@link #RIGHT RIGHT}&#xA; * &lt;li>{@link #CENTER CENTER}&#xA; * &lt;li>{@link #LEADING LEADING}&#xA; * &lt;li>{@link #TRAILING TRAILING}&#xA; * &lt;/ul>&#xA; * &lt;p>&#xA; * For example, the following picture shows an applet using the flow&#xA; * layout manager (its default layout manager) to position three buttons:&#xA; * &lt;p>&#xA; * &lt;img src=&quot;doc-files/FlowLayout-1.gif&quot;&#xA; * ALT=&quot;Graphic of Layout for Three Buttons&quot;&#xA; * ALIGN=center HSPACE=10 VSPACE=7>&#xA; * &lt;p>&#xA; * Here is the code for this applet:&#xA; * &lt;p>&#xA; * &lt;hr>&lt;blockquote>&lt;pre>&#xA; * import java.awt.*;&#xA; * import java.applet.Applet;&#xA; *&#xA; * public class myButtons extends Applet {&#xA; *     Button button1, button2, button3;&#xA; *     public void init() {&#xA; *         button1 = new Button(&quot;Ok&quot;);&#xA; *         button2 = new Button(&quot;Open&quot;);&#xA; *         button3 = new Button(&quot;Close&quot;);&#xA; *         add(button1);&#xA; *         add(button2);&#xA; *         add(button3);&#xA; *     }&#xA; * }&#xA; * &lt;/pre>&lt;/blockquote>&lt;hr>&#xA; * &lt;p>&#xA; * A flow layout lets each component assume its natural (preferred) size.&#xA; *&#xA; * @version &#x9;1.52, 12/19/03&#xA; * @author &#x9;Arthur van Hoff&#xA; * @author &#x9;Sami Shaio&#xA; * @since       JDK1.0&#xA; * @see ComponentOrientation&#xA; */</comments>
    </annotationsAndModifiers>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="LayoutManager.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
    <implements xsi:type="types:NamespaceClassifierReference">
      <namespaces>java</namespaces>
      <namespaces>io</namespaces>
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../io/Serializable.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
  </classifiers>
</containers:CompilationUnit>
