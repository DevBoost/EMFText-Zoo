<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/types ../../java.ecore#/16" name="LayoutManager.java">
  <comments>/*&#xA; * @(#)LayoutManager.java&#x9;1.25 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>awt</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="LayoutManager">
    <members xsi:type="members:InterfaceMethod" name="addLayoutComponent">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * If the layout manager uses a per-component string,&#xA;     * adds the component &lt;code>comp&lt;/code> to the layout,&#xA;     * associating it &#xA;     * with the string specified by &lt;code>name&lt;/code>.&#xA;     * &#xA;     * @param name the string to be associated with the component&#xA;     * @param comp the component to be added&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="comp">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Component.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="removeLayoutComponent">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Removes the specified component from the layout.&#xA;     * @param comp the component to be removed&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="comp">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Component.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="preferredLayoutSize">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * Calculates the preferred size dimensions for the specified &#xA;     * container, given the components it contains.&#xA;     * @param parent the container to be laid out&#xA;     *  &#xA;     * @see #minimumLayoutSize&#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="Dimension.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="parent">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Container.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="minimumLayoutSize">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/** &#xA;     * Calculates the minimum size dimensions for the specified &#xA;     * container, given the components it contains.&#xA;     * @param parent the component to be laid out&#xA;     * @see #preferredLayoutSize&#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="Dimension.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="parent">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Container.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="layoutContainer">
      <typeReference xsi:type="types:Void">
        <comments>/** &#xA;     * Lays out the specified container.&#xA;     * @param parent the container to be laid out &#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="parent">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Container.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/** &#xA; * Defines the interface for classes that know how to lay out &#xA; * &lt;code>Container&lt;/code>s.&#xA; *&#xA; * @see Container&#xA; *&#xA; * @version&#x9;1.25, 12/19/03&#xA; * @author &#x9;Sami Shaio&#xA; * @author &#x9;Arthur van Hoff&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
