<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../java.ecore#/7 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="DragSourceListener.java">
  <comments>/*&#xA; * @(#)DragSourceListener.java&#x9;1.20 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>awt</namespaces>
  <namespaces>dnd</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../util/EventListener.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="DragSourceListener">
    <members xsi:type="members:InterfaceMethod" name="dragEnter">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Called as the cursor's hotspot enters a platform-dependent drop site.&#xA;     * This method is invoked when all the following conditions are true:&#xA;     * &lt;UL>&#xA;     * &lt;LI>The cursor's hotspot enters the operable part of a platform- &#xA;     * dependent drop site.&#xA;     * &lt;LI>The drop site is active.&#xA;     * &lt;LI>The drop site accepts the drag.&#xA;     * &lt;/UL>&#xA;     * &#xA;     * @param dsde the &lt;code>DragSourceDragEvent&lt;/code>&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="dsde">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="DragSourceDragEvent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="dragOver">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Called as the cursor's hotspot moves over a platform-dependent drop site.&#xA;     * This method is invoked when all the following conditions are true:&#xA;     * &lt;UL>&#xA;     * &lt;LI>The cursor's hotspot has moved, but still intersects the&#xA;     * operable part of the drop site associated with the previous&#xA;     * dragEnter() invocation. &#xA;     * &lt;LI>The drop site is still active.&#xA;     * &lt;LI>The drop site accepts the drag.&#xA;     * &lt;/UL>&#xA;     * &#xA;     * @param dsde the &lt;code>DragSourceDragEvent&lt;/code>&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="dsde">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="DragSourceDragEvent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="dropActionChanged">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Called when the user has modified the drop gesture.&#xA;     * This method is invoked when the state of the input&#xA;     * device(s) that the user is interacting with changes.&#xA;     * Such devices are typically the mouse buttons or keyboard&#xA;     * modifiers that the user is interacting with.&#xA;     * &#xA;     * @param dsde the &lt;code>DragSourceDragEvent&lt;/code>&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="dsde">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="DragSourceDragEvent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="dragExit">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Called as the cursor's hotspot exits a platform-dependent drop site.&#xA;     * This method is invoked when any of the following conditions are true:&#xA;     * &lt;UL>&#xA;     * &lt;LI>The cursor's hotspot no longer intersects the operable part&#xA;     * of the drop site associated with the previous dragEnter() invocation.&#xA;     * &lt;/UL>&#xA;     * OR&#xA;     * &lt;UL>&#xA;     * &lt;LI>The drop site associated with the previous dragEnter() invocation&#xA;     * is no longer active.&#xA;     * &lt;/UL>&#xA;     * OR&#xA;     * &lt;UL>&#xA;     * &lt;LI> The drop site associated with the previous dragEnter() invocation&#xA;     * has rejected the drag.&#xA;     * &lt;/UL>&#xA;     * &#xA;     * @param dse the &lt;code>DragSourceEvent&lt;/code>&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="dse">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="DragSourceEvent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="dragDropEnd">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * This method is invoked to signify that the Drag and Drop&#xA;     * operation is complete. The getDropSuccess() method of&#xA;     * the &lt;code>DragSourceDropEvent&lt;/code> can be used to &#xA;     * determine the termination state. The getDropAction() method&#xA;     * returns the operation that the drop site selected &#xA;     * to apply to the Drop operation. Once this method is complete, the&#xA;     * current &lt;code>DragSourceContext&lt;/code> and&#xA;     * associated resources become invalid.&#xA;     * &#xA;     * @param dsde the &lt;code>DragSourceDropEvent&lt;/code>&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="dsde">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="DragSourceDropEvent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * The &lt;code>DragSourceListener&lt;/code> defines the &#xA; * event interface for originators of&#xA; * Drag and Drop operations to track the state of the user's gesture, and to&#xA; * provide appropriate &amp;quot;drag over&amp;quot; &#xA; * feedback to the user throughout the&#xA; * Drag and Drop operation.&#xA; * &lt;p>&#xA; * The drop site is &lt;i>associated with the previous &lt;code>dragEnter()&lt;/code>&#xA; * invocation&lt;/i> if the latest invocation of &lt;code>dragEnter()&lt;/code> on this&#xA; * listener:&#xA; * &lt;ul>&#xA; * &lt;li>corresponds to that drop site and&#xA; * &lt;li> is not followed by a &lt;code>dragExit()&lt;/code> invocation on this listener.&#xA; * &lt;/ul>&#xA; *&#xA; * @version &#x9;1.20, 12/19/03&#xA; * @since 1.2&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../util/EventListener.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
