<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../java.ecore#/5 http://www.emftext.org/java/instantiations ../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../java.ecore#/9 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/references ../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../java.ecore#/15 http://www.emftext.org/java/types ../../../java.ecore#/16" name="DragSourceDropEvent.java">
  <comments>/*&#xA; * @(#)DragSourceDropEvent.java&#x9;1.19 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>awt</namespaces>
  <namespaces>dnd</namespaces>
  <classifiers xsi:type="classifiers:Class" name="DragSourceDropEvent">
    <members xsi:type="members:Field" name="serialVersionUID">
      <initialValue xsi:type="expressions:UnaryExpression">
        <operators xsi:type="operators:Subtraction"/>
        <child xsi:type="literals:DecimalLongLiteral" decimalValue="5571321229470821891"/>
      </initialValue>
      <typeReference xsi:type="types:Long"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Constructor" name="DragSourceDropEvent">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@parameters.0"/>
          <callTarget xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@parameters.2"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@parameters.1"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="dsc">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="DragSourceContext.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="action">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="success">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Construct a &lt;code>DragSourceDropEvent&lt;/code> for a drop, &#xA;     * given the &#xA;     * &lt;code>DragSourceContext&lt;/code>, the drop action, &#xA;     * and a &lt;code>boolean&lt;/code> indicating if the drop was successful.&#xA;     * The coordinates for this &lt;code>DragSourceDropEvent&lt;/code> &#xA;     * are not specified, so &lt;code>getLocation&lt;/code> will return&#xA;     * &lt;code>null&lt;/code> for this event.&#xA;     * &lt;p> &#xA;     * The argument &lt;code>action&lt;/code> should be one of &lt;code>DnDConstants&lt;/code>&#xA;     * that represents a single action.&#xA;     * This constructor does not throw any exception for invalid &lt;code>action&lt;/code>.&#xA;     * &#xA;     * @param dsc the &lt;code>DragSourceContext&lt;/code> &#xA;     * associated with this &lt;code>DragSourceDropEvent&lt;/code>&#xA;     * @param action the drop action&#xA;     * @param success a boolean indicating if the drop was successful&#xA;     *&#xA;     * @throws &lt;code>IllegalArgumentException&lt;/code> if &lt;code>dsc&lt;/code> is &lt;code>null&lt;/code>.&#xA;     *&#xA;     * @see DragSourceEvent#getLocation&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="DragSourceDropEvent">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.0"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.3"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.4"/>
          <callTarget xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.2"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.1"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="dsc">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="DragSourceContext.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="action">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="success">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="y">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Construct a &lt;code>DragSourceDropEvent&lt;/code> for a drop, given the&#xA;     * &lt;code>DragSourceContext&lt;/code>, the drop action, a &lt;code>boolean&lt;/code>&#xA;     * indicating if the drop was successful, and coordinates.&#xA;     * &lt;p> &#xA;     * The argument &lt;code>action&lt;/code> should be one of &lt;code>DnDConstants&lt;/code>&#xA;     * that represents a single action.&#xA;     * This constructor does not throw any exception for invalid &lt;code>action&lt;/code>.&#xA;     * &#xA;     * @param dsc the &lt;code>DragSourceContext&lt;/code> &#xA;     * associated with this &lt;code>DragSourceDropEvent&lt;/code>&#xA;     * @param action the drop action&#xA;     * @param success a boolean indicating if the drop was successful&#xA;     * @param x   the horizontal coordinate for the cursor location&#xA;     * @param y   the vertical coordinate for the cursor location&#xA;     *&#xA;     * @throws &lt;code>IllegalArgumentException&lt;/code> if &lt;code>dsc&lt;/code> is &lt;code>null&lt;/code>.&#xA;     *&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="DragSourceDropEvent">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0"/>
          <callTarget xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:BooleanLiteral"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="dsc">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="DragSourceContext.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Construct a &lt;code>DragSourceDropEvent&lt;/code>&#xA;     * for a drag that does not result in a drop.&#xA;     * The coordinates for this &lt;code>DragSourceDropEvent&lt;/code> &#xA;     * are not specified, so &lt;code>getLocation&lt;/code> will return&#xA;     * &lt;code>null&lt;/code> for this event.&#xA;     *&#xA;     * @param dsc the &lt;code>DragSourceContext&lt;/code>&#xA;     *&#xA;     * @throws &lt;code>IllegalArgumentException&lt;/code> if &lt;code>dsc&lt;/code> is &lt;code>null&lt;/code>.&#xA;     *&#xA;     * @see DragSourceEvent#getLocation&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="getDropSuccess">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * This method returns a &lt;code>boolean&lt;/code> indicating &#xA;     * if the drop was successful.&#xA;     * &#xA;     * @return &lt;code>true&lt;/code> if the drop target accepted the drop and&#xA;     *         successfully performed a drop action;&#xA;     *         &lt;code>false&lt;/code> if the drop target rejected the drop or &#xA;     *         if the drop target accepted the drop, but failed to perform &#xA;     *         a drop action.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getDropAction">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * This method returns an &lt;code>int&lt;/code> representing &#xA;     * the action performed by the target on the subject of the drop.&#xA;     *&#xA;     * @return the action performed by the target on the subject of the drop&#xA;     *         if the drop target accepted the drop and the target drop action&#xA;     *         is supported by the drag source; otherwise,&#xA;     *         &lt;code>DnDConstants.ACTION_NONE&lt;/code>. &#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
      </statements>
    </members>
    <members xsi:type="members:Field" name="dropSuccess">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/*&#xA;     * fields&#xA;     */</comments>
        <comments>/**&#xA;     * &lt;code>true&lt;/code> if the drop was successful.&#xA;     *&#xA;     * @serial&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="dropAction">
      <initialValue xsi:type="references:IdentifierReference">
        <next xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="DnDConstants.class.xmi#//@classifiers.0/@members.0"/>
        </next>
        <target xsi:type="classifiers:Class" href="DnDConstants.class.xmi#//@classifiers.0"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * The drop action.&#xA;     *&#xA;     * @serial&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * The &lt;code>DragSourceDropEvent&lt;/code> is delivered &#xA; * from the &lt;code>DragSourceContextPeer&lt;/code>,&#xA; * via the &lt;code>DragSourceContext&lt;/code>, to the &lt;code>dragDropEnd&lt;/code>&#xA; * method of &lt;code>DragSourceListener&lt;/code>s registered with that&#xA; * &lt;code>DragSourceContext&lt;/code> and with its associated&#xA; * &lt;code>DragSource&lt;/code>. &#xA; * It contains sufficient information for the &#xA; * originator of the operation&#xA; * to provide appropriate feedback to the end user &#xA; * when the operation completes.&#xA; * &lt;P>&#xA; * @version &#x9;1.19, 12/19/03&#xA; * &lt;P>&#xA; * @since 1.2&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="DragSourceEvent.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
