<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../../java.ecore#/7 http://www.emftext.org/java/members ../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../../java.ecore#/13 http://www.emftext.org/java/types ../../../../java.ecore#/16" name="InputMethodDescriptor.java">
  <comments>/*&#xA; * @(#)InputMethodDescriptor.java&#x9;1.11 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>awt</namespaces>
  <namespaces>im</namespaces>
  <namespaces>spi</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../AWTException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../Image.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../util/Locale.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="InputMethodDescriptor">
    <members xsi:type="members:InterfaceMethod" name="getAvailableLocales">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * Returns the locales supported by the corresponding input method.&#xA;     * The locale may describe just the language, or may also include&#xA;     * country and variant information if needed.&#xA;     * The information is used to select input methods by locale&#xA;     * ({@link java.awt.im.InputContext#selectInputMethod(Locale)}). It may also&#xA;     * be used to sort input methods by locale in a user-visible&#xA;     * list of input methods.&#xA;     * &lt;p>&#xA;     * Only the input method's primary locales should be returned.&#xA;     * For example, if a Japanese input method also has a pass-through&#xA;     * mode for Roman characters, typically still only Japanese would&#xA;     * be returned. Thus, the list of locales returned is typically&#xA;     * a subset of the locales for which the corresponding input method's&#xA;     * implementation of {@link java.awt.im.spi.InputMethod#setLocale} returns true.&#xA;     * &lt;p>&#xA;     * If {@link #hasDynamicLocaleList} returns true, this method is&#xA;     * called each time the information is needed. This&#xA;     * gives input methods that depend on network resources the chance&#xA;     * to add or remove locales as resources become available or&#xA;     * unavailable.&#xA;     *&#xA;     * @return the locales supported by the input method&#xA;     * @exception AWTException if it can be determined that the input method&#xA;     * is inoperable, for example, because of incomplete installation.&#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="../../../util/Locale.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../AWTException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="hasDynamicLocaleList">
      <typeReference xsi:type="types:Boolean">
        <comments>/**&#xA;     * Returns whether the list of available locales can change&#xA;     * at runtime. This may be the case, for example, for adapters&#xA;     * that access real input methods over the network.&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getInputMethodDisplayName">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * Returns the user-visible name of the corresponding&#xA;     * input method for the given input locale in the language in which&#xA;     * the name will be displayed.&#xA;     * &lt;p>&#xA;     * The inputLocale parameter specifies the locale for which text&#xA;     * is input.&#xA;     * This parameter can only take values obtained from this descriptor's&#xA;     * {@link #getAvailableLocales} method or null. If it is null, an&#xA;     * input locale independent name for the input method should be&#xA;     * returned.&#xA;     * &lt;p>&#xA;     * If a name for the desired display language is not available, the&#xA;     * method may fall back to some other language.&#xA;     *&#xA;     * @param inputLocale the locale for which text input is supported, or null&#xA;     * @param displayLanguage the language in which the name will be displayed&#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="inputLocale">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../util/Locale.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="displayLanguage">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../util/Locale.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getInputMethodIcon">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * Returns an icon for the corresponding input method.&#xA;     * The icon may be used by a user interface for selecting input methods.&#xA;     * &lt;p>&#xA;     * The inputLocale parameter specifies the locale for which text&#xA;     * is input.&#xA;     * This parameter can only take values obtained from this descriptor's&#xA;     * {@link #getAvailableLocales} method or null. If it is null, an&#xA;     * input locale independent icon for the input method should be&#xA;     * returned.&#xA;     * &lt;p>&#xA;     * The icon's size should be 16&amp;times;16 pixels.&#xA;     *&#xA;     * @param inputLocale the locale for which text input is supported, or null&#xA;     * @return an icon for the corresponding input method, or null&#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="../../Image.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="inputLocale">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../util/Locale.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="createInputMethod">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * Creates a new instance of the corresponding input method.&#xA;     * &#xA;     * @return a new instance of the corresponding input method&#xA;     * @exception Exception any exception that may occur while creating the&#xA;     * input method instance&#xA;     */</comments>
          <target xsi:type="classifiers:Interface" href="InputMethod.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../lang/Exception.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Defines methods that provide sufficient information about an input method&#xA; * to enable selection and loading of that input method.&#xA; * The input method itself is only loaded when it is actually used.&#xA; * &#xA; * @since 1.3&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
