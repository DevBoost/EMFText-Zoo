<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../../java.ecore#/7 http://www.emftext.org/java/members ../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../../java.ecore#/13 http://www.emftext.org/java/types ../../../../java.ecore#/16" name="InputMethodContext.java">
  <comments>/*&#xA; * @(#)InputMethodContext.java&#x9;1.16 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>awt</namespaces>
  <namespaces>im</namespaces>
  <namespaces>spi</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../HeadlessException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../Window.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <namespaces>font</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../font/TextHitInfo.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <namespaces>im</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../InputMethodRequests.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>text</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../text/AttributedCharacterIterator.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>swing</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../javax/swing/JFrame.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="InputMethodContext">
    <members xsi:type="members:InterfaceMethod" name="dispatchInputMethodEvent">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="id">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="text">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../text/AttributedCharacterIterator.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="committedCharacterCount">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="caret">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../font/TextHitInfo.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="visiblePosition">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../font/TextHitInfo.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Creates an input method event from the arguments given&#xA;     * and dispatches it to the client component. For arguments,&#xA;     * see {@link java.awt.event.InputMethodEvent#InputMethodEvent}.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="createInputMethodWindow">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../Window.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="title">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="attachToInputContext">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Creates a top-level window for use by the input method.&#xA;     * The intended behavior of this window is:&#xA;     * &lt;ul>&#xA;     * &lt;li>it floats above all document windows and dialogs&#xA;     * &lt;li>it and all components that it contains do not receive the focus&#xA;     * &lt;li>it has lightweight decorations, such as a reduced drag region without title&#xA;     * &lt;/ul>&#xA;     * However, the actual behavior with respect to these three items is platform dependent.&#xA;     * &lt;p>&#xA;     * The title may or may not be displayed, depending on the actual type of window created.&#xA;     * &lt;p>&#xA;     * If attachToInputContext is true, the new window will share the input context that&#xA;     * corresponds to this input method context, so that events for components in the window&#xA;     * are automatically dispatched to the input method.&#xA;     * Also, when the window is opened using setVisible(true), the input context will prevent&#xA;     * deactivate and activate calls to the input method that might otherwise be caused.&#xA;     * &lt;p>&#xA;     * Input methods must call {@link java.awt.Window#dispose() Window.dispose} on the &#xA;     * returned input method window when it is no longer needed.&#xA;     * &lt;p>&#xA;     * @param title the title to be displayed in the window's title bar,&#xA;     *              if there is such a title bar.&#xA;     *              A &lt;code>null&lt;/code> value is treated as an empty string, &quot;&quot;.&#xA;     * @param attachToInputContext whether this window should share the input context&#xA;     *              that corresponds to this input method context &#xA;     * @return a window with special characteristics for use by input methods&#xA;     * @exception HeadlessException if &lt;code>GraphicsEnvironment.isHeadless&#xA;     *              &lt;/code> returns &lt;code>true&lt;/code>&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="createInputMethodJFrame">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../javax/swing/JFrame.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="title">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="attachToInputContext">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Creates a top-level Swing JFrame for use by the input method.&#xA;     * The intended behavior of this window is:&#xA;     * &lt;ul>&#xA;     * &lt;li>it floats above all document windows and dialogs&#xA;     * &lt;li>it and all components that it contains do not receive the focus&#xA;     * &lt;li>it has lightweight decorations, such as a reduced drag region without title&#xA;     * &lt;/ul>&#xA;     * However, the actual behavior with respect to these three items is platform dependent.&#xA;     * &lt;p>&#xA;     * The title may or may not be displayed, depending on the actual type of window created.&#xA;     * &lt;p>&#xA;     * If attachToInputContext is true, the new window will share the input context that&#xA;     * corresponds to this input method context, so that events for components in the window&#xA;     * are automatically dispatched to the input method.&#xA;     * Also, when the window is opened using setVisible(true), the input context will prevent&#xA;     * deactivate and activate calls to the input method that might otherwise be caused.&#xA;     * &lt;p>&#xA;     * Input methods must call {@link java.awt.Window#dispose() Window.dispose} on the &#xA;     * returned input method window when it is no longer needed.&#xA;     * &lt;p>&#xA;     * @param title the title to be displayed in the window's title bar,&#xA;     *              if there is such a title bar.&#xA;     *              A &lt;code>null&lt;/code> value is treated as an empty string, &quot;&quot;.&#xA;     * @param attachToInputContext whether this window should share the input context&#xA;     *              that corresponds to this input method context &#xA;     * @return a JFrame with special characteristics for use by input methods&#xA;     * @exception HeadlessException if &lt;code>GraphicsEnvironment.isHeadless&#xA;     *              &lt;/code> returns &lt;code>true&lt;/code>&#xA;     *&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="enableClientWindowNotification">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="inputMethod">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="InputMethod.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="enable">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Enables or disables notification of the current client window's&#xA;     * location and state for the specified input method. When&#xA;     * notification is enabled, the input method's {@link&#xA;     * java.awt.im.spi.InputMethod#notifyClientWindowChange&#xA;     * notifyClientWindowChange} method is called as described in that&#xA;     * method's specification. Notification is automatically disabled&#xA;     * when the input method is disposed.&#xA;     *&#xA;     * @param inputMethod the input method for which notifications are&#xA;     * enabled or disabled&#xA;     * @param enable true to enable, false to disable&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Provides methods that input methods&#xA; * can use to communicate with their client components or to request&#xA; * other services.  This interface is implemented by the input method&#xA; * framework, and input methods call its methods on the instance they&#xA; * receive through&#xA; * {@link java.awt.im.spi.InputMethod#setInputMethodContext}.&#xA; * There should be no other implementors or callers.&#xA; *&#xA; * @since 1.3&#xA; *&#xA; * @version &#x9;1.16, 12/19/03&#xA; * @author JavaSoft International&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../InputMethodRequests.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
