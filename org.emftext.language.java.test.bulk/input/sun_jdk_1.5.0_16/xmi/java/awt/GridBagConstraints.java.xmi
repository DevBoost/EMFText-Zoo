<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/expressions ../../java.ecore#/5 http://www.emftext.org/java/instantiations ../../java.ecore#/8 http://www.emftext.org/java/literals ../../java.ecore#/9 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/operators ../../java.ecore#/12 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/references ../../java.ecore#/14 http://www.emftext.org/java/statements ../../java.ecore#/15 http://www.emftext.org/java/types ../../java.ecore#/16" name="GridBagConstraints.java">
  <comments>/*&#xA; * @(#)GridBagConstraints.java&#x9;1.34 04/03/15&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>awt</namespaces>
  <classifiers xsi:type="classifiers:Class" name="GridBagConstraints">
    <members xsi:type="members:Field" name="RELATIVE">
      <initialValue xsi:type="expressions:UnaryExpression">
        <operators xsi:type="operators:Subtraction"/>
        <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Specifies that this component is the next-to-last component in its &#xA;     * column or row (&lt;code>gridwidth&lt;/code>, &lt;code>gridheight&lt;/code>), &#xA;     * or that this component be placed next to the previously added &#xA;     * component (&lt;code>gridx&lt;/code>, &lt;code>gridy&lt;/code>). &#xA;     * @see      java.awt.GridBagConstraints#gridwidth&#xA;     * @see      java.awt.GridBagConstraints#gridheight&#xA;     * @see      java.awt.GridBagConstraints#gridx&#xA;     * @see      java.awt.GridBagConstraints#gridy&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="REMAINDER">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Specifies that this component is the &#xA;     * last component in its column or row. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="NONE">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Do not resize the component. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="BOTH">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Resize the component both horizontally and vertically. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="HORIZONTAL">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Resize the component horizontally but not vertically. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VERTICAL">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Resize the component vertically but not horizontally. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="CENTER">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;    * Put the component in the center of its display area.&#xA;    */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="NORTH">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="11"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Put the component at the top of its display area,&#xA;     * centered horizontally. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="NORTHEAST">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="12"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Put the component at the top-right corner of its display area. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="EAST">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="13"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Put the component on the right side of its display area, &#xA;     * centered vertically.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="SOUTHEAST">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="14"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Put the component at the bottom-right corner of its display area. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="SOUTH">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="15"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Put the component at the bottom of its display area, centered &#xA;     * horizontally. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="SOUTHWEST">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Put the component at the bottom-left corner of its display area. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="WEST">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="17"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Put the component on the left side of its display area, &#xA;     * centered vertically.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="NORTHWEST">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="18"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Put the component at the top-left corner of its display area. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="PAGE_START">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="19"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;     * Place the component centered along the edge of its display area&#xA;     * associated with the start of a page for the current&#xA;     * &lt;code>ComponentOrienation&lt;/code>.  Equal to NORTH for horizontal&#xA;     * orientations. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="PAGE_END">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="20"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Place the component centered along the edge of its display area  &#xA;     * associated with the end of a page for the current&#xA;     * &lt;code>ComponentOrienation&lt;/code>.  Equal to SOUTH for horizontal&#xA;     * orientations.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="LINE_START">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="21"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Place the component centered along the edge of its display area where &#xA;     * lines of text would normally begin for the current &#xA;     * &lt;code>ComponentOrienation&lt;/code>.  Equal to WEST for horizontal,&#xA;     * left-to-right orientations and EAST for horizontal, right-to-left &#xA;     * orientations.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="LINE_END">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="22"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Place the component centered along the edge of its display area where &#xA;     * lines of text would normally end for the current &#xA;     * &lt;code>ComponentOrienation&lt;/code>.  Equal to EAST for horizontal,&#xA;     * left-to-right orientations and WEST for horizontal, right-to-left &#xA;     * orientations.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="FIRST_LINE_START">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="23"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Place the component in the corner of its display area where &#xA;     * the first line of text on a page would normally begin for the current &#xA;     * &lt;code>ComponentOrienation&lt;/code>.  Equal to NORTHWEST for horizontal,&#xA;     * left-to-right orientations and NORTHEAST for horizontal, right-to-left &#xA;     * orientations.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="FIRST_LINE_END">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Place the component in the corner of its display area where &#xA;     * the first line of text on a page would normally end for the current &#xA;     * &lt;code>ComponentOrienation&lt;/code>.  Equal to NORTHEAST for horizontal,&#xA;     * left-to-right orientations and NORTHWEST for horizontal, right-to-left &#xA;     * orientations.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="LAST_LINE_START">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="25"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Place the component in the corner of its display area where &#xA;     * the last line of text on a page would normally start for the current &#xA;     * &lt;code>ComponentOrienation&lt;/code>.  Equal to SOUTHWEST for horizontal,&#xA;     * left-to-right orientations and SOUTHEAST for horizontal, right-to-left &#xA;     * orientations.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="LAST_LINE_END">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="26"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Place the component in the corner of its display area where &#xA;     * the last line of text on a page would normally end for the current &#xA;     * &lt;code>ComponentOrienation&lt;/code>.  Equal to SOUTHEAST for horizontal,&#xA;     * left-to-right orientations and SOUTHWEST for horizontal, right-to-left &#xA;     * orientations.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="gridx">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Specifies the cell containing the leading edge of the component's &#xA;     * display area, where the first cell in a row has &lt;code>gridx=0&lt;/code>. &#xA;     * The leading edge of a component's display area is its left edge for&#xA;     * a horizontal, left-to-right container and its right edge for a&#xA;     * horizontal, right-to-left container.&#xA;     * The value &#xA;     * &lt;code>RELATIVE&lt;/code> specifies that the component be placed &#xA;     * immediately following the component that was added to the container &#xA;     * just before this component was added. &#xA;     * &lt;p>&#xA;     * The default value is &lt;code>RELATIVE&lt;/code>. &#xA;     * &lt;code>gridx&lt;/code> should be a non-negative value.&#xA;     * @serial&#xA;     * @see #clone()&#xA;     * @see java.awt.GridBagConstraints#gridy&#xA;     * @see java.awt.ComponentOrientation&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="gridy">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Specifies the cell at the top of the component's display area, &#xA;     * where the topmost cell has &lt;code>gridy=0&lt;/code>. The value &#xA;     * &lt;code>RELATIVE&lt;/code> specifies that the component be placed just &#xA;     * below the component that was added to the container just before &#xA;     * this component was added. &#xA;     * &lt;p>&#xA;     * The default value is &lt;code>RELATIVE&lt;/code>.&#xA;     * &lt;code>gridy&lt;/code> should be a non-negative value.&#xA;     * @serial&#xA;     * @see #clone() &#xA;     * @see java.awt.GridBagConstraints#gridx&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="gridwidth">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Specifies the number of cells in a row for the component's &#xA;     * display area. &#xA;     * &lt;p>&#xA;     * Use &lt;code>REMAINDER&lt;/code> to specify that the component's&#xA;     * display area will be from &lt;code>gridx&lt;/code> to the last&#xA;     * cell in the row.&#xA;     * Use &lt;code>RELATIVE&lt;/code> to specify that the component's&#xA;     * display area will be from &lt;code>gridx&lt;/code> to the next&#xA;     * to the last one in its row.&#xA;     * &lt;p>&#xA;     * &lt;code>gridwidth&lt;/code> should be non-negative and the default&#xA;     * value is 1.&#xA;     * @serial&#xA;     * @see #clone() &#xA;     * @see java.awt.GridBagConstraints#gridheight&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="gridheight">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Specifies the number of cells in a column for the component's &#xA;     * display area. &#xA;     * &lt;p>&#xA;     * Use &lt;code>REMAINDER&lt;/code> to specify that the component's&#xA;     * display area will be from &lt;code>gridy&lt;/code> to the last&#xA;     * cell in the column.&#xA;     * Use &lt;code>RELATIVE&lt;/code> to specify that the component's&#xA;     * display area will be from &lt;code>gridy&lt;/code> to the next&#xA;     * to the last one in its column.&#xA;     * &lt;p>&#xA;     * &lt;code>gridheight&lt;/code> should be a non-negative value and the&#xA;     * default value is 1.&#xA;     * @serial&#xA;     * @see #clone()&#xA;     * @see java.awt.GridBagConstraints#gridwidth&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="weightx">
      <typeReference xsi:type="types:Double"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Specifies how to distribute extra horizontal space. &#xA;     * &lt;p>&#xA;     * The grid bag layout manager calculates the weight of a column to &#xA;     * be the maximum &lt;code>weightx&lt;/code> of all the components in a &#xA;     * column. If the resulting layout is smaller horizontally than the area &#xA;     * it needs to fill, the extra space is distributed to each column in &#xA;     * proportion to its weight. A column that has a weight of zero receives &#xA;     * no extra space. &#xA;     * &lt;p>&#xA;     * If all the weights are zero, all the extra space appears between &#xA;     * the grids of the cell and the left and right edges. &#xA;     * &lt;p>&#xA;     * The default value of this field is &lt;code>0&lt;/code>.&#xA;     * &lt;code>weightx&lt;/code> should be a non-negative value.&#xA;     * @serial&#xA;     * @see #clone() &#xA;     * @see java.awt.GridBagConstraints#weighty&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="weighty">
      <typeReference xsi:type="types:Double"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Specifies how to distribute extra vertical space. &#xA;     * &lt;p>&#xA;     * The grid bag layout manager calculates the weight of a row to be &#xA;     * the maximum &lt;code>weighty&lt;/code> of all the components in a row. &#xA;     * If the resulting layout is smaller vertically than the area it &#xA;     * needs to fill, the extra space is distributed to each row in &#xA;     * proportion to its weight. A row that has a weight of zero receives no &#xA;     * extra space. &#xA;     * &lt;p>&#xA;     * If all the weights are zero, all the extra space appears between &#xA;     * the grids of the cell and the top and bottom edges. &#xA;     * &lt;p>&#xA;     * The default value of this field is &lt;code>0&lt;/code>. &#xA;     * &lt;code>weighty&lt;/code> should be a non-negative value.&#xA;     * @serial&#xA;     * @see #clone()&#xA;     * @see java.awt.GridBagConstraints#weightx&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="anchor">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;    * This field is used when the component is smaller than its display&#xA;     * area. It determines where, within the display area, to place the&#xA;     * component. &#xA;     * &lt;p>&#xA;     * There are two kinds of possible values: relative and &#xA;     * absolute.  Relative values are interpreted relative to the container's&#xA;     * component orientation property while absolute values are not.  The absolute&#xA;     * values are:&#xA;     * &lt;code>CENTER&lt;/code>, &lt;code>NORTH&lt;/code>, &lt;code>NORTHEAST&lt;/code>,&#xA;     * &lt;code>EAST&lt;/code>, &lt;code>SOUTHEAST&lt;/code>, &lt;code>SOUTH&lt;/code>,&#xA;     * &lt;code>SOUTHWEST&lt;/code>, &lt;code>WEST&lt;/code>, and &lt;code>NORTHWEST&lt;/code>.&#xA;     * The relative values are: &lt;code>PAGE_START&lt;/code>, &lt;code>PAGE_END&lt;/code>,&#xA;     * &lt;code>LINE_START&lt;/code>, &lt;code>LINE_END&lt;/code>, &#xA;     * &lt;code>FIRST_LINE_START&lt;/code>, &lt;code>FIRST_LINE_END&lt;/code>, &#xA;     * &lt;code>LAST_LINE_START&lt;/code> and &lt;code>LAST_LINE_END&lt;/code>.&#xA;     * The default value is &lt;code>CENTER&lt;/code>. &#xA;     * @serial&#xA;     * @see #clone() &#xA;     * @see java.awt.ComponentOrientation&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fill">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * This field is used when the component's display area is larger &#xA;     * than the component's requested size. It determines whether to &#xA;     * resize the component, and if so, how. &#xA;     * &lt;p>&#xA;     * The following values are valid for &lt;code>fill&lt;/code>: &#xA;     * &lt;p>&#xA;     * &lt;ul>&#xA;     * &lt;li>&#xA;     * &lt;code>NONE&lt;/code>: Do not resize the component. &#xA;     * &lt;li>&#xA;     * &lt;code>HORIZONTAL&lt;/code>: Make the component wide enough to fill &#xA;     *         its display area horizontally, but do not change its height. &#xA;     * &lt;li>&#xA;     * &lt;code>VERTICAL&lt;/code>: Make the component tall enough to fill its &#xA;     *         display area vertically, but do not change its width. &#xA;     * &lt;li>&#xA;     * &lt;code>BOTH&lt;/code>: Make the component fill its display area &#xA;     *         entirely. &#xA;     * &lt;/ul>&#xA;     * &lt;p>&#xA;     * The default value is &lt;code>NONE&lt;/code>. &#xA;     * @serial&#xA;     * @see #clone()&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="insets">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Insets.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * This field specifies the external padding of the component, the &#xA;     * minimum amount of space between the component and the edges of its &#xA;     * display area. &#xA;     * &lt;p>&#xA;     * The default value is &lt;code>new Insets(0, 0, 0, 0)&lt;/code>. &#xA;     * @serial&#xA;     * @see #clone()&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="ipadx">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * This field specifies the internal padding of the component, how much &#xA;     * space to add to the minimum width of the component. The width of &#xA;     * the component is at least its minimum width plus &#xA;     * &lt;code>ipadx&lt;/code> pixels. &#xA;     * &lt;p>&#xA;     * The default value is &lt;code>0&lt;/code>. &#xA;     * @serial&#xA;     * @see #clone()&#xA;     * @see java.awt.GridBagConstraints#ipady&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="ipady">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * This field specifies the internal padding, that is, how much &#xA;     * space to add to the minimum height of the component. The height of &#xA;     * the component is at least its minimum height plus &#xA;     * &lt;code>ipady&lt;/code> pixels. &#xA;     * &lt;p>&#xA;     * The default value is 0. &#xA;     * @serial&#xA;     * @see #clone()&#xA;     * @see java.awt.GridBagConstraints#ipadx&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="tempX">
      <typeReference xsi:type="types:Int">
        <comments>/**&#xA;     * Temporary place holder for the x coordinate.&#xA;     * @serial&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="tempY">
      <typeReference xsi:type="types:Int">
        <comments>/**&#xA;     * Temporary place holder for the y coordinate.&#xA;     * @serial&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="tempWidth">
      <typeReference xsi:type="types:Int">
        <comments>/**&#xA;     * Temporary place holder for the Width of the component.&#xA;     * @serial&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="tempHeight">
      <typeReference xsi:type="types:Int">
        <comments>/**&#xA;     * Temporary place holder for the Height of the component.&#xA;     * @serial&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="minWidth">
      <typeReference xsi:type="types:Int">
        <comments>/**&#xA;     * The minimum width of the component.  It is used to calculate&#xA;     * &lt;code>ipady&lt;/code>, where the default will be 0.&#xA;     * @serial&#xA;     * @see #ipady&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="minHeight">
      <typeReference xsi:type="types:Int">
        <comments>/**&#xA;     * The minimum height of the component. It is used to calculate&#xA;     * &lt;code>ipadx&lt;/code>, where the default will be 0.&#xA;     * @serial&#xA;     * @see #ipadx&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="serialVersionUID">
      <initialValue xsi:type="expressions:UnaryExpression">
        <operators xsi:type="operators:Subtraction"/>
        <child xsi:type="literals:DecimalLongLiteral" decimalValue="1000070633030801713"/>
      </initialValue>
      <typeReference xsi:type="types:Long"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/*&#xA;   * JDK 1.1 serialVersionUID &#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Constructor" name="GridBagConstraints">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="Insets.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </expression>
      </statements>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Creates a &lt;code>GridBagConstraint&lt;/code> object with &#xA;     * all of its fields set to their default value. &#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="GridBagConstraints">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.1"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.2"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.3"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.7"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.9"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.10"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.8"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.6"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.4"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.5"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="gridx">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="gridy">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="gridwidth">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="gridheight">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="weightx">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="weighty">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="anchor">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="fill">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="insets">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Insets.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="ipadx">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="ipady">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;    * Creates a &lt;code>GridBagConstraints&lt;/code> object with&#xA;    * all of its fields set to the passed-in arguments.&#xA;    * &#xA;    * Note: Because the use of this constructor hinders readability&#xA;    * of source code, this constructor should only be used by&#xA;    * automatic source code generation tools.&#xA;    * &#xA;    * @param gridx&#x9;The initial gridx value.&#xA;    * @param gridy&#x9;The initial gridy value.&#xA;    * @param gridwidth&#x9;The initial gridwidth value.&#xA;    * @param gridheight&#x9;The initial gridheight value.&#xA;    * @param weightx&#x9;The initial weightx value.&#xA;    * @param weighty&#x9;The initial weighty value.&#xA;    * @param anchor&#x9;The initial anchor value.&#xA;    * @param fill&#x9;The initial fill value.&#xA;    * @param insets&#x9;The initial insets value.&#xA;    * @param ipadx&#x9;The initial ipadx value.&#xA;    * @param ipady&#x9;The initial ipady value.&#xA;    * &#xA;    * @see java.awt.GridBagConstraints#gridx&#xA;    * @see java.awt.GridBagConstraints#gridy&#xA;    * @see java.awt.GridBagConstraints#gridwidth&#xA;    * @see java.awt.GridBagConstraints#gridheight&#xA;    * @see java.awt.GridBagConstraints#weightx&#xA;    * @see java.awt.GridBagConstraints#weighty&#xA;    * @see java.awt.GridBagConstraints#anchor&#xA;    * @see java.awt.GridBagConstraints#fill&#xA;    * @see java.awt.GridBagConstraints#insets&#xA;    * @see java.awt.GridBagConstraints#ipadx&#xA;    * @see java.awt.GridBagConstraints#ipady&#xA;    * &#xA;    * @since 1.2&#xA;    */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="clone">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;    * Creates a copy of this grid bag constraint.&#xA;    * @return     a copy of this grid bag constraint&#xA;    */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="c">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences target="//@classifiers.0"/>
            </typeReference>
            <initialValue xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences target="//@classifiers.0"/>
              </typeReference>
              <child xsi:type="references:SelfReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../lang/Object.class.xmi#//@classifiers.0/@members.5"/>
                </next>
                <self xsi:type="literals:Super"/>
              </child>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43/@statements.0/@statements.0/@variable">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="Insets.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="Insets.class.xmi#//@classifiers.0/@members.10"/>
                </next>
              </child>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43/@statements.0/@statements.0/@variable"/>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:Throw">
            <comments>// this shouldn't happen, since we are Cloneable</comments>
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../lang/InternalError.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </throwable>
          </statements>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/CloneNotSupportedException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * The &lt;code>GridBagConstraints&lt;/code> class specifies constraints &#xA; * for components that are laid out using the &#xA; * &lt;code>GridBagLayout&lt;/code> class.&#xA; *&#xA; * @version &#x9;1.34, 03/15/04&#xA; * @author Doug Stein&#xA; * @see java.awt.GridBagLayout&#xA; * @since JDK1.0&#xA; */</comments>
    </annotationsAndModifiers>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../lang/Cloneable.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
    <implements xsi:type="types:NamespaceClassifierReference">
      <namespaces>java</namespaces>
      <namespaces>io</namespaces>
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../io/Serializable.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
  </classifiers>
</containers:CompilationUnit>
