<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../java.ecore#/7 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/types ../../../java.ecore#/16" name="Channel.java">
  <comments>/*&#xA; * @(#)Channel.java&#x9;1.18 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>nio</namespaces>
  <namespaces>channels</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../io/IOException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../io/Closeable.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="Channel">
    <members xsi:type="members:InterfaceMethod" name="isOpen">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Tells whether or not this channel is open.  &lt;/p>&#xA;     *&#xA;     * @return &lt;tt>true&lt;/tt> if, and only if, this channel is open&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="close">
      <typeReference xsi:type="types:Void"/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Closes this channel.&#xA;     *&#xA;     * &lt;p> After a channel is closed, any further attempt to invoke I/O&#xA;     * operations upon it will cause a {@link ClosedChannelException} to be&#xA;     * thrown.&#xA;     *&#xA;     * &lt;p> If this channel is already closed then invoking this method has no&#xA;     * effect.&#xA;     *&#xA;     * &lt;p> This method may be invoked at any time.  If some other thread has&#xA;     * already invoked it, however, then another invocation will block until&#xA;     * the first invocation is complete, after which it will return without&#xA;     * effect. &lt;/p>&#xA;     *&#xA;     * @throws  IOException  If an I/O error occurs&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * A nexus for I/O operations.&#xA; *&#xA; * &lt;p> A channel represents an open connection to an entity such as a hardware&#xA; * device, a file, a network socket, or a program component that is capable of&#xA; * performing one or more distinct I/O operations, for example reading or&#xA; * writing.&#xA; *&#xA; * &lt;p> A channel is either open or closed.  A channel is open upon creation,&#xA; * and once closed it remains closed.  Once a channel is closed, any attempt to&#xA; * invoke an I/O operation upon it will cause a {@link ClosedChannelException}&#xA; * to be thrown.  Whether or not a channel is open may be tested by invoking&#xA; * its {@link #isOpen isOpen} method.&#xA; *&#xA; * &lt;p> Channels are, in general, intended to be safe for multithreaded access&#xA; * as described in the specifications of the interfaces and classes that extend&#xA; * and implement this interface.&#xA; *&#xA; *&#xA; * @author Mark Reinhold&#xA; * @author JSR-51 Expert Group&#xA; * @version 1.18, 03/12/19&#xA; * @since 1.4&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../io/Closeable.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
