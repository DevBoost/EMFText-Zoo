<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/expressions ../../java.ecore#/5 http://www.emftext.org/java/instantiations ../../java.ecore#/8 http://www.emftext.org/java/literals ../../java.ecore#/9 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/operators ../../java.ecore#/12 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/references ../../java.ecore#/14 http://www.emftext.org/java/statements ../../java.ecore#/15 http://www.emftext.org/java/types ../../java.ecore#/16" name="AssertionError.java">
  <comments>/*&#xA; * @(#)AssertionError.java&#x9;1.7 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>lang</namespaces>
  <classifiers xsi:type="classifiers:Class" name="AssertionError">
    <members xsi:type="members:Constructor" name="AssertionError">
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constructs an AssertionError with no detail message.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="AssertionError">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@parameters.0"/>
          <callTarget xsi:type="literals:Super"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="detailMessage">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * This internal constructor does no processing on its string argument,&#xA;     * even if it is a null reference.  The public constructors will&#xA;     * never call this constructor with a null argument.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="AssertionError">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:StringReference" value=""/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.0"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </arguments>
          <callTarget xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="Throwable.class.xmi#//@classifiers.0/@members.12"/>
            <arguments xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="Throwable.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.0"/>
            </arguments>
          </expression>
        </statement>
        <condition xsi:type="expressions:InstanceOfExpression">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Throwable.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.0"/>
        </condition>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="detailMessage">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constructs an AssertionError with its detail message derived&#xA;     * from the specified object, which is converted to a string as&#xA;     * defined in &lt;i>The Java Language Specification, Second&#xA;     * Edition&lt;/i>, Section 15.18.1.1.&#xA;     *&lt;p>&#xA;     * If the specified object is an instance of &lt;tt>Throwable&lt;/tt>, it&#xA;     * becomes the &lt;i>cause&lt;/i> of the newly constructed assertion error.&#xA;     *&#xA;     * @param detailMessage value to be used in constructing detail message&#xA;     * @see   Throwable#getCause()&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="AssertionError">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:StringReference" value=""/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </arguments>
          <callTarget xsi:type="literals:This"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="detailMessage">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constructs an AssertionError with its detail message derived&#xA;     * from the specified &lt;code>boolean&lt;/code>, which is converted to&#xA;     * a string as defined in &lt;i>The Java Language Specification,&#xA;     * Second Edition&lt;/i>, Section 15.18.1.1.&#xA;     *&#xA;     * @param detailMessage value to be used in constructing detail message&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="AssertionError">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:StringReference" value=""/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.0"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </arguments>
          <callTarget xsi:type="literals:This"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="detailMessage">
        <typeReference xsi:type="types:Char"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constructs an AssertionError with its detail message derived&#xA;     * from the specified &lt;code>char&lt;/code>, which is converted to a&#xA;     * string as defined in &lt;i>The Java Language Specification, Second&#xA;     * Edition&lt;/i>, Section 15.18.1.1.&#xA;     *&#xA;     * @param detailMessage value to be used in constructing detail message&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="AssertionError">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:StringReference" value=""/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.0"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </arguments>
          <callTarget xsi:type="literals:This"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="detailMessage">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constructs an AssertionError with its detail message derived&#xA;     * from the specified &lt;code>int&lt;/code>, which is converted to a&#xA;     * string as defined in &lt;i>The Java Language Specification, Second&#xA;     * Edition&lt;/i>, Section 15.18.1.1.&#xA;     *&#xA;     * @param detailMessage value to be used in constructing detail message&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="AssertionError">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:StringReference" value=""/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </arguments>
          <callTarget xsi:type="literals:This"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="detailMessage">
        <typeReference xsi:type="types:Long"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constructs an AssertionError with its detail message derived&#xA;     * from the specified &lt;code>long&lt;/code>, which is converted to a&#xA;     * string as defined in &lt;i>The Java Language Specification, Second&#xA;     * Edition&lt;/i>, Section 15.18.1.1.&#xA;     *&#xA;     * @param detailMessage value to be used in constructing detail message&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="AssertionError">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:StringReference" value=""/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.0"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </arguments>
          <callTarget xsi:type="literals:This"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="detailMessage">
        <typeReference xsi:type="types:Float"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constructs an AssertionError with its detail message derived&#xA;     * from the specified &lt;code>float&lt;/code>, which is converted to a&#xA;     * string as defined in &lt;i>The Java Language Specification, Second&#xA;     * Edition&lt;/i>, Section 15.18.1.1.&#xA;     *&#xA;     * @param detailMessage value to be used in constructing detail message&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="AssertionError">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:StringReference" value=""/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </arguments>
          <callTarget xsi:type="literals:This"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="detailMessage">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constructs an AssertionError with its detail message derived&#xA;     * from the specified &lt;code>double&lt;/code>, which is converted to a&#xA;     * string as defined in &lt;i>The Java Language Specification, Second&#xA;     * Edition&lt;/i>, Section 15.18.1.1.&#xA;     *&#xA;     * @param detailMessage value to be used in constructing detail message&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Thrown to indicate that an assertion has failed.&#xA; *&#xA; * &lt;p>The seven one-argument public constructors provided by this&#xA; * class ensure that the assertion error returned by the invocation:&#xA; * &lt;pre>&#xA; *     new AssertionError(&lt;i>expression&lt;/i>)&#xA; * &lt;/pre>&#xA; * has as its detail message the &lt;i>string conversion&lt;/i> of&#xA; * &lt;i>expression&lt;/i> (as defined in &lt;a&#xA; * href=&quot;http://java.sun.com/docs/books/jls/second_edition/html/j.title.doc.html&quot;>&#xA; * &lt;i>The Java Language Specification, Second Edition&lt;/i>&lt;/a>, &#xA; * &lt;a href=&quot;http://java.sun.com/docs/books/jls/second_edition/html/expressions.doc.html#40220&quot;>&#xA; * Section  15.18.1.1&lt;/a>), regardless of the type of &lt;i>expression&lt;/i>.&#xA; *&#xA; * @version 1.7, 12/19/03&#xA; * @since   JDK1.4&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="Error.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
