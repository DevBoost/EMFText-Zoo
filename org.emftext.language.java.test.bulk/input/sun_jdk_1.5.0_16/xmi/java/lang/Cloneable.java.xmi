<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:modifiers="http://www.emftext.org/java/modifiers" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/modifiers ../../java.ecore#/11" name="Cloneable.java">
  <comments>/*&#xA; * @(#)Cloneable.java&#x9;1.16 04/01/17&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>lang</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="Cloneable">
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * A class implements the &lt;code>Cloneable&lt;/code> interface to &#xA; * indicate to the {@link java.lang.Object#clone()} method that it &#xA; * is legal for that method to make a &#xA; * field-for-field copy of instances of that class. &#xA; * &lt;p>&#xA; * Invoking Object's clone method on an instance that does not implement the &#xA; * &lt;code>Cloneable&lt;/code> interface results in the exception &#xA; * &lt;code>CloneNotSupportedException&lt;/code> being thrown.&#xA; * &lt;p>&#xA; * By convention, classes that implement this interface should override &#xA; * &lt;tt>Object.clone&lt;/tt> (which is protected) with a public method.&#xA; * See {@link java.lang.Object#clone()} for details on overriding this&#xA; * method.&#xA; * &lt;p>&#xA; * Note that this interface does &lt;i>not&lt;/i> contain the &lt;tt>clone&lt;/tt> method.&#xA; * Therefore, it is not possible to clone an object merely by virtue of the&#xA; * fact that it implements this interface.  Even if the clone method is invoked&#xA; * reflectively, there is no guarantee that it will succeed.&#xA; *&#xA; * @author  unascribed&#xA; * @version 1.16, 01/17/04&#xA; * @see     java.lang.CloneNotSupportedException&#xA; * @see     java.lang.Object#clone()&#xA; * @since   JDK1.0&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
