<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/expressions ../../java.ecore#/5 http://www.emftext.org/java/literals ../../java.ecore#/9 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/operators ../../java.ecore#/12 http://www.emftext.org/java/references ../../java.ecore#/14 http://www.emftext.org/java/statements ../../java.ecore#/15 http://www.emftext.org/java/types ../../java.ecore#/16" name="Number.java">
  <comments>/*&#xA; * @(#)Number.java&#x9;1.29 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>lang</namespaces>
  <classifiers xsi:type="classifiers:Class" name="Number">
    <members xsi:type="members:InterfaceMethod" name="intValue">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the value of the specified number as an &lt;code>int&lt;/code>.&#xA;     * This may involve rounding or truncation.&#xA;     *&#xA;     * @return  the numeric value represented by this object after conversion&#xA;     *          to type &lt;code>int&lt;/code>.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="longValue">
      <typeReference xsi:type="types:Long"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the value of the specified number as a &lt;code>long&lt;/code>.&#xA;     * This may involve rounding or truncation.&#xA;     *&#xA;     * @return  the numeric value represented by this object after conversion&#xA;     *          to type &lt;code>long&lt;/code>.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="floatValue">
      <typeReference xsi:type="types:Float"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the value of the specified number as a &lt;code>float&lt;/code>.&#xA;     * This may involve rounding.&#xA;     *&#xA;     * @return  the numeric value represented by this object after conversion&#xA;     *          to type &lt;code>float&lt;/code>.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="doubleValue">
      <typeReference xsi:type="types:Double"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the value of the specified number as a &lt;code>double&lt;/code>.&#xA;     * This may involve rounding.&#xA;     *&#xA;     * @return  the numeric value represented by this object after conversion&#xA;     *          to type &lt;code>double&lt;/code>.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:ClassMethod" name="byteValue">
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the value of the specified number as a &lt;code>byte&lt;/code>.&#xA;     * This may involve rounding or truncation.&#xA;     *&#xA;     * @return  the numeric value represented by this object after conversion&#xA;     *          to type &lt;code>byte&lt;/code>.&#xA;     * @since   JDK1.1&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:CastExpression">
          <typeReference xsi:type="types:Byte"/>
          <child xsi:type="references:MethodCall" target="//@classifiers.0/@members.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="shortValue">
      <typeReference xsi:type="types:Short"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the value of the specified number as a &lt;code>short&lt;/code>.&#xA;     * This may involve rounding or truncation.&#xA;     *&#xA;     * @return  the numeric value represented by this object after conversion&#xA;     *          to type &lt;code>short&lt;/code>.&#xA;     * @since   JDK1.1&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:CastExpression">
          <typeReference xsi:type="types:Short"/>
          <child xsi:type="references:MethodCall" target="//@classifiers.0/@members.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:Field" name="serialVersionUID">
      <initialValue xsi:type="expressions:UnaryExpression">
        <operators xsi:type="operators:Subtraction"/>
        <child xsi:type="literals:DecimalLongLiteral" decimalValue="8742448824652078965"/>
      </initialValue>
      <typeReference xsi:type="types:Long"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/** use serialVersionUID from JDK 1.0.2 for interoperability */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * The abstract class &lt;code>Number&lt;/code> is the superclass of classes&#xA; * &lt;code>BigDecimal&lt;/code>, &lt;code>BigInteger&lt;/code>,&#xA; * &lt;code>Byte&lt;/code>, &lt;code>Double&lt;/code>, &lt;code>Float&lt;/code>,&#xA; * &lt;code>Integer&lt;/code>, &lt;code>Long&lt;/code>, and &lt;code>Short&lt;/code>.&#xA; * &lt;p>&#xA; * Subclasses of &lt;code>Number&lt;/code> must provide methods to convert &#xA; * the represented numeric value to &lt;code>byte&lt;/code>, &lt;code>double&lt;/code>,&#xA; * &lt;code>float&lt;/code>, &lt;code>int&lt;/code>, &lt;code>long&lt;/code>, and&#xA; * &lt;code>short&lt;/code>.&#xA; *&#xA; * @author&#x9;Lee Boynton&#xA; * @author&#x9;Arthur van Hoff&#xA; * @version 1.29, 12/19/03&#xA; * @see     java.lang.Byte&#xA; * @see     java.lang.Double&#xA; * @see     java.lang.Float&#xA; * @see     java.lang.Integer&#xA; * @see     java.lang.Long&#xA; * @see     java.lang.Short&#xA; * @since   JDK1.0&#xA; */</comments>
    </annotationsAndModifiers>
    <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    <implements xsi:type="types:NamespaceClassifierReference">
      <namespaces>java</namespaces>
      <namespaces>io</namespaces>
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../io/Serializable.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
  </classifiers>
</containers:CompilationUnit>
