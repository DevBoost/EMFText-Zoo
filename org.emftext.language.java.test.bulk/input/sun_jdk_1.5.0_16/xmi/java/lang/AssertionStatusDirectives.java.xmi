<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/types ../../java.ecore#/16" name="AssertionStatusDirectives.java">
  <comments>/*&#xA; * @(#)AssertionStatusDirectives.java&#x9;1.4 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>lang</namespaces>
  <classifiers xsi:type="classifiers:Class" name="AssertionStatusDirectives">
    <comments>/**&#xA; * A collection of assertion status directives (such as &quot;enable assertions&#xA; * in package p&quot; or &quot;disable assertions in class c&quot;).  This class is used by&#xA; * the JVM to communicate the assertion status directives implied by &#xA; * the &lt;tt>java&lt;/tt> command line flags &lt;tt>-enableassertions&lt;/tt>&#xA; * (&lt;tt>-ea&lt;/tt>) and &lt;tt>-disableassertions&lt;/tt> (&lt;tt>-da&lt;/tt>).&#xA; *&#xA; * @since  1.4&#xA; * @author Josh Bloch&#xA; */</comments>
    <members xsi:type="members:Field" name="classes">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * The classes for which assertions are to be enabled or disabled.&#xA;     * The strings in this array are fully qualified class names (for&#xA;     * example,&quot;com.xyz.foo.Bar&quot;).&#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
    </members>
    <members xsi:type="members:Field" name="classEnabled">
      <typeReference xsi:type="types:Boolean">
        <comments>/**&#xA;     * A parallel array to &lt;tt>classes&lt;/tt>, indicating whether each class&#xA;     * is to have assertions enabled or disabled.  A value of &lt;tt>true&lt;/tt>&#xA;     * for &lt;tt>classEnabled[i]&lt;/tt> indicates that the class named by&#xA;     * &lt;tt>classes[i]&lt;/tt> should have assertions enabled; a value of&#xA;     * &lt;tt>false&lt;/tt> indicates that it should have classes disabled.&#xA;     * This array must have the same number of elements as &lt;tt>classes&lt;/tt>.&#xA;     *&#xA;     * &lt;p>In the case of conflicting directives for the same class, the&#xA;     * last directive for a given class wins.  In other words, if a string&#xA;     * &lt;tt>s&lt;/tt> appears multiple times in the &lt;tt>classes&lt;/tt> array&#xA;     * and &lt;tt>i&lt;/t> is the highest integer for which&#xA;     * &lt;tt>classes[i].equals(s)&lt;/tt>, then &lt;tt>classEnabled[i]&lt;/tt>&#xA;     * indicates whether assertions are to be enabled in class &lt;tt>s&lt;/tt>.&#xA;     */</comments>
      </typeReference>
      <arrayDimensionsBefore/>
    </members>
    <members xsi:type="members:Field" name="packages">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * The package-trees for which assertions are to be enabled or disabled.&#xA;     * The strings in this array are compete or partial package names&#xA;     * (for example, &quot;com.xyz&quot; or &quot;com.xyz.foo&quot;).&#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
    </members>
    <members xsi:type="members:Field" name="packageEnabled">
      <typeReference xsi:type="types:Boolean">
        <comments>/**&#xA;     * A parallel array to &lt;tt>packages&lt;/tt>, indicating whether each&#xA;     * package-tree is to have assertions enabled or disabled.  A value of&#xA;     * &lt;tt>true&lt;/tt> for &lt;tt>packageEnabled[i]&lt;/tt> indicates that the&#xA;     * package-tree named by &lt;tt>packages[i]&lt;/tt> should have assertions&#xA;     * enabled; a value of &lt;tt>false&lt;/tt> indicates that it should have&#xA;     * assertions disabled.  This array must have the same number of&#xA;     * elements as &lt;tt>packages&lt;/tt>.&#xA;     *&#xA;     * In the case of conflicting directives for the same package-tree, the&#xA;     * last directive for a given package-tree wins.  In other words, if a&#xA;     * string &lt;tt>s&lt;/tt> appears multiple times in the &lt;tt>packages&lt;/tt> array&#xA;     * and &lt;tt>i&lt;/t> is the highest integer for which&#xA;     * &lt;tt>packages[i].equals(s)&lt;/tt>, then &lt;tt>packageEnabled[i]&lt;/tt>&#xA;     * indicates whether assertions are to be enabled in package-tree&#xA;     * &lt;tt>s&lt;/tt>.&#xA;     */</comments>
      </typeReference>
      <arrayDimensionsBefore/>
    </members>
    <members xsi:type="members:Field" name="deflt">
      <typeReference xsi:type="types:Boolean">
        <comments>/**&#xA;     * Whether or not assertions in non-system classes are to be enabled&#xA;     * by default.&#xA;     */</comments>
      </typeReference>
    </members>
  </classifiers>
</containers:CompilationUnit>
