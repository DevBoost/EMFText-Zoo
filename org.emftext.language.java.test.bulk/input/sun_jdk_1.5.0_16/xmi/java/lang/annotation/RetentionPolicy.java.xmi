<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:modifiers="http://www.emftext.org/java/modifiers" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/modifiers ../../../java.ecore#/11" name="RetentionPolicy.java">
  <comments>/*&#xA; * @(#)RetentionPolicy.java&#x9;1.4 04/02/03&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>lang</namespaces>
  <namespaces>annotation</namespaces>
  <classifiers xsi:type="classifiers:Enumeration" name="RetentionPolicy">
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Annotation retention policy.  The constants of this enumerated type&#xA; * describe the various policies for retaining annotations.  They are used&#xA; * in conjunction with the {@link Retention} meta-annotation type to specify&#xA; * how long annotations are to be retained.&#xA; *&#xA; * @author  Joshua Bloch&#xA; * @since 1.5&#xA; */</comments>
    </annotationsAndModifiers>
    <constants name="SOURCE">
      <comments>/**&#xA;     * Annotations are to be discarded by the compiler.&#xA;     */</comments>
    </constants>
    <constants name="CLASS">
      <comments>/**&#xA;     * Annotations are to be recorded in the class file by the compiler&#xA;     * but need not be retained by the VM at run time.  This is the default&#xA;     * behavior.&#xA;     */</comments>
    </constants>
    <constants name="RUNTIME">
      <comments>/**&#xA;     * Annotations are to be recorded in the class file by the compiler and&#xA;     * retained by the VM at run time, so they may be read reflectively.&#xA;     *&#xA;     * @see java.lang.reflect.AnnotatedElement&#xA;     */</comments>
    </constants>
  </classifiers>
</containers:CompilationUnit>
