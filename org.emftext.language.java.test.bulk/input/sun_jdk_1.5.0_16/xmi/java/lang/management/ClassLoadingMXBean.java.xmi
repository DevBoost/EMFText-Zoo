<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="ClassLoadingMXBean.java">
  <comments>/*&#xA; * @(#)ClassLoadingMXBean.java&#x9;1.11 04/04/20&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>lang</namespaces>
  <namespaces>management</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="ClassLoadingMXBean">
    <members xsi:type="members:InterfaceMethod" name="getTotalLoadedClassCount">
      <typeReference xsi:type="types:Long"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;     * Returns the total number of classes that have been loaded since&#xA;     * the Java virtual machine has started execution.&#xA;     *&#xA;     * @return the total number of classes loaded.&#xA;     *&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getLoadedClassCount">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;     * Returns the number of classes that are currently loaded in the &#xA;     * Java virtual machine.&#xA;     *&#xA;     * @return the number of currently loaded classes.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getUnloadedClassCount">
      <typeReference xsi:type="types:Long"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;     * Returns the total number of classes unloaded since the Java virtual machine&#xA;     * has started execution.&#xA;     *&#xA;     * @return the total number of unloaded classes.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="isVerbose">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Tests if the verbose output for the class loading system is enabled.&#xA;     *&#xA;     * @return &lt;tt>true&lt;/tt> if the verbose output for the class loading&#xA;     * system is enabled; &lt;tt>false&lt;/tt> otherwise.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setVerbose">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Enables or disables the verbose output for the class loading &#xA;     * system.  The verbose output information and the output stream&#xA;     * to which the verbose information is emitted are implementation&#xA;     * dependent.  Typically, a Java virtual machine implementation &#xA;     * prints a message each time a class file is loaded. &#xA;     *&#xA;     * &lt;p>This method can be called by multiple threads concurrently.&#xA;     * Each invocation of this method enables or disables the verbose&#xA;     * output globally.&#xA;     *&#xA;     * @param value &lt;tt>true&lt;/tt> to enable the verbose output;&#xA;     *              &lt;tt>false&lt;/tt> to disable.&#xA;     *&#xA;     * @exception  java.lang.SecurityException if a security manager &#xA;     *             exists and the caller does not have &#xA;     *             ManagementPermission(&quot;control&quot;).&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * The management interface for the class loading system of &#xA; * the Java virtual machine. &#xA; *&#xA; * &lt;p> A Java virtual machine has a single instance of the implementation&#xA; * class of this interface.  This instance implementing this interface is &#xA; * an &lt;a href=&quot;ManagementFactory.html#MXBean&quot;>MXBean&lt;/a>&#xA; * that can be obtained by calling&#xA; * the {@link ManagementFactory#getClassLoadingMXBean} method or&#xA; * from the {@link ManagementFactory#getPlatformMBeanServer&#xA; * platform &lt;tt>MBeanServer&lt;/tt>} method.&#xA; *&#xA; * &lt;p>The &lt;tt>ObjectName&lt;/tt> for uniquely identifying the MXBean for &#xA; * the class loading system within an &lt;tt>MBeanServer&lt;/tt> is:&#xA; * &lt;blockquote>&#xA; * {@link ManagementFactory#CLASS_LOADING_MXBEAN_NAME &#xA; *        &lt;tt>java.lang:type=ClassLoading&lt;/tt>}&#xA; * &lt;/blockquote>&#xA; *&#xA; * @see &lt;a href=&quot;../../../javax/management/package-summary.html&quot;>&#xA; *      JMX Specification.&lt;/a>&#xA; * @see &lt;a href=&quot;package-summary.html#examples&quot;>&#xA; *      Ways to Access MXBeans&lt;/a>&#xA; *&#xA; * @author  Mandy Chung&#xA; * @version 1.11, 04/20/04&#xA; * @since   1.5 &#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
