<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/types ../../java.ecore#/16" name="ThreadDeath.java">
  <comments>/*&#xA; * @(#)ThreadDeath.java&#x9;1.15 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>lang</namespaces>
  <classifiers xsi:type="classifiers:Class" name="ThreadDeath">
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * An instance of &lt;code>ThreadDeath&lt;/code> is thrown in the victim &#xA; * thread when the &lt;code>stop&lt;/code> method with zero arguments in &#xA; * class &lt;code>Thread&lt;/code> is called. &#xA; * &lt;p>&#xA; * An application should catch instances of this class only if it &#xA; * must clean up after being terminated asynchronously. If &#xA; * &lt;code>ThreadDeath&lt;/code> is caught by a method, it is important &#xA; * that it be rethrown so that the thread actually dies. &#xA; * &lt;p>&#xA; * The top-level error handler does not print out a message if &#xA; * &lt;code>ThreadDeath&lt;/code> is never caught. &#xA; * &lt;p>&#xA; * The class &lt;code>ThreadDeath&lt;/code> is specifically a subclass of &#xA; * &lt;code>Error&lt;/code> rather than &lt;code>Exception&lt;/code>, even though &#xA; * it is a &quot;normal occurrence&quot;, because many applications &#xA; * catch all occurrences of &lt;code>Exception&lt;/code> and then discard &#xA; * the exception. &#xA; *&#xA; * @author unascribed&#xA; * @version 1.15, 12/19/03&#xA; * @see     java.lang.Thread#stop()&#xA; * @since   JDK1.0&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="Error.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
