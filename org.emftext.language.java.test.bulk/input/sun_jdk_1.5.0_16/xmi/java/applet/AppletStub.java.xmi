<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/imports ../../java.ecore#/7 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/types ../../java.ecore#/16" name="AppletStub.java">
  <comments>/*&#xA; * @(#)AppletStub.java&#x9;1.25 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>applet</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>net</namespaces>
    <classifier xsi:type="classifiers:Class" href="../net/URL.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="AppletStub">
    <members xsi:type="members:InterfaceMethod" name="isActive">
      <typeReference xsi:type="types:Boolean">
        <comments>/**&#xA;     * Determines if the applet is active. An applet is active just&#xA;     * before its &lt;code>start&lt;/code> method is called. It becomes&#xA;     * inactive just before its &lt;code>stop&lt;/code> method is called.&#xA;     *&#xA;     * @return  &lt;code>true&lt;/code> if the applet is active;&#xA;     *          &lt;code>false&lt;/code> otherwise.&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getDocumentBase">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * Gets the URL of the document in which the applet is embedded.&#xA;     * For example, suppose an applet is contained&#xA;     * within the document:&#xA;     * &lt;blockquote>&lt;pre>&#xA;     *    http://java.sun.com/products/jdk/1.2/index.html&#xA;     * &lt;/pre>&lt;/blockquote>&#xA;     * The document base is:&#xA;     * &lt;blockquote>&lt;pre>&#xA;     *    http://java.sun.com/products/jdk/1.2/index.html&#xA;     * &lt;/pre>&lt;/blockquote>&#xA;     *&#xA;     * @return  the {@link java.net.URL} of the document that contains the&#xA;     *          applet.&#xA;     * @see     java.applet.AppletStub#getCodeBase()&#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="../net/URL.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getCodeBase">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * Gets the base URL. This is the URL of the directory which contains the applet.&#xA;     *&#xA;     * @return  the base {@link java.net.URL} of&#xA;     *          the directory which contains the applet.&#xA;     * @see     java.applet.AppletStub#getDocumentBase()&#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="../net/URL.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getParameter">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * Returns the value of the named parameter in the HTML tag. For&#xA;     * example, if an applet is specified as&#xA;     * &lt;blockquote>&lt;pre>&#xA;     * &amp;lt;applet code=&quot;Clock&quot; width=50 height=50&amp;gt;&#xA;     * &amp;lt;param name=Color value=&quot;blue&quot;&amp;gt;&#xA;     * &amp;lt;/applet&amp;gt;&#xA;     * &lt;/pre>&lt;/blockquote>&#xA;     * &lt;p>&#xA;     * then a call to &lt;code>getParameter(&quot;Color&quot;)&lt;/code> returns the&#xA;     * value &lt;code>&quot;blue&quot;&lt;/code>.&#xA;     *&#xA;     * @param   name   a parameter name.&#xA;     * @return  the value of the named parameter,&#xA;     * or &lt;tt>null&lt;/tt> if not set.&#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getAppletContext">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * Gets a handler to the applet's context.&#xA;     *&#xA;     * @return  the applet's context.&#xA;     */</comments>
          <target xsi:type="classifiers:Interface" href="AppletContext.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="appletResize">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Called when the applet wants to be resized.&#xA;     *&#xA;     * @param   width    the new requested width for the applet.&#xA;     * @param   height   the new requested height for the applet.&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="width">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="height">
        <typeReference xsi:type="types:Int"/>
      </parameters>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * When an applet is first created, an applet stub is attached to it&#xA; * using the applet's &lt;code>setStub&lt;/code> method. This stub&#xA; * serves as the interface between the applet and the browser&#xA; * environment or applet viewer environment in which the application&#xA; * is running.&#xA; *&#xA; * @author &#x9;Arthur van Hoff&#xA; * @version     1.25, 12/19/03&#xA; * @see         java.applet.Applet#setStub(java.applet.AppletStub)&#xA; * @since       JDK1.0&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
