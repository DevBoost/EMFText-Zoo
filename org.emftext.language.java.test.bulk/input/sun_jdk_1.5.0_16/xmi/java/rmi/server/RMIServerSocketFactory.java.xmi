<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../java.ecore#/7 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="RMIServerSocketFactory.java">
  <comments>/*&#xA; * @(#)RMIServerSocketFactory.java&#x9;1.11 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>rmi</namespaces>
  <namespaces>server</namespaces>
  <imports xsi:type="imports:PackageImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>java</namespaces>
    <namespaces>net</namespaces>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="RMIServerSocketFactory">
    <members xsi:type="members:InterfaceMethod" name="createServerSocket">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../net/ServerSocket.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="port">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Create a server socket on the specified port (port 0 indicates&#xA;     * an anonymous port).&#xA;     * @param  port the port number&#xA;     * @return the server socket on the specified port&#xA;     * @exception IOException if an I/O error occurs during server socket&#xA;     * creation&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * An &lt;code>RMIServerSocketFactory&lt;/code> instance is used by the RMI runtime&#xA; * in order to obtain server sockets for RMI calls.  A remote object can be&#xA; * associated with an &lt;code>RMIServerSocketFactory&lt;/code> when it is&#xA; * created/exported via the constructors or &lt;code>exportObject&lt;/code> methods&#xA; * of &lt;code>java.rmi.server.UnicastRemoteObject&lt;/code> and&#xA; * &lt;code>java.rmi.activation.Activatable&lt;/code> .&#xA; *&#xA; * &lt;p>An &lt;code>RMIServerSocketFactory&lt;/code> instance associated with a remote&#xA; * object is used to obtain the &lt;code>ServerSocket&lt;/code> used to accept&#xA; * incoming calls from clients.&#xA; *&#xA; * &lt;p>An &lt;code>RMIServerSocketFactory&lt;/code> instance can also be associated&#xA; * with a remote object registry so that clients can use custom socket&#xA; * communication with a remote object registry.&#xA; *&#xA; * &lt;p>An implementation of this interface &#xA; * should implement {@link Object#equals} to return &lt;code>true&lt;/code> when&#xA; * passed an instance that represents the same (functionally equivalent)&#xA; * server socket factory, and &lt;code>false&lt;/code> otherwise (and it should also&#xA; * implement {@link Object#hashCode} consistently with its&#xA; * &lt;code>Object.equals&lt;/code> implementation).&#xA; *&#xA; * @version 1.11, 12/19/03&#xA; * @author  Ann Wollrath&#xA; * @author  Peter Jones&#xA; * @since   1.2&#xA; * @see     java.rmi.server.UnicastRemoteObject&#xA; * @see     java.rmi.activation.Activatable&#xA; * @see     java.rmi.registry.LocateRegistry&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
