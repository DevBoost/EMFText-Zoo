<?xml version="1.0" encoding="UTF-8"?>
<genmodel:GenModel xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore"
    xmlns:genmodel="http://www.eclipse.org/emf/2002/GenModel" copyrightText="Copyright (c) 2006-2011&#xA;Software Technology Group, Dresden University of Technology&#xA;&#xA;All rights reserved. This program and the accompanying materials&#xA;are made available under the terms of the Eclipse Public License v1.0 &#xA;which accompanies this distribution, and is available at&#xA;http://www.eclipse.org/legal/epl-v10.html&#xA;&#xA;Contributors:&#xA;  Software Technology Group - TU Dresden, Germany &#xA;     - initial API and implementation&#xA;"
    modelDirectory="/org.emftext.language.regexp/src-gen" modelPluginID="org.emftext.language.regexp"
    modelName="Regular_expressions" importerID="org.eclipse.emf.importer.ecore" complianceLevel="5.0"
    copyrightFields="false">
  <foreignModel>regular_expressions.ecore</foreignModel>
  <genPackages prefix="Regexp" basePackage="org.emftext.language" disposableProviderFactory="true"
      ecorePackage="regular_expressions.ecore#/">
    <genEnums typeSafeEnumCompatible="false" ecoreEnum="regular_expressions.ecore#//Multiplicity">
      <genEnumLiterals ecoreEnumLiteral="regular_expressions.ecore#//Multiplicity/mandatory"/>
      <genEnumLiterals ecoreEnumLiteral="regular_expressions.ecore#//Multiplicity/plus"/>
      <genEnumLiterals ecoreEnumLiteral="regular_expressions.ecore#//Multiplicity/questionMark"/>
      <genEnumLiterals ecoreEnumLiteral="regular_expressions.ecore#//Multiplicity/star"/>
    </genEnums>
    <genEnums typeSafeEnumCompatible="false" ecoreEnum="regular_expressions.ecore#//EEnum0"/>
    <genClasses ecoreClass="regular_expressions.ecore#//RegularExpression"/>
    <genClasses ecoreClass="regular_expressions.ecore#//Alternative">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference regular_expressions.ecore#//Alternative/elements"/>
    </genClasses>
    <genClasses ecoreClass="regular_expressions.ecore#//Element">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference regular_expressions.ecore#//Element/atom"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute regular_expressions.ecore#//Element/suffix"/>
    </genClasses>
    <genClasses ecoreClass="regular_expressions.ecore#//Atom"/>
    <genClasses ecoreClass="regular_expressions.ecore#//ComplexRange">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference regular_expressions.ecore#//ComplexRange/ranges"/>
    </genClasses>
    <genClasses image="false" ecoreClass="regular_expressions.ecore#//AtomicRange"/>
    <genClasses ecoreClass="regular_expressions.ecore#//IntervalRange">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute regular_expressions.ecore#//IntervalRange/from"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute regular_expressions.ecore#//IntervalRange/to"/>
    </genClasses>
    <genClasses ecoreClass="regular_expressions.ecore#//Terminal"/>
    <genClasses ecoreClass="regular_expressions.ecore#//Not">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference regular_expressions.ecore#//Not/body"/>
    </genClasses>
    <genClasses ecoreClass="regular_expressions.ecore#//Block"/>
    <genClasses image="false" ecoreClass="regular_expressions.ecore#//Choice">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference regular_expressions.ecore#//Choice/alternatives"/>
    </genClasses>
    <genClasses ecoreClass="regular_expressions.ecore#//CharTerminal">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute regular_expressions.ecore#//CharTerminal/value"/>
    </genClasses>
    <genClasses ecoreClass="regular_expressions.ecore#//StringTerminal">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute regular_expressions.ecore#//StringTerminal/value"/>
    </genClasses>
    <genClasses ecoreClass="regular_expressions.ecore#//Dot"/>
    <genClasses image="false" ecoreClass="regular_expressions.ecore#//Compound"/>
  </genPackages>
</genmodel:GenModel>
